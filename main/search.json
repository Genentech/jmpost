[{"path":"https://genentech.github.io/jmpost/articles/custom-model.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Fitting a Custom Longitudinal Model","text":"vignette shows complete example fit custom longitudinal model. Note full details various different interfaces can found “Extending jmpost” vignette. example implements Wang, Sung et al. 2009 mixed exponential decay linear growth model along exponential survival model. particular following model implemented: Longitudinal Model: yi(t)∼N(μi(t),σ2)μi(t)=bie−sit+gitbi∼LogNormal(μb,σb)si∼LogNormal(μs,σs)gi∼LogNormal(μg,σg) \\begin{align} y_{}(t) &\\sim N\\left(\\mu_i(t),\\ \\sigma^2\\right) \\\\ \\\\ \\mu_i(t) &= b_i e^{-s_it} + g_i t  \\\\ \\\\ b_i &\\sim \\text{LogNormal}(\\mu_b,\\ \\sigma_b) \\\\ s_i &\\sim \\text{LogNormal}(\\mu_s,\\ \\sigma_s) \\\\ g_i &\\sim \\text{LogNormal}(\\mu_g,\\ \\sigma_g) \\\\ \\end{align} : * ii subject index * yi(t)y_{}(t) observed tumour size measurement subject ii time tt * μi(t)\\mu_i(t) expected tumour size measurement subject ii time tt * bib_i subject baseline tumour size measurement * sis_i subject kinetics shrinkage parameter * gig_i subject kinetics tumour growth parameter * μθ\\mu_{\\theta} population mean parameter θ\\theta * ωθ\\omega_{\\theta} population standard deviation parameter θ\\theta. Survival Model: log(hi(t))=log(λ0)+Xiβ+G(t∣bi,si,gi) \\log(h_i(t)) = \\log(\\lambda_0) + X_i \\beta + G(t \\mid b_i, s_i, g_i) : λ0\\lambda_0 baseline hazard rate. example using exponential survival model e.g. h0(t)=λ0h_0(t) = \\lambda_0 tt event time G(.)G(.) link function maps subjects tumour growth parameters contribution log-hazard function XiX_i subjects covariate design matrix β\\beta corresponding coefficients vector scale design matrix covariates contribution log-hazard function example just consider derivative growth function link function, e.g. G(t∣bi,si,gi)=−sibie−sit+gi G(t \\mid b_i, s_i, g_i) = -s_i b_i e^{-s_i t} + g_i keep example simple, number features implemented package’s internal models skipped; may wish consider adding implementing model real project. particular following omitted example: Handling censored observations (e.g. observations limit quantification) Separate populations per study / arm Non-centred parameterisation hierarchical parameters (parameterisation leads better performance small numbers observations per subject). Handling negative observation time (e.g. observations taken start study) reference following libraries used example:","code":"library(jmpost) #> Registered S3 methods overwritten by 'ggpp': #>   method                  from    #>   heightDetails.titleGrob ggplot2 #>   widthDetails.titleGrob  ggplot2 #> CmdStan path set to: /root/.cmdstan/cmdstan-2.36.0 library(ggplot2) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(loo) #> This is loo version 2.8.0 #> - Online documentation and vignettes at mc-stan.org/loo #> - As of v2.0.0 loo defaults to 1 core but we recommend using as many as possible. Use the 'cores' argument or set options(mc.cores = NUM_CORES) for an entire session."},{"path":"https://genentech.github.io/jmpost/articles/custom-model.html","id":"generating-simulated-data","dir":"Articles","previous_headings":"","what":"Generating Simulated Data","title":"Fitting a Custom Longitudinal Model","text":"order confident model working correctly first generate simulated data. allow us compare true parameter values estimated parameter values. can done using SimJointData constructor function follows:","code":"# Define our simulation parameters + object SimWang <- setClass(     \"SimWang\",     contains = \"SimLongitudinal\",     slots = c(         times = \"numeric\",         mu_b = \"numeric\",         mu_s = \"numeric\",         mu_g = \"numeric\",         omega_b = \"numeric\",         omega_s = \"numeric\",         omega_g = \"numeric\",         sigma = \"numeric\",         link_dsld = \"numeric\"     ) )  # Method to generate individual subjects parameters from the hierarchical distributions sampleSubjects.SimWang <- function(object, subjects_df) {     nsub <- nrow(subjects_df)     subjects_df$b <- stats::rlnorm(nsub, log(object@mu_b), object@omega_b)     subjects_df$s <- stats::rlnorm(nsub, log(object@mu_s), object@omega_s)     subjects_df$g <- stats::rlnorm(nsub, log(object@mu_g), object@omega_g)     subjects_df }  # Method to generate observations for each individual subject sampleObservations.SimWang <- function(object, times_df) {     nobs <- nrow(times_df)     calc_mu <- function(time, b, s, g) b * exp(-s * time) + g * time     calc_dsld <- function(time, b, s, g) -s * b * exp(-s * time) + g      times_df$mu_sld <- calc_mu(times_df$time, times_df$b, times_df$s, times_df$g)     times_df$dsld <- calc_dsld(times_df$time, times_df$b, times_df$s, times_df$g)     times_df$sld <- stats::rnorm(nobs, times_df$mu_sld, object@sigma)     times_df$log_haz_link <- object@link_dsld * times_df$dsld     times_df }   # Generate simulated data set.seed(1622) joint_data_sim <- SimJointData(     design = list(SimGroup(80, \"Arm-A\", \"Study-X\")),     survival = SimSurvivalExponential(         lambda = (1 / 400) * 365,         time_max = 4,         time_step = 1 / 365,         lambda_censor = 1 / 9000,         beta_cat = c(\"A\" = 0, \"B\" = -0.1, \"C\" = 0.5),         beta_cont = 0.3     ),     longitudinal = SimWang(         times = c(1, 50, 100, 200, 300, 400, 600,                 800, 1000, 1300, 1600) / 365,         mu_b = 60,         mu_s = 2,         mu_g = 10,         omega_b = 0.3,         omega_s = 0.3,         omega_g = 0.3,         sigma = 1.5,         link_dsld = 0.2     ),     .silent = TRUE )  dat_lm <- joint_data_sim@longitudinal dat_os <- joint_data_sim@survival   # Select 6 random subjects to plot dat_lm_plot <- dat_lm |>     filter(subject %in% sample(dat_os$subject, 6))  ggplot(dat_lm_plot, aes(x = time, y = sld, group = subject, color = subject)) +     geom_line() +     geom_point() +     labs(x = \"Time (years)\", y = \"Tumour Size\", col = \"Subject\") +     theme_bw() +      theme(legend.position = \"bottom\")"},{"path":"https://genentech.github.io/jmpost/articles/custom-model.html","id":"defining-the-longitudinal-model","dir":"Articles","previous_headings":"","what":"Defining the Longitudinal Model","title":"Fitting a Custom Longitudinal Model","text":"longitudinal model can implemented extending LongitudinalModel class. can done follows: Please note parameters argument used specify priors model name argument Parameter’s objects must match name parameter used within corresponding Stan code. StanModule object contains stan code used implement model. particular model Stan code specified custom-model.stan file follows:","code":"WangModel <- setClass(     \"WangModel\",     contains = \"LongitudinalModel\" )  longmodel <- WangModel(     LongitudinalModel(         name = \"Wang\",         stan = StanModule(\"custom-model.stan\"),         parameters = ParameterList(             Parameter(name = \"mu_baseline\", prior = prior_lognormal(log(60), 1), size = 1),             Parameter(name = \"mu_shrinkage\", prior = prior_lognormal(log(2), 1), size = 1),             Parameter(name = \"mu_growth\", prior = prior_lognormal(log(10), 1), size = 1),             Parameter(name = \"sigma_baseline\", prior = prior_lognormal(0.3, 1), size = 1),             Parameter(name = \"sigma_shrinkage\", prior = prior_lognormal(0.3, 1), size = 1),             Parameter(name = \"sigma_growth\", prior = prior_lognormal(0.3, 1), size = 1),             Parameter(name = \"sigma\", prior = prior_lognormal(1.5, 1), size = 1),             # The following is only required if we want jmpost to generate             # initial values automatically for us             Parameter(                 name = \"baseline_idv\",                 prior = prior_init_only(prior_lognormal(log(60), 1)),                 size = \"n_subjects\"             ),             Parameter(                 name = \"shrinkage_idv\",                 prior = prior_init_only(prior_lognormal(log(2), 1)),                 size = \"n_subjects\"             ),             Parameter(                 name = \"growth_idv\",                 prior = prior_init_only(prior_lognormal(log(10), 1)),                 size = \"n_subjects\"             )         )     ) ) functions {     // Expected tumour size value     vector sld(vector tumour_time, vector baseline, vector shrinkage, vector growth) {         vector[rows(tumour_time)] tumour_value;         tumour_value = baseline .* exp(- shrinkage .* tumour_time)  +                        growth .* tumour_time;         return tumour_value;     } }  parameters{     // Declare individual subject parameters     vector<lower=0>[n_subjects] baseline_idv;     vector<lower=0>[n_subjects] shrinkage_idv;     vector<lower=0>[n_subjects] growth_idv;      // Declare population level parameters     real<lower=0> mu_baseline;     real<lower=0> mu_shrinkage;     real<lower=0> mu_growth;     real<lower=0> sigma_baseline;     real<lower=0> sigma_shrinkage;     real<lower=0> sigma_growth;      // Declare standard deviation for the overall model error     real<lower=0> sigma; }  transformed parameters{      // Calculated the fitted Tumour values     vector[n_tumour_all] Ypred = sld(         tumour_time,         baseline_idv[subject_tumour_index],         shrinkage_idv[subject_tumour_index],         growth_idv[subject_tumour_index]     );      // Calculate per observation log-likelihood for {loo} integration     // These values are automatically added to the target for you     long_obvs_log_lik = vect_normal_log_dens(         tumour_value,         Ypred,         rep_vector(sigma, n_tumour_all) // broadcast sigma to the length of Ypred     ); }  model {     // Define the heirarchical relationship between the individual     // and population level parameters     baseline_idv ~ lognormal(log(mu_baseline), sigma_baseline);     shrinkage_idv ~ lognormal(log(mu_shrinkage), sigma_shrinkage);     growth_idv ~ lognormal(log(mu_growth), sigma_growth); }"},{"path":"https://genentech.github.io/jmpost/articles/custom-model.html","id":"defining-the-link-function","dir":"Articles","previous_headings":"","what":"Defining the Link Function","title":"Fitting a Custom Longitudinal Model","text":"stated introduction, link function model going derivative growth function. can implemented using jmpost framework follows: Stan code custom-model-enable-link.stan file follows: Stan code custom-model-dsld.stan file follows: Note one link function defined enableLink method strictly necessary Stan code contains implemented directly stan slot LinkComponent object. However, multiple link functions enableLink method required avoid duplicating implementation link_function_inputs matrix.","code":"enableLink.WangModel <- function(object, ...) {     object@stan <- merge(         object@stan,         StanModule(\"custom-model-enable-link.stan\")     )     object }   link <- LinkComponent(     stan = StanModule(\"custom-model-dsld.stan\"),     prior = prior_normal(0, 1),     key = \"link_dsld\" ) transformed parameters {     // Define matrix required for link functions     matrix[n_subjects, 3] link_function_inputs;     link_function_inputs[,1] = baseline_idv;     link_function_inputs[,2] = shrinkage_idv;     link_function_inputs[,3] = growth_idv; } functions {     // Provide definition for the dsld link function     matrix link_dsld_contrib(matrix time, matrix link_function_inputs) {         int nrow = rows(time);         int ncol = cols(time);         // broadcast input vectors to match the size of the time matrix         matrix[nrow, ncol] baseline = rep_matrix(link_function_inputs[,1], ncol);         matrix[nrow, ncol] shrinkage = rep_matrix(link_function_inputs[,2], ncol);         matrix[nrow, ncol] growth = rep_matrix(link_function_inputs[,3], ncol);         return growth - baseline .* shrinkage .* exp(- shrinkage .* time);     } }"},{"path":"https://genentech.github.io/jmpost/articles/custom-model.html","id":"sampling-the-joint-model","dir":"Articles","previous_headings":"","what":"Sampling the Joint model","title":"Fitting a Custom Longitudinal Model","text":"longitudinal model defined can now specify sample full joint model.","code":"model <- JointModel(     longitudinal = longmodel,     survival = SurvivalExponential(lambda = prior_gamma(1, 1)),     link = link )  joint_data <- DataJoint(     subject = DataSubject(         data = dat_os,         subject = \"subject\",         arm = \"arm\",         study = \"study\"     ),     survival = DataSurvival(         data = dat_os,         formula = Surv(time, event) ~ cov_cat + cov_cont     ),     longitudinal = DataLongitudinal(         data = dat_lm,         formula = sld ~ time     ) )  model_samples <- sampleStanModel(     model,     data = joint_data,     iter_warmup = 800,     iter_sampling = 1000,     chains = 1,     refresh = 0,     parallel_chains = 1 ) #> Running MCMC with 1 chain... #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmptigQdi/model-1088125cdd6e.stan', line 507, column 4 to column 79) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmptigQdi/model-1088125cdd6e.stan', line 507, column 4 to column 79) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmptigQdi/model-1088125cdd6e.stan', line 507, column 4 to column 79) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: lognormal_lpdf: Scale parameter is 0, but must be positive finite! (in '/tmp/RtmptigQdi/model-1088125cdd6e.stan', line 484, column 4 to column 63) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmptigQdi/model-1088125cdd6e.stan', line 507, column 4 to column 79) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 finished in 9.3 seconds.  vars <- c(     \"mu_baseline\", \"mu_shrinkage\", \"mu_growth\", \"sigma\",     \"link_dsld\", \"sm_exp_lambda\" ) cmdstanr::as.CmdStanMCMC(model_samples)$summary(vars) #> # A tibble: 6 × 10 #>   variable       mean median     sd    mad     q5    q95  rhat ess_bulk ess_tail #>   <chr>         <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> <dbl>    <dbl>    <dbl> #> 1 mu_baseline  61.7   61.7   2.10   2.05   58.3   65.0   1.00     1630.     481. #> 2 mu_shrinkage  2.04   2.04  0.0675 0.0658  1.93   2.15  1.00     1199.     721. #> 3 mu_growth    10.2   10.2   0.288  0.279   9.75  10.7   1.00     1873.     690. #> 4 sigma         1.52   1.52  0.0435 0.0441  1.45   1.60  1.00      863.     631. #> 5 link_dsld     0.219  0.218 0.0260 0.0259  0.178  0.263 1.00     1527.     787. #> 6 sm_exp_lamb…  1.01   0.998 0.207  0.207   0.682  1.36  0.999     850.     548."},{"path":"https://genentech.github.io/jmpost/articles/custom-model.html","id":"generating-quantities-of-interest","dir":"Articles","previous_headings":"","what":"Generating Quantities of Interest","title":"Fitting a Custom Longitudinal Model","text":"order enable generation population individual level quantities interest need implement required generated quantity objects functions outlined “Extending jmpost” vignette. can done follows: Stan code custom-model-gq.stan file follows: place now able generate quantities needed; can done subject level via:  population level via:","code":"enableGQ.WangModel <- function(object, ...) {     StanModule(\"custom-model-gq.stan\") } functions {     // Define required function for enabling generated quantities     vector lm_predict_value(vector time, matrix long_gq_parameters) {         return sld(             time,             long_gq_parameters[,1],  // baseline             long_gq_parameters[,2],  // shrinkage             long_gq_parameters[,3]   // growth         );     } }   generated quantities {     // Enable individual subject predictions / quantities e.g.     // `GridFixed()` / `GridObservation()` / `GridGrouped()` / `GridEven     matrix[n_subjects, 3] long_gq_parameters;     long_gq_parameters[, 1] = baseline_idv;     long_gq_parameters[, 2] = shrinkage_idv;     long_gq_parameters[, 3] = growth_idv;      // Enable Population level predictions / quantities by taking the median of the     // hierarchical distribution e.g. `GridPopulation()`     matrix[gq_n_quant, 3] long_gq_pop_parameters;     long_gq_pop_parameters[, 1] = rep_vector(mu_baseline, gq_n_quant);     long_gq_pop_parameters[, 2] = rep_vector(mu_shrinkage, gq_n_quant);     long_gq_pop_parameters[, 3] = rep_vector(mu_growth, gq_n_quant); } selected_subjects <- head(dat_os$subject, 4) long_quantities_idv <- LongitudinalQuantities(     model_samples,     grid = GridFixed(subjects = selected_subjects) ) autoplot(long_quantities_idv) long_quantities_pop <- LongitudinalQuantities(     model_samples,     grid = GridPopulation() ) autoplot(long_quantities_pop)"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"important","dir":"Articles","previous_headings":"","what":"IMPORTANT","title":"Extending jmpost","text":"Please note document currently work--progress contain complete information package yet.","code":""},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-survival-distributions","dir":"Articles","previous_headings":"IMPORTANT","what":"Custom Survival Distributions","title":"Extending jmpost","text":"Survival distributions jmpost specified via contribution log-hazard function. Note present distributions implemented proportional hazards models. means distribution proportional hazards property distribution specific individual subject family. say distribution family e.g. “Log-Logistic” just defining baseline survival distribution . Survival distributions implemented S4 classes inherit SurvivalModel. two main components SurvivalModel object stan parameters slots. parameters slot ParametersList() object used specify prior distributions parameter used survival distribution well design matrix coefficients (please see “Prior Specification” section ). stan slot StanModule() object needs define following: parameters block distributions parameters must formally declared. transformed parameters block must define vector called pars_os contains one element parameter used survival distribution. functions block must define function called log_h0 returns log-hazard contribution. function must following signature: : - return matrix must dimensionality time argument matrix element log-hazard contribution corresponding timepoint time matrix. - time matrix contains one row per unique subject one column per timepoint subject - pars_os vector defined (2) contains parameters particular distribution. example following roughly equivalent Weibull distribution implemented:","code":"matrix log_h0(matrix time, vector pars_os) SurvivalWeibullPH <- function(     lambda = prior_gamma(2, 0.5),     gamma = prior_gamma(2, 0.5),     beta = prior_normal(0, 2) ) {     stan <- StanModule(\"         functions {             matrix log_h0(matrix time, vector pars_os) {                 matrix[rows(time), cols(time)] result;                 result = log(pars_os[1]) + log(pars_os[2]) + (pars_os[2] - 1) * log(time);                 return result;             }         }          parameters {             real<lower=0> sm_weibull_ph_lambda;             real<lower=0> sm_weibull_ph_gamma;         }          transformed parameters {             vector[2] pars_os = [sm_weibull_ph_lambda, sm_weibull_ph_gamma]';         }     \")     SurvivalModel(         stan = stan,         parameters = ParameterList(             Parameter(name = \"sm_weibull_ph_lambda\", prior = lambda, size = 1),             Parameter(name = \"sm_weibull_ph_gamma\", prior = gamma, size = 1),             Parameter(name = \"beta_os_cov\", prior = beta, size = \"p_os_cov_design\")         )     ) }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-longitudinal-models","dir":"Articles","previous_headings":"IMPORTANT","what":"Custom Longitudinal Models","title":"Extending jmpost","text":"Similar survival model longitudinal models implemented S4 classes inherit LongitudinalModel class. two main components LongitudinalModel object stan parameters slots specify underlying Stan code prior distributions models parameters respectively (please see “Prior Specification” section ). Unlike survival distributions, longitudinal models lot flexible less constraints implemented. aren’t specific variables functions need define. said several optional features jmpost require use specific interfaces want enable model.","code":""},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"loo-integration","dir":"Articles","previous_headings":"IMPORTANT > Custom Longitudinal Models","what":"1) loo integration","title":"Extending jmpost","text":"want use loo package calculate leave-one-cross-validation need populate long_obvs_log_lik vector. vector contain log-likelihood contribution individual tumour observation. vector automatically 0-initialised, thus code needs populate . : - tumour_value, n_tumour_obs predefined data objects (see “Longitudinal Data Objects” section ) - expected_tumour_value expected value tumour assessment observation - lm_rs_sigma standard deviation tumour assessment - vect_normal_log_dens vectorised version normal log-likelihood function provided jmpost (opposed Stan’s inbuilt normal_lpdf function returns single value sum log-likelihoods)","code":"transformed parameters {     long_obvs_log_lik = vect_normal_log_dens(         tumour_value,         expected_tumour_value,         rep_vector(lm_rs_sigma, n_tumour_obs)     ); }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"individual-subject-generated-quantity-integration","dir":"Articles","previous_headings":"IMPORTANT > Custom Longitudinal Models","what":"2) Individual Subject Generated Quantity Integration","title":"Extending jmpost","text":"order calculate individual subject generated quantities (via GridFixed() / GridGrouped() / etc) need define Stan function signature: : time vector timepoints calculate generated quantity long_gq_parameters matrix one row per subject one column per parameter Likewise, long_gq_parameters object also needs defined model generated quantities block matrix 1 row per subject 1 column per parameter. structure allow models subject specific parameters, particular random effects models. model parameters subjects, example fixed effects model, value repeated subject. Subject’s values order factor levels DataJoint object. following example LongitudinalRandomSlope model: : lm_rs_ind_intercept lm_rs_ind_rnd_slope individual subject’s random intercept random slope parameters respectively. Note long_gq_parameters matrix structured lm_predict_value() function expect long_gq_parameters argument. Please see “Custom Generated Quantities” section implementation details inserting custom generated quantity code.","code":"vector lm_predict_value(vector time, matrix long_gq_parameters) generated quantities {     matrix[n_subjects, 2] long_gq_parameters;     long_gq_parameters[, 1] = lm_rs_ind_intercept;     long_gq_parameters[, 2] = lm_rs_ind_rnd_slope; }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"population-generated-quantity-integration","dir":"Articles","previous_headings":"IMPORTANT > Custom Longitudinal Models","what":"3) Population Generated Quantity Integration","title":"Extending jmpost","text":"common use case calculate quantities based “population” level parameters supported jmpost via GridPopulation() function. means practice though often model parameterisation specific. example models take median distribution whilst others might take mean set random effects offset 0. wish model compatible GridPopulation() need declare populate long_gq_pop_parameters object following signature: Note number rows gq_n_quant. number set unique number combinations arm study factors DataJoint object. support populating object two additional variables provided namely gq_long_pop_study_index gq_long_pop_arm_index vectors contain corresponding index study arm variables row long_gq_pop_parameters matrix. following example LongitudinalRandomSlope model: : lm_rs_intercept lm_rs_slope_mu model specific group level intercept slope parameters respectively. Note long_gq_pop_parameters matrix structured lm_predict_value() function expect long_gq_parameters argument. Please see “Custom Generated Quantities” section implementation details inserting custom generated quantity code.","code":"matrix[gq_n_quant, 2] long_gq_pop_parameters; generated quantities {     matrix[gq_n_quant, 2] long_gq_pop_parameters;     long_gq_pop_parameters[, 1] = to_vector(lm_rs_intercept[gq_long_pop_study_index]);     long_gq_pop_parameters[, 2] = to_vector(lm_rs_slope_mu[gq_long_pop_arm_index]); }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"prior-specification","dir":"Articles","previous_headings":"IMPORTANT","what":"Prior Specification","title":"Extending jmpost","text":"writing custom longitudinal survival model important understand prior definitions specified. default jmpost insert Stan statements prior distributions based parameters slot model object. importance means define prior distributions Stan code . Note apply hierarchical parameters must distributions specified Stan code. example LongitudinalRandomSlope model different random slope treatment arm specified Stan code : however prior specified Stan code lm_rs_slope_mu lm_rs_slope_sigma handled parameters slot model object mentioned . main reason using approach jmpost implements priors way users can change without re-compile Stan model.","code":"model {     lm_rs_ind_rnd_slope ~ normal(         lm_rs_slope_mu[subject_arm_index],         lm_rs_slope_sigma     ); }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-generated-quantities","dir":"Articles","previous_headings":"IMPORTANT","what":"Custom Generated Quantities","title":"Extending jmpost","text":"order avoid unnecessary processing, code solely used generation post sampling quantities excluded Stan program initially sampling joint model. Instead code included generating quantities via LongitidunalQuantities SurvivalQuantities constructors. facilitate , using LongitidunalQuantities SurvivalQuantities, dedicated model method enableGQ() called user provided longitudinal survival models. model specific method responsible returning StanModule object contains relevant code required generate quantities given model. following rough implementation method Random-Slope model implements feature (2) (3) outlined “Custom Longitudinal Model” section: Note whilst possible provide enableGQ() method survival model required. underlying framework creating survival quantities distribution agnostic require model specific code.","code":"enableGQ.LongitudinalRandomSlope <- function() {     StanModule(\"         functions {             vector lm_predict_value(vector time, matrix long_gq_parameters) {                 int nrow = rows(time);                 return (                     long_gq_parameters[, 1] + long_gq_parameters[, 2] .* time                 );             }         }          generated quantities {             matrix[n_subjects, 2] long_gq_parameters;             long_gq_parameters[, 1] = lm_rs_ind_intercept;             long_gq_parameters[, 2] = lm_rs_ind_rnd_slope;              matrix[gq_n_quant, 2] long_gq_pop_parameters;             long_gq_pop_parameters[, 1] = to_vector(lm_rs_intercept[gq_long_pop_study_index]);             long_gq_pop_parameters[, 2] = to_vector(lm_rs_slope_mu[gq_long_pop_arm_index]);         }     \") }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-link-functions","dir":"Articles","previous_headings":"IMPORTANT","what":"Custom Link Functions","title":"Extending jmpost","text":"Users can define custom link functions several ways based upon level customisation required. order explain process first important understand link functions implemented hood. link functions add contribution likelihood function via log-hazard function; general model formulated : log(hi(t,ϕi))=log(h0(t))+Xiβ+α1f(t,ϕi)+α2g(t,ϕi)+… log(h_i(t, \\phi_i)) = log(h_0(t)) + X_i \\beta + \\alpha_1 f(t, \\phi_i) + \\alpha_2 g(t, \\phi_i) + \\dots : - XX design matrix covariates - β\\beta vector coefficients covariates - f(t)f(t) g(t)g(t) link functions - α1\\alpha_1 α2\\alpha_2 coefficients link functions - h0(t)h_0(t) baseline hazard function - ϕi\\phi_i vector parameters longitudinal model longitudinal model responsible defining implementations ϕ\\phi vector. interface providing enableLink method updates StanModule object model define Stan matrix name link_function_inputs contains 1 row per subject 1 column per ϕ\\phi parameter. reference following roughly implementation LongitudinalGSF model: say ϕ\\phi parameters LongitudinalGSF model 4 primary parameters longitudinal model. wish augment additional parameters can subclass LongitudinalGSF model override enableLink method required additional parameters e.g. Next, individual link functions implemented Stan functions following signature: : - <key> name link parameter specified LinkComponent object - time matrix 1 row per subject 1 column per time point evaluated subject. LinkComponent object responsible integrating functions final Stan model. reference following roughly implementation dSLD link component LongitudinalRandomSlope model: can pass LinkComponent objects link argument JointModel constructor add model e.g. wish add multiple link functions must wrap Link() object e.g. users sufficient adding custom link functions specific analysis. following explains create generic link functions can useful wanting share code users building link function applicable multiple longitudinal models need polymorphism; recommended advanced users. order avoid user specify exact model specific link component provide several generic functions return correct link component given chosen link family. example linkDSLD() function return different implementation derivative SLD link depending longitudinal model user provided. implemented standard S3 methods e.g. key design quirk aware methods dispatch model argument prior argument. reason explained . order simplify end user API, generic link functions default model argument PromiseLongitudinalModel(). special object used dispatch link<type>.PromiseLongitudinalModel() method turn creates PromiseLinkComponent object. purpose objects defer creation LinkComponent object within JointModel constructor call link<Type> method correct model object. example following implementation linkDSLD generic. reference JointModel constructor attempt resolve promise executing provided function user provided longitudinal model object e.g.","code":"enableLink.LongitudinalGSF <- function(object, ...) {   stan <- StanModule(\" transformed parameters {     matrix[n_subjects, 4] link_function_inputs;     link_function_inputs[,1] = lm_gsf_psi_bsld;     link_function_inputs[,2] = lm_gsf_psi_ks;     link_function_inputs[,3] = lm_gsf_psi_kg;     link_function_inputs[,4] = lm_gsf_psi_phi; }\")     object@stan <- merge(         object@stan,         stan     )     object } GSFextended <- setClass(     Class = \"GSFextended\",     contains = \"LongitudinalGSF\" )  enableLink.GSFextended <- function(object, ...) {   stan <- StanModule(\"<stan-code-here>\")     object@stan <- merge(         object@stan,         stan     )     object } matrix <key>_contrib(   matrix time,   matrix link_function_inputs ) LinkComponent(   key = \"link_dsld\",   stan = StanModule(\" functions {     matrix link_dsld_contrib(         matrix time,         matrix link_function_inputs     ) {         int nrows = rows(time);         int ncols = cols(time);         vector[nrows] lm_rs_ind_rnd_slope = link_function_inputs[,2];         matrix[nrows, ncols] rnd_slope_mat = rep_matrix(lm_rs_ind_rnd_slope, ncols);         return rnd_slope_mat;     } }\"),   key = \"link_dsld\",   prior = prior ) JointModel(   longitudinal = LongitudinalRandomSlope(),   survival = SurvivalExponential(),   link = LinkComponent(...) ) JointModel(   longitudinal = LongitudinalRandomSlope(),   survival = SurvivalExponential(),   link = Link(     LinkComponent(...),     LinkComponent(...)   ) ) linkDSLD.LongitudinalRandomSlope <- function(prior = prior_normal(0, 2), model, ...) {     LinkComponent(         key = \"link_dsld\",         stan = StanModule(\"<stan-code-here>\"),         prior = prior     ) } linkDSLD <- function(prior, model = PromiseLongitudinalModel(), ...) {     UseMethod(\"linkDSLD\", model) }  linkDSLD.PromiseLongitudinalModel <- function(prior = prior_normal(0, 2), model, ...) {     PromiseLinkComponent(fun = linkDSLD, prior = prior, key = \"link_dsld\") }  linkDSLD.default <- function(prior, model, ...) {     stop(sprintf(\"Method `linkDSLD` is not available for `%s`\", class(model)[[1]])) } object@fun(     prior = object@prior,     model = <longitudinal-model>, )"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-simulation-functions","dir":"Articles","previous_headings":"IMPORTANT","what":"Custom Simulation Functions","title":"Extending jmpost","text":"assist testing debugging joint models fitted via jmpost SimJointData constructor function provided generate joint data known parameters.","code":""},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-survival-simulation-functions","dir":"Articles","previous_headings":"IMPORTANT > Custom Simulation Functions","what":"Custom Survival Simulation Functions","title":"Extending jmpost","text":"describing implement custom survival functions important understand survival simulation framework works generally jmpost. simulate event times simulation function takes advantage following details: S(t)∼U(0,1)S(t)=exp(−∫0th(u)du) \\begin{align} S(t) &\\sim U(0, 1) \\\\ S(t) &= exp\\left(-\\int_0^t h(u)\\ du\\right) \\end{align} , first samples survival probability pp uniform distribution calculates required event time tt produce survival probability. current implementation approximates integral sequentially summing hazard given step size declaring event sampled probability value exceeded. gives rise two key parameters need defined user: time_max: maximum time simulate (events occurring time censored) time_step: much gap leave time points calculate hazard Note currently outstanding development item convert use numerical integration remove need parameters (see issue #329). Custom survival distribution simulations implemented classes inherit SimSurvival providing key parameter values particular provide log-hazard function used described combination covariate link contributions. following rough example Weibull distribution implemented: , function essentially constructor function SimSurvival object. object following slots defined: time_max: maximum time simulate (explained mentioned ) time_step: much gap leave time points calculate hazard (explained mentioned ) beta_cont: β\\beta coefficient continuous covariate (sampled standard normal distribution subject) beta_cat: β\\beta coefficients categorical covariates (evenly sampled names(beta_cat) subject) loghazard: log-hazard function baseline survival distribution name: name simulation function; used printing purposes","code":"SimSurvivalWeibullPH <- function(     lambda,     gamma,     time_max = 2000,     time_step = 1,     lambda_censor = 1 / 3000,     beta_cont = 0.2,     beta_cat = c(\"A\" = 0, \"B\" = -0.4, \"C\" = 0.2) ) {     SimSurvival(         time_max = time_max,         time_step = time_step,         lambda_censor = lambda_censor,         beta_cont = beta_cont,         beta_cat = beta_cat,         loghazard = function(time) {             log(lambda) + log(gamma) + (gamma - 1) * log(time)         },         name = \"SimSurvivalWeibullPH\"     ) }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"custom-longitudinal-simulation-functions","dir":"Articles","previous_headings":"IMPORTANT > Custom Simulation Functions","what":"Custom Longitudinal Simulation Functions","title":"Extending jmpost","text":"Custom longitudinal simulation functions slightly involved. Essentially user needs define new class inherits SimLongitudinal implement sampleSubjects sampleObservations methods new class. object contain required parameters model well times slot vector timepoints observations generated . sampleSubjects method responsible sampling subject specific parameters e.g.  individual parameters random effects model. sampleObservations method responsible calculating tumour size provided time point. following rough example SimLongitudinalGSF class implemented: subjects_df argument sampleSubjects method data.frame following columns: subject: subject identifier arm: treatment arm subject belongs study: study subject belongs note dataset contains one row per subject. return value must data.frame number rows input dataset well subject, arm study columns. remaining columns subject specific parameters can arbitrary name. times_df argument sampleObservations method data.frame generated sampleSubjects method duplicated per required timepoint additional time column contains said timepoint. return value must data.frame number rows input dataset well original columns subject, arm, study time. addition original columns function must also define following new columns: sld: tumour size given timepoint log_haz_link: contribution hazard function timepoint (set 0 defining link function)","code":"# Declare the new class .SimLongitudinalGSF <- setClass(     \"SimLongitudinalGSF\",     contains = \"SimLongitudinal\",     slots = c(         sigma = \"numeric\",         mu_s = \"numeric\",         mu_g = \"numeric\",         mu_b = \"numeric\",         mu_phi = \"numeric\",         omega_b = \"numeric\",         omega_s = \"numeric\",         omega_g = \"numeric\",         omega_phi = \"numeric\",         link_dsld = \"numeric\",         link_ttg = \"numeric\",         link_identity = \"numeric\"     ) )  # Define constructor function with sensible default values SimLongitudinalGSF <- function(     times = c(-100, -50, 0, 50, 100, 150, 250, 350, 450, 550) / 365,     sigma = 0.01,     mu_s = log(c(0.6, 0.4)),     mu_g = log(c(0.25, 0.35)),     mu_b = log(60),     mu_phi = qlogis(c(0.4, 0.6)),     omega_b = 0.2,     omega_s = 0.2,     omega_g = 0.2,     omega_phi = 0.2,     link_dsld = 0,     link_ttg = 0,     link_identity = 0 ) {     .SimLongitudinalGSF(         times = times,         sigma = sigma,         mu_s = mu_s,         mu_g = mu_g,         mu_b = mu_b,         mu_phi = mu_phi,         omega_b = omega_b,         omega_s = omega_s,         omega_g = omega_g,         omega_phi = omega_phi,         link_dsld = link_dsld,         link_ttg = link_ttg,         link_identity = link_identity     ) }  sampleSubjects.SimLongitudinalGSF <- function(object, subjects_df) {     res <- subjects_df |>         dplyr::mutate(study_idx = as.numeric(.data$study)) |>         dplyr::mutate(arm_idx = as.numeric(.data$arm)) |>         dplyr::mutate(psi_b = stats::rlnorm(dplyr::n(), object@mu_b[.data$study_idx], object@omega_b)) |>         dplyr::mutate(psi_s = stats::rlnorm(dplyr::n(), object@mu_s[.data$arm_idx], object@omega_s)) |>         dplyr::mutate(psi_g = stats::rlnorm(dplyr::n(), object@mu_g[.data$arm_idx], object@omega_g)) |>         dplyr::mutate(psi_phi_logit = stats::rnorm(             dplyr::n(),             object@mu_phi[.data$arm_idx],             object@omega_phi         )) |>         dplyr::mutate(psi_phi = stats::plogis(.data$psi_phi_logit))     res[, c(\"subject\", \"arm\", \"study\", \"psi_b\", \"psi_s\", \"psi_g\", \"psi_phi\")] }  sampleObservations.SimLongitudinalGSF <- function(object, times_df) {     times_df |>         dplyr::mutate(mu_sld = gsf_sld(.data$time, .data$psi_b, .data$psi_s, .data$psi_g, .data$psi_phi)) |>         dplyr::mutate(dsld = gsf_dsld(.data$time, .data$psi_b, .data$psi_s, .data$psi_g, .data$psi_phi)) |>         dplyr::mutate(ttg = gsf_ttg(.data$time, .data$psi_b, .data$psi_s, .data$psi_g, .data$psi_phi)) |>         dplyr::mutate(sld = stats::rnorm(dplyr::n(), .data$mu_sld, .data$mu_sld * object@sigma)) |>         dplyr::mutate(             log_haz_link =                 (object@link_dsld * .data$dsld) +                 (object@link_ttg * .data$ttg) +                 (object@link_identity * .data$mu_sld)         ) }"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"formatting-stan-files","dir":"Articles","previous_headings":"IMPORTANT","what":"Formatting Stan Files","title":"Extending jmpost","text":"hood library works merging multiple Stan programs together single program. parsing program extract block independently. Unfortunately, formal Stan parser (stanc) provided Stan team works complete programs whereas programs within jmpost incomplete fragments. package therefore implemented simple parser; result, order traverse full abstract syntax tree (AST), addition constraints made Stan programs can formatted. additional constraints : opening block must start newline can’t non-whitespace character proceeding . opening block non-whitespace characters opening { character. closing } character block non-whitespace characters Valid: Invalid:","code":"data {   int n; array[n] real x; }        parameters{         real mu;    real sigma;}      model {     x ~ normal(mu, sigma);     } // non-whitespace after opening `{` data { int n; array[n] real x; }   parameter { real mu;      // non-whitespace after opening `{`   real sigma; } model {                 // non-whitespace before block name   x ~ normal(mu, sigma); } // some comment         // non-whitespace after closing `}`"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"stan-data-objects","dir":"Articles","previous_headings":"IMPORTANT","what":"Stan Data Objects","title":"Extending jmpost","text":"writing Stan code extend jmpost important note many different data objects already defined data block base Stan template. section outlines different data objects made available user. Note objects made available corresponding model used; example death times available user specifies SurvivalModel object JointModel().","code":""},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"global-data-objects","dir":"Articles","previous_headings":"IMPORTANT > Stan Data Objects","what":"Global Data Objects","title":"Extending jmpost","text":"Number unique subjects Number unique studies Number unique treatment arms Study index subject Note sorted based upon subject’s factor level within R data.frame. example lets say subject \"\" factor level 15 corresponding study value factor level 2 subject_study_index[15] 2. Treatment arm index subject mirror subject_study_index treatment arm.","code":"int<lower=1> n_subjects; int<lower=1> n_studies; int<lower=1> n_arms; array[n_subjects] int<lower=1,upper=n_studies> subject_study_index; array[n_subjects] int<lower=1,upper=n_arms> subject_arm_index;"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"survival-data-objects","dir":"Articles","previous_headings":"IMPORTANT > Stan Data Objects","what":"Survival Data Objects","title":"Extending jmpost","text":"Number events Event/Censor Times Ordered subject factor level Event Index index event_times identify times event. rest censored. Number covariates survival model Note include intercept term, conflict baseline distribution parameters. Covariate design matrix survival model Note include intercept term, conflict baseline distribution parameters. Time >0 flag Number times >0 Positive time index Gaussian Quadrature Integration Parameters nodes weights Gaussian quadrature integration.","code":"int<lower=1> n_subject_event; vector[n_subjects] event_times; array[n_subject_event] int subject_event_index; int<lower=0> p_os_cov_design; matrix[n_subjects, p_os_cov_design] os_cov_design; array[rows(event_times)] int time_positive_flag; int n_times_positive; array[n_times_positive] int time_positive_index int<lower=1> n_nodes; vector[n_nodes] nodes; vector<lower=0, upper=1>[n_nodes] weights;"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"longitudinal-data-objects","dir":"Articles","previous_headings":"IMPORTANT > Stan Data Objects","what":"Longitudinal Data Objects","title":"Extending jmpost","text":"Total number tumour assessments Number tumour assessments LLoQ (Lower Limit Quantification) Number tumour assessments LLoQ (Lower Limit Quantification) Tumour assessments values Tumour assessments time points LLoQ threshold Individual tumour assessment index tumour assessment 1 belongs subject factor level 3 subject_tumour_index[1] 3. Tumour assessment index observations LLoQ (Lower Limit Quantification) example tumour assessments 3 5 LLoQ subject_tumour_index_obs [3, 5]. Tumour assessment index observations LLoQ (Lower Limit Quantification) example tumour assessments 1 2 LLoQ subject_tumour_index_obs [1, 2]. Sparse matrix components subject indexes tumour assessments sparse matrix representation binary matrix one row per subject one column per tumour assessment. , row 3 matrix columns entry 1 indicate corresponding entry tumour_value belongs subject factor level 3. matrix primarily used calculate sum log-likelihood tumour assessments per subject efficient way. See Stan CSR documentation information sparse matrix representation. Sparse matrix components subject indexes tumour assessments LLoQ tumour assessments LLoQ. Sparse matrix components subject indexes tumour assessments LLoQ tumour assessments LLoQ.","code":"int<lower=1> n_tumour_all; int<lower=1> n_tumour_obs; int<lower=0> n_tumour_cens; vector[n_tumour_all] tumour_value; vector[n_tumour_all] tumour_time; real tumour_value_lloq; array[n_tumour_all] int subject_tumour_index; array[n_tumour_obs] int subject_tumour_index_obs; array[n_tumour_cens] int subject_tumour_index_cens; array [3] int<lower=0> n_mat_inds_all_y; vector[n_mat_inds_all_y[1]] w_mat_inds_all_y; array[n_mat_inds_all_y[2]] int v_mat_inds_all_y; array[n_mat_inds_all_y[3]] int u_mat_inds_all_y; array [3] int<lower=1> n_mat_inds_obs_y; vector[n_mat_inds_obs_y[1]] w_mat_inds_obs_y; array[n_mat_inds_obs_y[2]] int v_mat_inds_obs_y; array[n_mat_inds_obs_y[3]] int u_mat_inds_obs_y; array [3] int<lower=0> n_mat_inds_cens_y; vector[n_mat_inds_cens_y[1]] w_mat_inds_cens_y; array[n_mat_inds_cens_y[2]] int v_mat_inds_cens_y; array[n_mat_inds_cens_y[3]] int u_mat_inds_cens_y;"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"global-quantity-data-objects","dir":"Articles","previous_headings":"IMPORTANT > Stan Data Objects","what":"Global Quantity Data Objects","title":"Extending jmpost","text":"Number quantities generated Assessment time corresponding quantity generated subject index quantity GridFixed() / GridGrouped() / GridObserved() / GridManual() ","code":"int <lower=1> gq_n_quant; vector[gq_n_quant] gq_times; array[gq_n_quant] int<lower=1, upper=n_subjects> gq_subject_index;"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"survival-quantity-data-objects","dir":"Articles","previous_headings":"IMPORTANT > Stan Data Objects","what":"Survival Quantity Data Objects","title":"Extending jmpost","text":"Number link parameters GridPrediction() Matrix link function inputs GridPrediction() Design matrix survival quantity model GridPrediction() ","code":"int<lower=0> gq_n_par; matrix[gq_n_quant, gq_n_par] gq_link_function_inputs; matrix[gq_n_quant, p_os_cov_design] gq_os_cov_design;"},{"path":"https://genentech.github.io/jmpost/articles/extending-jmpost.html","id":"longitudinal-quantity-data-objects","dir":"Articles","previous_headings":"IMPORTANT > Stan Data Objects","what":"Longitudinal Quantity Data Objects","title":"Extending jmpost","text":"Arm index quantity GridPopulation() Study index quantity GridPopulation() ","code":"array [gq_n_quant] int <lower=1, upper=n_arms> gq_long_pop_arm_index; array [gq_n_quant] int <lower=1, upper=n_studies> gq_long_pop_study_index;"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"important","dir":"Articles","previous_headings":"","what":"IMPORTANT","title":"jmpost Quickstart","text":"Please note document currently work--progress contain complete information package yet.","code":""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"jmpost Quickstart","text":"jmpost package used fit joint models time--event endpoints association term parameterised longitudinal submodel. package originally designed context fitting tumour growth inhibition models inform overall survival limited application. important note jmpost just wrapper top Stan programming language leans heavily wider Stan ecosystem. example model diagnostics provided jmpost users recommended use packages like bayesplot functionality. vignette provides basic outline fit joint model using jmpost. detailed information package functions please refer package documentation.","code":""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"jmpost Quickstart","text":"JointModel needs specified three parts: longitudinal: model longitudinal outcomes. survival: model survival outcomes. link: link specifies longitudinal model parameters enter survival model.","code":""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"default-options","dir":"Articles","previous_headings":"Model Specification","what":"Default Options","title":"jmpost Quickstart","text":"Let’s first specify simple joint model : random slope model longitudinal outcome. Weibull proportional hazards model survival outcome. link two models random slope longitudinal model enters product link coefficient linear predictor survival model. Note use default options two models link, particular prior distributions initial values MCMC chain parameters automatically chosen. can see arguments constructors (help page): see Longitudinal Random Slope model 4 parameters can define prior .","code":"simple_model <- JointModel(     longitudinal = LongitudinalRandomSlope(),     survival = SurvivalWeibullPH(),     link = linkDSLD() ) args(LongitudinalRandomSlope) #> function (intercept = prior_normal(30, 10), slope_mu = prior_normal(1,  #>     3), slope_sigma = prior_lognormal(0, 1.5), sigma = prior_lognormal(0,  #>     1.5))  #> NULL"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"specifying-priors","dir":"Articles","previous_headings":"Model Specification","what":"Specifying Priors","title":"jmpost Quickstart","text":"can alternatively also specify prior distributions parameters manually. important practice obtain meaningful model specification hence converging MCMC chains allow estimate posterior distributions. random slope model longitudinal outcome, can e.g. say: sets prior intercept N(40,5)N(40, 5) distribution prior slope_mu parameter N(10,2)N(10, 2) distribution.","code":"random_slope_model <- LongitudinalRandomSlope(     intercept = prior_normal(40, 5),     slope_mu = prior_normal(10, 2) )"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"separate-models","dir":"Articles","previous_headings":"Model Specification","what":"Separate Models","title":"jmpost Quickstart","text":"also possible link longitudinal survival models, using special linkNone() link specification. example, allow fit two models separately, MCMC chain.","code":"simple_model_no_link <- JointModel(     longitudinal = LongitudinalRandomSlope(),     survival = SurvivalWeibullPH(),     link = linkNone() )"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"single-models","dir":"Articles","previous_headings":"Model Specification","what":"Single Models","title":"jmpost Quickstart","text":"also possible specify longitudinal survival model. can estimated separate MCMC chains.","code":"single_longitudinal <- JointModel(     longitudinal = LongitudinalRandomSlope() ) single_survival <- JointModel(     survival = SurvivalWeibullPH() )"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"jmpost Quickstart","text":"can fit models, need prepare data right format.","code":""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"simulating-data","dir":"Articles","previous_headings":"Data Preparation","what":"Simulating Data","title":"jmpost Quickstart","text":"start simulated data set. assign 50 subjects two treatment arms. use time grid 1 2000, e.g. specifying days randomization. use exponentially distributed censoring time mean 9000 days. use categorical covariate three levels , B C overall survival model, drawn uniformly three levels. (Note hardcoded moment, levels need , B, C.) use another continuous covariate overall survival model generated standard normal distribution, coefficient 0.3. longitudinal outcome, draw values random slope model given parameters. survival outcome, draw true value Weibull model. Note fairly easy put another choice, just need specify function time returning log baseline hazard given survival model. let’s run code : might get message subjects die day 2000, concern. Basically just gives us feeling many survival events included data set.","code":"set.seed(129) sim_data <- SimJointData(     design = list(         SimGroup(50, \"Arm-A\", \"Study-X\"),         SimGroup(50, \"Arm-B\", \"Study-X\")     ),     longitudinal = SimLongitudinalRandomSlope(         times = c(1, 50, 100, 150, 200, 250, 300),         intercept = 30,         slope_mu = c(1, 2),         slope_sigma = 0.2,         sigma = 20,         link_dsld = 0.1     ),     survival = SimSurvivalWeibullPH(         lambda = 1 / 300,         gamma = 0.97,         time_max = 2000,         time_step = 1,         lambda_cen = 1 / 9000,         beta_cat = c(             \"A\" = 0,             \"B\" = -0.1,             \"C\" = 0.5         ),         beta_cont = 0.3     ) )"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"formatting-data","dir":"Articles","previous_headings":"Data Preparation","what":"Formatting Data","title":"jmpost Quickstart","text":"Next bring data right format. start extracting data individual data sets, reducing longitudinal data specific time points. Let’s quick look format: survival data : subject ID time point continuous covariate value categorical covariate level event indicator (1 observed, 0 censored) study ID treatment arm longitudinal data : subject ID time point sum longest diameters (SLD) study ID treatment arm observation flag Finally, wrap data formatting functions. mapping column names required variables happens. means applications don’t use variable names seen , can use custom names apply mapping .","code":"os_data <- sim_data@survival long_data <- sim_data@longitudinal head(os_data) #> # A tibble: 6 × 7 #>   subject     study   arm    time event cov_cont cov_cat #>   <chr>       <fct>   <fct> <dbl> <dbl>    <dbl> <fct>   #> 1 subject_001 Study-X Arm-A    35     1   -1.12  B       #> 2 subject_002 Study-X Arm-A    17     1   -0.990 C       #> 3 subject_003 Study-X Arm-A   876     1   -1.37  C       #> 4 subject_004 Study-X Arm-A   100     1   -1.36  C       #> 5 subject_005 Study-X Arm-A     9     1    2.00  B       #> 6 subject_006 Study-X Arm-A   122     1    0.696 B head(long_data) #> # A tibble: 6 × 6 #>   subject     arm   study    time   sld observed #>   <chr>       <fct> <fct>   <dbl> <dbl> <lgl>    #> 1 subject_001 Arm-A Study-X     1  23.4 TRUE     #> 2 subject_001 Arm-A Study-X    50 108.  FALSE    #> 3 subject_001 Arm-A Study-X   100 137.  FALSE    #> 4 subject_001 Arm-A Study-X   150 141.  FALSE    #> 5 subject_001 Arm-A Study-X   200 220.  FALSE    #> 6 subject_001 Arm-A Study-X   250 325.  FALSE joint_data <- DataJoint(     subject = DataSubject(         data = os_data,         subject = \"subject\",         arm = \"arm\",         study = \"study\"     ),     survival = DataSurvival(         data = os_data,         formula = Surv(time, event) ~ cov_cat + cov_cont     ),     longitudinal = DataLongitudinal(         data = long_data,         formula = sld ~ time,         threshold = 5     ) )"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"jmpost Quickstart","text":"Now let’s look can fit (joint) models.","code":""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"debugging-stan-code","dir":"Articles","previous_headings":"Model Fitting","what":"Debugging Stan Code","title":"jmpost Quickstart","text":"always possible read Stan code contained JointModel object, using write_stan():","code":"tmp <- tempfile() write_stan(simple_model, destination = tmp) first_part <- head(readLines(tmp), 10) cat(paste(first_part, collapse = \"\\n\")) #> functions { #>     // #>     // Source - base/functions.stan #>     // #>  #>     // Constant used in below. #>     real neg_log_sqrt_2_pi() { #>         return -0.9189385332046727; #>     }"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"sampling-parameters","dir":"Articles","previous_headings":"Model Fitting","what":"Sampling Parameters","title":"jmpost Quickstart","text":"Finally, sampleStanModel() kicking MCMC sampler via cmdstanr backend. Note practice increase number warm-sampling iterations.","code":"mcmc_results <- sampleStanModel(     simple_model,     data = joint_data,     iter_sampling = 500,     iter_warmup = 500,     chains = 1,     parallel_chains = 1 ) #> Running MCMC with 1 chain... #>  #> Chain 1 Iteration:   1 / 1000 [  0%]  (Warmup) #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 497, column 4 to column 107) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 497, column 4 to column 107) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 497, column 4 to column 107) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 497, column 4 to column 107) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 497, column 4 to column 107) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 497, column 4 to column 107) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 498, column 4 to column 104) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: gamma_lpdf: Random variable is 0, but must be positive finite! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 498, column 4 to column 104) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/tmp/RtmpoETaXS/model-11c9788cf9b6.stan', line 478, column 4 to line 481, column 6) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Iteration: 100 / 1000 [ 10%]  (Warmup)  #> Chain 1 Iteration: 200 / 1000 [ 20%]  (Warmup)  #> Chain 1 Iteration: 300 / 1000 [ 30%]  (Warmup)  #> Chain 1 Iteration: 400 / 1000 [ 40%]  (Warmup)  #> Chain 1 Iteration: 500 / 1000 [ 50%]  (Warmup)  #> Chain 1 Iteration: 501 / 1000 [ 50%]  (Sampling)  #> Chain 1 Iteration: 600 / 1000 [ 60%]  (Sampling)  #> Chain 1 Iteration: 700 / 1000 [ 70%]  (Sampling)  #> Chain 1 Iteration: 800 / 1000 [ 80%]  (Sampling)  #> Chain 1 Iteration: 900 / 1000 [ 90%]  (Sampling)  #> Chain 1 Iteration: 1000 / 1000 [100%]  (Sampling)  #> Chain 1 finished in 20.2 seconds."},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"convergence-checks","dir":"Articles","previous_headings":"Model Fitting","what":"Convergence checks","title":"jmpost Quickstart","text":"sampling finishes, can inspect parameter distributions. using cmdstanr functions, results element class CmdStanMCMC. can already see rhat statistic whether MCMC sampler converged - values close 1 indicate convergence, values larger 1 indicate divergence. general, convergence sensitive choice : Priors Initial values Sufficient warm-iterations don’t achieve convergence, play around different choices .","code":"vars <- c(     \"lm_rs_intercept\",     \"lm_rs_slope_mu\",     \"lm_rs_slope_sigma\",     \"lm_rs_sigma\",     \"link_dsld\",     \"sm_weibull_ph_lambda\",     \"sm_weibull_ph_gamma\",     \"beta_os_cov\" ) cmdstanr::as.CmdStanMCMC(mcmc_results)$summary(vars) #> # A tibble: 11 × 10 #>    variable        mean   median      sd     mad       q5     q95  rhat ess_bulk #>    <chr>          <dbl>    <dbl>   <dbl>   <dbl>    <dbl>   <dbl> <dbl>    <dbl> #>  1 lm_rs_inte… 27.5     27.5     1.29    1.26    25.4     29.6    1.00      123. #>  2 lm_rs_slop…  1.02     1.02    0.0307  0.0317   0.974    1.07   1.00      611. #>  3 lm_rs_slop…  1.96     1.96    0.0299  0.0297   1.92     2.02   1.00      605. #>  4 lm_rs_slop…  0.204    0.203   0.0155  0.0147   0.179    0.232  1.00      887. #>  5 lm_rs_sigma 19.2     19.2     0.534   0.494   18.3     20.1    1.00      761. #>  6 link_dsld   -0.0407  -0.0552  0.201   0.202   -0.359    0.330  1.00      695. #>  7 sm_weibull…  0.00969  0.00852 0.00528 0.00454  0.00318  0.0194 0.999     374. #>  8 sm_weibull…  0.887    0.881   0.0741  0.0688   0.768    1.02   1.00      480. #>  9 beta_os_co…  0.0119   0.0152  0.243   0.244   -0.370    0.385  1.00      618. #> 10 beta_os_co…  0.341    0.331   0.271   0.282   -0.0861   0.802  1.00      492. #> 11 beta_os_co…  0.365    0.360   0.111   0.103    0.189    0.546  1.01      903. #> # ℹ 1 more variable: ess_tail <dbl>"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"jmpost Quickstart","text":"can now proceed towards investigating results MCMC chain plots.","code":""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"trace-plots","dir":"Articles","previous_headings":"Plotting","what":"Trace plots","title":"jmpost Quickstart","text":"Using draws() method results element, can extract samples format understood bayesplot. can e.g. look simple trace plots:","code":"vars_draws <- cmdstanr::as.CmdStanMCMC(mcmc_results)$draws(vars)  library(bayesplot) #> This is bayesplot version 1.11.1 #> - Online documentation and vignettes at mc-stan.org/bayesplot #> - bayesplot theme set to bayesplot::theme_default() #>    * Does _not_ affect other ggplot2 plots #>    * See ?bayesplot_theme_set for details on theme setting mcmc_trace(vars_draws)"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"longitudinal-fit-plots","dir":"Articles","previous_headings":"Plotting","what":"Longitudinal fit plots","title":"jmpost Quickstart","text":"Using longitudinal() method can extract longitudinal fit samples result, plot subjects interested . illustration, plot first 10 subjects:","code":"selected_subjects <- head(os_data$subject, 10) long_quantities <- LongitudinalQuantities(     mcmc_results,     grid = GridFixed(         subjects = selected_subjects     ) ) as.data.frame(long_quantities) |> head() #>         group time  values #> 1 subject_001    0 26.9285 #> 2 subject_001    0 25.8800 #> 3 subject_001    0 28.5276 #> 4 subject_001    0 27.9859 #> 5 subject_001    0 25.8354 #> 6 subject_001    0 25.7067 summary(long_quantities) |> head() #>         group time  median    lower    upper #> 1 subject_001    0 27.4616 25.01311 30.14073 #> 2 subject_002    0 27.4616 25.01311 30.14073 #> 3 subject_003    0 27.4616 25.01311 30.14073 #> 4 subject_004    0 27.4616 25.01311 30.14073 #> 5 subject_005    0 27.4616 25.01311 30.14073 #> 6 subject_006    0 27.4616 25.01311 30.14073 autoplot(long_quantities)"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"survival-fit-plots","dir":"Articles","previous_headings":"Plotting","what":"Survival fit plots","title":"jmpost Quickstart","text":"using SurvivalQuantities() method can estimated survival functions.  can also aggregate estimated survival curves groups subjects, using corresponding method.","code":"surv_quantities <- SurvivalQuantities(     mcmc_results,     grid = GridFixed(         subjects = selected_subjects     ) ) as.data.frame(surv_quantities) |> head() #>         group time values #> 1 subject_001    0      1 #> 2 subject_001    0      1 #> 3 subject_001    0      1 #> 4 subject_001    0      1 #> 5 subject_001    0      1 #> 6 subject_001    0      1 summary(surv_quantities) |> head() #>         group time median lower upper #> 1 subject_001    0      1     1     1 #> 2 subject_002    0      1     1     1 #> 3 subject_003    0      1     1     1 #> 4 subject_004    0      1     1     1 #> 5 subject_005    0      1     1     1 #> 6 subject_006    0      1     1     1 autoplot(surv_quantities) surv_quantities <- SurvivalQuantities(     mcmc_results,     grid = GridGrouped(         groups = split(os_data$subject, os_data$arm)     ) ) autoplot(surv_quantities, add_km = TRUE)"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"predicting-survival-quantities-for-hypothetical-subjects","dir":"Articles","previous_headings":"Plotting","what":"Predicting Survival Quantities for Hypothetical Subjects","title":"jmpost Quickstart","text":"SurvivalQuantities() method can also used predict survival quantities hypothetical subjects arbitrary covariate longitudinal model parameter values. done via passing GridPrediction() object method newdata params arguments used specify desired values covariates longitudinal model parameters respectively. example use functions predict survival distribution hypothetical subject:  exact names required params argument (.e. longitudinal model parameters) can found running getPredictionNames() longitudinal model object. example:","code":"surv_quantities <- SurvivalQuantities(     mcmc_results,     grid = GridPrediction(         times = seq(1, 800, by = 50),         newdata = dplyr::tibble(             cov_cat = c(\"A\", \"B\"),             cov_cont = c(1.2, 2)         ),         params = list(             intercept = 40,             slope = 0.05         )     ) ) autoplot(surv_quantities) getPredictionNames(LongitudinalGSF()) #> [1] \"b\"   \"s\"   \"g\"   \"phi\""},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"brier-score","dir":"Articles","previous_headings":"Plotting","what":"Brier Score","title":"jmpost Quickstart","text":"brierScore() method can used extract Brier Scores (predictive performance measure) SurvivalQuantities object.","code":"sq <- SurvivalQuantities(     mcmc_results,     grid = GridFixed(times = c(1, 50, 100, 400, 800)),     type = \"surv\" ) brierScore(sq) #>          1         50        100        400        800  #> 0.01951403 0.17194933 0.23724523 0.14885029 0.06102090"},{"path":"https://genentech.github.io/jmpost/articles/quickstart.html","id":"initial-values","dir":"Articles","previous_headings":"Plotting","what":"Initial Values","title":"jmpost Quickstart","text":"default jmpost set initial values parameters random value drawn prior distribution shrunk towards mean said distribution e.g. prior_normal(4, 2) initial value chain : Note shrinkage factor set 0.5 default can changed via jmpost.prior_shrinkage option e.g. wish manually specify initial values can via initialValues() function. example: Note following: - initialValues() return list lists sublist contains initial values corresponding chain index. - initialValues() default just returns 1 initial value parameter; sampleStanModel() function broadcast number many times required e.g. 3 covariates survival model initial value Beta coeficient repeated 3 times. however want specify individual initial values covariate can passing vector length number covariates. - initialValues() check proposed values valid constrained parameters. , using prior_cauchy(0, 1) prior parameter >0 need manually set initial value (described ) ensure valid value. - constrained parameters (e.g. variance parameters must >0> 0) initialValues() continuously sample discard initial values generates one meet constraints. 100 attempts valid initial value found throw error.","code":"4 * shrinkage_factor + rnorm(1, 4, 2) * (1 - shrinkage_factor) options(\"jmpost.prior_shrinkage\" = 0.7) joint_model <- JointModel(     longitudinal = LongitudinalRandomSlope(),     survival = SurvivalExponential(),     link = linkNone() ) initial_values <- initialValues(joint_model, n_chains = 2)  initial_values[[1]]$lm_rs_intercept <- 0.2 initial_values[[2]]$lm_rs_intercept <- 0.3  mcmc_results <- sampleStanModel(     joint_model,     data = DataJoint(...),     init = initial_values,     chains = 2 )"},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"important","dir":"Articles","previous_headings":"","what":"IMPORTANT","title":"Statistical Specifications","text":"Please note document currently work--progress contain complete information package yet.","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"survival-model-specification","dir":"Articles","previous_headings":"","what":"Survival Model Specification","title":"Statistical Specifications","text":"package can used fit proportional hazards models form: log(hi(t∣θ,ψi))=log(h0(t∣θ))+Xiβ+∑jGj(t∣ψi) \\log(h_i(t \\mid \\theta, \\psi_i)) = \\log(h_0(t \\mid \\theta)) + X_i \\beta + \\sum_j G_j(t \\mid \\psi_i) : h0(.)h_0(.) parametric baseline hazard function tt event time θ\\theta vector parameters parameterise baseline hazard ψi\\psi_i arbitrary vector parameters subject ii specified longitudinal model Gj(.)G_j(.) link function maps ψi\\psi_i contribution log-hazard function jj simply indexes given link function XiX_i subjects covariate design matrix β\\beta corresponding coefficients scale design matrix covariates contribution log-hazard function following sections outline available distributions users can selected baseline hazard h0(.)h_0(.). Please note distributions proportional-hazards property meaning resulting survival model corresponding hazard hi()h_i() parametric family baseline distribution hazard h0(.)h_0(.).","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"exponential-distribution","dir":"Articles","previous_headings":"Survival Model Specification","what":"Exponential Distribution","title":"Statistical Specifications","text":"h(t∣λ)=λ h(t \\mid \\lambda) = \\lambda : - λ>0\\lambda > 0 rate parameter","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"weibull-distribution-proportional-hazard-parameterisation","dir":"Articles","previous_headings":"Survival Model Specification","what":"Weibull Distribution (Proportional Hazard Parameterisation)","title":"Statistical Specifications","text":"h(t∣λ,γ)=λγtγ−1; h(t \\mid \\lambda, \\gamma) = \\lambda \\gamma t^{\\gamma - 1 }; : - λ>0\\lambda > 0 rate parameter - γ>0\\gamma > 0 shape parameter Note γ=1\\gamma = 1 obtain exponential distribution special case.","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"log-logistic-distribution","dir":"Articles","previous_headings":"Survival Model Specification","what":"Log-Logistic Distribution","title":"Statistical Specifications","text":"h(t∣,b)=(b/)(t/)(b−1)1+(t/)b h(t \\mid , b) =  \\frac {(b/)(t/)^{(b-1)}} {1 + (t/)^b} : >0a > 0 scale parameter b>0b > 0 shape parameter","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"gamma-distribution","dir":"Articles","previous_headings":"Survival Model Specification","what":"Gamma Distribution","title":"Statistical Specifications","text":"h(t∣k,θ)=tk−1e−t/θθk(Γ(k)−γ(k,t/θ)) h(t \\mid k, \\theta) = \\frac{     t^{k - 1} e^{-t/\\theta} } {     \\theta ^ k ( \\Gamma(k) - \\gamma(k, t/\\theta) ) } : $k > 0 $ shape parameter θ>0\\theta > 0 scale parameter Γ(.)\\Gamma(.) complete gamma function γ(.,.)\\gamma(., .) lower incomplete gamma function","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"random-slope-model","dir":"Articles","previous_headings":"Longitudinal Model Specification","what":"Random-Slope Model","title":"Statistical Specifications","text":"yij=μl()+sitij+ϵij y_{ij} = \\mu_{l()} + s_i t_{ij} + \\epsilon_{ij} : yijy_{ij} tumour size subject ii timepoint jj μl()\\mu_{l()} intercept subject ii sis_i random slope subject ii si∼N(μsk(),σs)s_i \\sim N(\\mu_{sk()}, \\sigma_s) μsk()\\mu_{sk()} mean random slope within treatment arm k()k() σs\\sigma_s variance term slopes ϵij\\epsilon_{ij} error term ϵij∼N(0,σ)\\epsilon_{ij} \\sim N(0, \\sigma) k()k() treatment arm index subject ii l()l() study index subject ii","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"derivative-of-the-sld-trajectory-link-growth-parameter-link","dir":"Articles","previous_headings":"Longitudinal Model Specification > Random-Slope Model","what":"Derivative of the SLD Trajectory Link / Growth Parameter Link","title":"Statistical Specifications","text":"G(tij∣μ0,si)=si G(t_{ij} \\mid \\mu_0, s_i) = s_i Accessible via linkDSLD() & linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"identity-link","dir":"Articles","previous_headings":"Longitudinal Model Specification > Random-Slope Model","what":"Identity Link","title":"Statistical Specifications","text":"G(tij∣μ0,si)=μ0+sitij \\begin{align*} G(t_{ij} \\mid \\mu_0, s_i) = \\mu_0 + s_i t_{ij} \\end{align*} Accessible via linkIdentity()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"stein-fojo-model","dir":"Articles","previous_headings":"Longitudinal Model Specification","what":"Stein-Fojo Model","title":"Statistical Specifications","text":"yij∼N(SLDij,SLDij2σ2)SLDij={bi[e−sitij+egitij−1]tij≥0biegitijif tij<0bi∼LogNormal(μbl(),ωbl())si∼LogNormal(μsk(),ωsk())gi∼LogNormal(μgk(),ωgk())\\begin{align*} y_{ij} &\\sim N(SLD_{ij},\\ SLD_{ij}^2 \\sigma^2) \\\\ \\\\ SLD_{ij} &= \\begin{cases} b_i[e^{-s_it_{ij}} + e^{g_i t_{ij}} - 1] & \\text{} t_{ij}\\geq 0 \\\\ b_i e^{g_i t_{ij}} & \\text{} t_{ij}\\lt 0 \\end{cases}\\\\\\\\ b_i &\\sim \\text{LogNormal}(\\mu_{bl()}, \\omega_{b l()}) \\\\ s_i &\\sim \\text{LogNormal}(\\mu_{sk()}, \\omega_{s k()}) \\\\ g_i &\\sim \\text{LogNormal}(\\mu_{gk()}, \\omega_{g k()}) \\\\ \\end{align*} : ii subject index jj visit index yijy_{ij} observed tumour measurements SLDijSLD_{ij} expected sum longest diameter subject ii time point jj tijt_{ij} time since first treatment subject ii visit jj bib_i subject baseline SLD measurement sis_i subject kinetics shrinkage parameter gig_i subject kinetics tumour growth parameter ϕi\\phi_i subject proportion cells affected treatment k()k() treatment arm index subject ii l()l() study index subject ii μθk()\\mu_{\\theta k()} population mean parameter θ\\theta group k()k() ωθk()\\omega_{\\theta k()} population variance parameter θ\\theta. using non-centred parameterisation following alternative formulation used: bi=exp(μbl()+ωbl()*ηbi)si=exp(μsk()+ωsk()*ηsi)gi=exp(μgk()+ωgk()*ηgi)ηbi∼N(0,1)ηsi∼N(0,1)ηgi∼N(0,1) \\begin{align*} b_i &= exp(\\mu_{bl()} + \\omega_{b l()} * \\eta_{b }) \\\\ s_i &= exp(\\mu_{sk()} + \\omega_{s k()} * \\eta_{s }) \\\\ g_i &= exp(\\mu_{gk()} + \\omega_{g k()} * \\eta_{g }) \\\\ \\\\ \\eta_{b } &\\sim  N(0, 1)\\\\ \\eta_{s } &\\sim  N(0, 1) \\\\ \\eta_{g } &\\sim  N(0, 1) \\\\ \\end{align*} : ηθi\\eta_{\\theta } random effects offset parameter θ\\theta subject ii using unscaled variance parameterisation following alternative formulation used: $$ y_{ij} &\\sim N(SLD_{ij},\\ \\sigma^2) $$","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"derivative-of-the-sld-trajectory-link","dir":"Articles","previous_headings":"Longitudinal Model Specification > Stein-Fojo Model","what":"Derivative of the SLD Trajectory Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi)={bi(giegitij−sie−sitij)tij≥0bigiegitijif tij<0 G(t_{ij} \\mid b_i, s_i, g_i) = \\begin{cases} b_i(g_i e^{g_i t_{ij}} -s_ie^{-s_it_{ij}} ) & \\text{} t_{ij}\\geq 0 \\\\ b_i g_i e^{g_i t_{ij}} & \\text{} t_{ij}\\lt 0 \\end{cases} Accessible via linkDSLD()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"time-to-growth-link","dir":"Articles","previous_headings":"Longitudinal Model Specification > Stein-Fojo Model","what":"Time to Growth Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi)=max(log(si)−log(gi)si+gi,0) G(t_{ij} \\mid b_i, s_i, g_i) = \\max \\left(     \\frac{         \\text{log}(s_i) - \\text{log}(g_i)     }{         s_i + g_i     },     0 \\right) Accessible via linkTTG()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"identity-link-1","dir":"Articles","previous_headings":"Longitudinal Model Specification > Stein-Fojo Model","what":"Identity Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi)=SLDij \\begin{align*} G(t_{ij} \\mid b_i, s_i, g_i) &= SLD_{ij} \\end{align*} Accessible via linkIdentity()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"growth-parameter-link","dir":"Articles","previous_headings":"Longitudinal Model Specification > Stein-Fojo Model","what":"Growth Parameter Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi)=log(gi) \\begin{align*} G(t_{ij} \\mid b_i, s_i, g_i) &= log(g_i) \\end{align*} Accessible via linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"shrinkage-parameter-link","dir":"Articles","previous_headings":"Longitudinal Model Specification > Stein-Fojo Model","what":"Shrinkage Parameter Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi)=log(si) \\begin{align*} G(t_{ij} \\mid b_i, s_i, g_i) &= log(s_i) \\end{align*} Accessible via linkShrinkage()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"population-quantities","dir":"Articles","previous_headings":"Longitudinal Model Specification > Stein-Fojo Model","what":"Population Quantities","title":"Statistical Specifications","text":"Note generating population quantities bb, ss gg parameters median distribution used. interpretation using non-centred parameterisation setting “random effects” term 0. ϕ\\phi parameter mean distribution used.","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"generalized-stein-fojo-gsf-model","dir":"Articles","previous_headings":"Longitudinal Model Specification","what":"Generalized Stein-Fojo (GSF) Model","title":"Statistical Specifications","text":"yij∼N(SLDij,SLDij2σ2)SLDij={bi[ϕie−sitij+(1−ϕi)egitij]tij≥0biegitijif tij<0bi∼LogNormal(μbl(),ωbl())si∼LogNormal(μsk(),ωsk())gi∼LogNormal(μgk(),ωgk())ϕi∼LogitNormal(μϕk(),ωϕk()) \\begin{align*} y_{ij} &\\sim N(SLD_{ij},\\ SLD_{ij}^2 \\sigma^2) \\\\ \\\\ SLD_{ij} &=  \\begin{cases} b_i[\\phi_i e^{-s_it_{ij}} + (1-\\phi_i)e^{g_i t_{ij}}] & \\text{} t_{ij}\\geq 0 \\\\ b_i e^{g_i t_{ij}} & \\text{} t_{ij}\\lt 0 \\end{cases}\\\\ \\\\ b_i &\\sim \\text{LogNormal}(\\mu_{bl()}, \\omega_{b l()}) \\\\ s_i &\\sim \\text{LogNormal}(\\mu_{sk()}, \\omega_{s k()}) \\\\ g_i &\\sim \\text{LogNormal}(\\mu_{gk()}, \\omega_{g k()}) \\\\ \\phi_i &\\sim \\text{LogitNormal}(\\mu_{\\phi k()}, \\omega_{\\phi k()}) \\end{align*} : ii subject index jj visit index yijy_{ij} observed tumour measurements SLDijSLD_{ij} expected sum longest diameter subject ii time point jj tijt_{ij} time since first treatment subject ii visit jj bib_i subject baseline SLD measurement sis_i subject kinetics shrinkage parameter gig_i subject kinetics tumour growth parameter ϕi\\phi_i subject proportion cells affected treatment k()k() treatment arm index subject ii l()l() study index subject ii μθk()\\mu_{\\theta k()} population mean parameter θ\\theta group k()k() ωθk()\\omega_{\\theta k()} population variance parameter θ\\theta group k()k(). using non-centred parameterisation following alternative formulation used: bi=exp(μbl()+ωbl()*ηbi)si=exp(μsk()+ωsk()*ηsi)gi=exp(μgk()+ωgk()*ηgi)ϕi=logistic(μϕk()+ωϕk()*ηϕi)ηbi∼N(0,1)ηsi∼N(0,1)ηgi∼N(0,1)ηϕi∼N(0,1) \\begin{align*} b_i &= exp(\\mu_{bl()} + \\omega_{b l()} * \\eta_{b }) \\\\ s_i &= exp(\\mu_{sk()} + \\omega_{s k()} * \\eta_{s }) \\\\ g_i &= exp(\\mu_{gk()} + \\omega_{g k()} * \\eta_{g }) \\\\ \\phi_i &= \\text{logistic}(\\mu_{\\phi k()} + \\omega_{\\phi k()} * \\eta_{\\phi }) \\\\ \\\\ \\eta_{b } &\\sim  N(0, 1)\\\\ \\eta_{s } &\\sim   N(0, 1)  \\\\ \\eta_{g } &\\sim   N(0, 1)  \\\\ \\eta_{\\phi } &\\sim   N(0, 1)  \\\\ \\end{align*} : ηθi\\eta_{\\theta } random effects offset parameter θ\\theta subject ii using unscaled variance parameterisation following alternative formulation used: $$ y_{ij} &\\sim N(SLD_{ij},\\ \\sigma^2) $$","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"derivative-of-the-sld-trajectory-link-1","dir":"Articles","previous_headings":"Longitudinal Model Specification > Generalized Stein-Fojo (GSF) Model","what":"Derivative of the SLD Trajectory Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi,ϕi)={bi(−siϕie−sitij+(1−ϕi)giegitij)tij≥0bigiegitijif tij<0 G(t_{ij} \\mid b_i, s_i, g_i, \\phi_i) = \\begin{cases} b_i(-s_i\\phi_ie^{-s_it_{ij}} + (1 - \\phi_i)g_i e^{g_i t_{ij}}) & \\text{} t_{ij}\\geq 0 \\\\ b_i g_i e^{g_i t_{ij}} & \\text{} t_{ij}\\lt 0 \\end{cases} Accessible via linkDSLD()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"time-to-growth-link-1","dir":"Articles","previous_headings":"Longitudinal Model Specification > Generalized Stein-Fojo (GSF) Model","what":"Time to Growth Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi,ϕi)=max(log(si)+log(ϕi)−log(gi)−log(1−ϕi)si+gi,0) G(t_{ij} \\mid b_i, s_i, g_i, \\phi_i) = \\max \\left(     \\frac{         \\log(s_i) + \\log(\\phi_i) - \\log(g_i) - \\log(1-\\phi_i)     }{         s_i + g_i     }, 0 \\right) Accessible via linkTTG()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"identity-link-2","dir":"Articles","previous_headings":"Longitudinal Model Specification > Generalized Stein-Fojo (GSF) Model","what":"Identity Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi,ϕi)=SLDij \\begin{align*} G(t_{ij} \\mid b_i, s_i, g_i, \\phi_i) &= SLD_{ij} \\end{align*} Accessible via linkIdentity()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"growth-parameter-link-1","dir":"Articles","previous_headings":"Longitudinal Model Specification > Generalized Stein-Fojo (GSF) Model","what":"Growth Parameter Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi,ϕi)=log(gi) \\begin{align*} G(t_{ij} \\mid b_i, s_i, g_i, \\phi_i) &= log(g_i) \\end{align*} Accessible via linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"shrinkage-parameter-link-1","dir":"Articles","previous_headings":"Longitudinal Model Specification > Generalized Stein-Fojo (GSF) Model","what":"Shrinkage Parameter Link","title":"Statistical Specifications","text":"G(tij∣bi,si,gi,ϕi)=log(si) \\begin{align*} G(t_{ij} \\mid b_i, s_i, g_i, \\phi_i) &= log(s_i) \\end{align*} Accessible via linkShrinkage()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"population-quantities-1","dir":"Articles","previous_headings":"Longitudinal Model Specification > Generalized Stein-Fojo (GSF) Model","what":"Population Quantities","title":"Statistical Specifications","text":"Note generating population quantities bb, ss, gg ϕ\\phi parameters median distribution used. interpretation using non-centred parameterisation setting “random effects” term 0.","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"claret-bruno-model","dir":"Articles","previous_headings":"Longitudinal Model Specification","what":"Claret-Bruno Model","title":"Statistical Specifications","text":"yij∼N(SLDij,SLDij2σ2)SLDij={biegitijif tij<0,bi⋅exp(gitij−pici(1−e−citij))tij≥0.bi∼LogNormal(μbl(),ωbl())gi∼LogNormal(μgk(),ωgk())ci∼LogNormal(μck(),ωck())pi∼LogNormal(μpk(),ωpk()) \\begin{align*} y_{ij} &\\sim N(SLD_{ij},\\ SLD_{ij}^2 \\sigma^2) \\\\ \\\\ SLD_{ij} &=  \\begin{cases} b_i e^{g_i t_{ij}} &  \\text{} t_{ij} < 0, \\\\  b_i  \\cdot \\exp\\left(g_i  t_{ij} - \\frac{p_i}{c_i}  \\left(1 - e^{-c_i t_{ij} }\\right)\\right) &  \\text{} t_{ij} \\geq 0. \\end{cases}\\\\ \\\\ b_i &\\sim \\text{LogNormal}(\\mu_{bl()}, \\omega_{b l()}) \\\\ g_i &\\sim \\text{LogNormal}(\\mu_{gk()}, \\omega_{g k()}) \\\\ c_i &\\sim \\text{LogNormal}(\\mu_{ck()}, \\omega_{c k()}) \\\\ p_i &\\sim \\text{LogNormal}(\\mu_{pk()}, \\omega_{p k()}) \\\\ \\end{align*} : ii subject index jj visit index yijy_{ij} observed tumour measurements SLDijSLD_{ij} expected sum longest diameter subject ii time point jj tijt_{ij} time since first treatment subject ii visit jj bib_i subject baseline SLD value. gig_i subject tumour growth rate. cic_i subject treatment resistance rate. pip_i subject treatment growth inhibition response. k()k() treatment arm index subject ii l()l() study index subject ii μθk()\\mu_{\\theta k()} population mean parameter θ\\theta group k()k() ωθk()\\omega_{\\theta k()} population variance parameter θ\\theta group k()k() using non-centred parameterisation following alternative formulation used: bi=exp(μbl()+ωbl()*ηbi)gi=exp(μgk()+ωgk()*ηgi)ci=exp(μck()+ωck()*ηci)pi=exp(μpk()+ωpk()*ηpi)ηbi∼N(0,1)ηgi∼N(0,1)ηci∼N(0,1)ηpi∼N(0,1) \\begin{align*} b_i &= exp(\\mu_{b l()} + \\omega_{b l()} * \\eta_{b }) \\\\ g_i &= exp(\\mu_{g k()} + \\omega_{g k()} * \\eta_{g }) \\\\ c_i &= exp(\\mu_{c k()} + \\omega_{c k()} * \\eta_{c }) \\\\ p_i &= exp(\\mu_{p k()} + \\omega_{p k()} * \\eta_{p }) \\\\ \\\\ \\eta_{b } &\\sim  N(0, 1)\\\\ \\eta_{g } &\\sim  N(0, 1)  \\\\ \\eta_{c } &\\sim  N(0, 1)  \\\\ \\eta_{p } &\\sim  N(0, 1)  \\\\ \\end{align*} using unscaled variance parameterisation following alternative formulation used: $$ y_{ij} &\\sim N(SLD_{ij},\\ \\sigma^2) $$","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"derivative-of-the-sld-trajectory-link-2","dir":"Articles","previous_headings":"Longitudinal Model Specification > Claret-Bruno Model","what":"Derivative of the SLD Trajectory Link","title":"Statistical Specifications","text":"G(tij∣bi,gi,ci,pi)={bigiegitijif tij<0(gi−pie−citij)SLDijif tij≥0 G(t_{ij} \\mid b_i, g_i, c_i, p_i) = \\begin{cases} b_i g_i e^{g_i t_{ij}} & \\text{} t_{ij}\\lt 0 \\\\ \\left(     g_i - p_i e^{-c_i t_{ij}}  \\right) SLD_{ij}  & \\text{} t_{ij}\\geq 0 \\end{cases} Accessible via linkDSLD()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"time-to-growth-link-2","dir":"Articles","previous_headings":"Longitudinal Model Specification > Claret-Bruno Model","what":"Time to Growth Link","title":"Statistical Specifications","text":"G(tij∣bi,gi,ci,pi)=max(ln(pigi)ci,0) G(t_{ij} \\mid b_i, g_i, c_i, p_i) = \\max \\left(     \\frac{ln(\\frac{p_i}{g_i})}{c_i}, 0 \\right) Accessible via linkTTG()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"identity-link-3","dir":"Articles","previous_headings":"Longitudinal Model Specification > Claret-Bruno Model","what":"Identity Link","title":"Statistical Specifications","text":"G(tij∣bi,gi,ci,pi)=SLDij \\begin{align*} G(t_{ij} \\mid b_i, g_i, c_i, p_i) &= SLD_{ij} \\end{align*} Accessible via linkIdentity()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"growth-parameter-link-2","dir":"Articles","previous_headings":"Longitudinal Model Specification > Claret-Bruno Model","what":"Growth Parameter Link","title":"Statistical Specifications","text":"G(tij∣bi,gi,ci,pi)=log(gi) \\begin{align*} G(t_{ij} \\mid b_i, g_i, c_i, p_i) &= log(g_i) \\end{align*} Accessible via linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"population-quantities-2","dir":"Articles","previous_headings":"Longitudinal Model Specification > Claret-Bruno Model","what":"Population Quantities","title":"Statistical Specifications","text":"generating population quantities bb, gg, cc $$ parameters median distribution used. interpretation using non-centred parameterisation setting “random effects” term 0.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/articles/statistical-specification.html","id":"brier-score","dir":"Articles","previous_headings":"Post-Processing","what":"Brier Score","title":"Statistical Specifications","text":"Brier Score used measure models predictive performance. case Survival Models weighted squared difference whether subject died within given time interval models estimated probability dying within said interval. Within jmpost following formula (described Blanche et al. (2015)) implemented: BŜ(t)=1n∑=1nŴ(t)(Di(t)−πi(t))2 \\hat{BS}(t) =  \\frac{1}{n}\\sum_{=1}^{n} \\hat{W}_i(t) \\Big(D_i(t) - \\pi_i(t)  \\Big)^2 Ŵ(t)=𝟙(Ti>t)Ĝ(t)+𝟙(Ti≤t)⋅ΔiĜ(Ti) \\hat{W}_i(t) =      \\frac{\\mathbb{1}_{(T_i \\gt t)}}{\\hat{G}(t)} +      \\frac{\\mathbb{1}_{(T_i \\le t)} \\cdot \\Delta_i}{\\hat{G}(T_i)} : TiT_i observed event/censor time subject ii Δi\\Delta_i event indicator 1 TiT_i event 0 TiT_i censored 𝟙(.)\\mathbb{1}_{(.)} indicator 1 (.){(.)} true else 0 Di(t)D_i(t) event indicator function subject ii e.g. Di(t)=𝟙(Ti<t,δi=1)D_i(t) = \\mathbb{1}_{(T_i \\lt t,\\ \\delta_i = 1)} πi(t)\\pi_i(t) model predicted probability subject ii dying time tt Ĝ(u)\\hat{G}(u) Kaplan-Meier estimator survival function censoring time uu Note default Ĝ(Ti)\\hat{G}(T_i) estimated Ĝ(Ti−)\\hat{G}(T_i-) case ties event times always considered occurred censored times (contrast survival::survfit regards censored times coming event times estimating censoring distribution). default options can changed required.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Craig Gower-Page. Author, maintainer. Francois Mercier. Author. Daniel Sabanes Bove. Author. Georgios Kazantzidis. Author. Isaac Gravestock. Author. Xiaoyan Fang. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://genentech.github.io/jmpost/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gower-Page C, Mercier F, Sabanes Bove D, Kazantzidis G, Gravestock , Fang X (2025). jmpost: Joint Models Predicting Overall Survival Trajectories. R package version 0.0.1.9000, https://genentech.github.io/jmpost/.","code":"@Manual{,   title = {jmpost: Joint Models for Predicting Overall Survival Trajectories},   author = {Craig Gower-Page and Francois Mercier and Daniel {Sabanes Bove} and Georgios Kazantzidis and Isaac Gravestock and Xiaoyan Fang},   year = {2025},   note = {R package version 0.0.1.9000},   url = {https://genentech.github.io/jmpost/}, }"},{"path":"https://genentech.github.io/jmpost/index.html","id":"jmpost-","dir":"","previous_headings":"","what":"Joint Models for Predicting Overall Survival Trajectories","title":"Joint Models for Predicting Overall Survival Trajectories","text":"goal jmpost package fit joint models involving: parametric time--event sub-model, nonlinear (linear) mixed-effect sub-model, describing individual time profiles (.e. trajectories) continuous marker, link function (.k.. association term). specifically, model implemented package utilizes modelling framework described previously [1-3] link overall survival tumour size data oncology clinical trials. [1] Tardivon et al. Association tumour size kinetics survival patients urothelial carcinoma treated atezolizumab: Implications patient follow-. Clin Pharm Ther, 2019.[2] Kerioui et al. Bayesian inference using Hamiltonian Monte-Carlo algorithm nonlinear joint modelling context cancer immunotherapy. Stat Med, 2020.[3] Kerioui et al. Modelling association biomarkers clinical outcome: introduction nonlinear joint models. Br J Clin Pharm, 2022. models implemented STAN, package provides flexible user interface. Please reach us via issues email (see DESCRIPTION file) comments questions like get involved ongoing development, thank !","code":""},{"path":"https://genentech.github.io/jmpost/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Joint Models for Predicting Overall Survival Trajectories","text":"GitHub can install current development version GitHub : Please note package requires cmdstanr. CRAN package published CRAN yet.","code":"if (!require(\"remotes\")) {     install.packages(\"remotes\") } remotes::install_github(\"genentech/jmpost\")"},{"path":"https://genentech.github.io/jmpost/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Joint Models for Predicting Overall Survival Trajectories","text":"See also model fitting vignette details. present basic example . First simulate data set. practice want follow similar structure input data use DataJoint() bring right format. specify joint model, use Generalized Stein-Fojo model longitudinal part, Weibull proportional hazards model survival part. longitudinal model impacts hazard via term derivative another term time--growth. Finally can sample parameters via MCMC underlying Stan model. Note real application choose warm sampling iterations.","code":"library(jmpost) #> Registered S3 methods overwritten by 'ggpp': #>   method                  from    #>   heightDetails.titleGrob ggplot2 #>   widthDetails.titleGrob  ggplot2 set.seed(321) sim_data <- SimJointData(     design = list(         SimGroup(50, \"Arm-A\", \"Study-X\"),         SimGroup(50, \"Arm-B\", \"Study-X\")     ),     longitudinal = SimLongitudinalRandomSlope(         times = c(1, 50, 100, 150, 200, 250, 300),     ),     survival = SimSurvivalWeibullPH(         lambda = 1 / 300,         gamma = 0.97     ) ) #> INFO: 1 subject(s) did not die before max(times)  joint_data <- DataJoint(     subject = DataSubject(         data = sim_data@survival,         subject = \"subject\",         arm = \"arm\",         study = \"study\"     ),     survival = DataSurvival(         data = sim_data@survival,         formula = Surv(time, event) ~ cov_cat + cov_cont     ),     longitudinal = DataLongitudinal(         data = sim_data@longitudinal,         formula = sld ~ time,         threshold = 5     ) ) joint_model <- JointModel(     longitudinal = LongitudinalGSF(),     survival = SurvivalWeibullPH(),     link = Link(         linkDSLD(),         linkTTG()     ) ) mcmc_results <- sampleStanModel(     joint_model,     data = joint_data,     iter_sampling = 100,     iter_warmup = 100,     chains = 1,     parallel_chains = 1 )"},{"path":"https://genentech.github.io/jmpost/index.html","id":"citing-jmpost","dir":"","previous_headings":"","what":"Citing jmpost","title":"Joint Models for Predicting Overall Survival Trajectories","text":"cite jmpost please see .","code":""},{"path":"https://genentech.github.io/jmpost/reference/Brier-Score-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for Brier Score components — Brier-Score-Shared","title":"Re-used documentation for Brier Score components — Brier-Score-Shared","text":"Re-used documentation Brier Score components","code":""},{"path":"https://genentech.github.io/jmpost/reference/Brier-Score-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for Brier Score components — Brier-Score-Shared","text":"t (numeric) timepoints calculate desired quantity . times (numeric) observed times. events (numeric) event indicator times. Either 1 event 0 censor. event_offset (logical) TRUE \\(G(T_i)\\) evaluated \\(G(T_i-)\\). Setting TRUE mirrors implementation {pec} package. maintain_cen_order (logical) TRUE , case ties, censor times always considered occurred event times calculating \"reverse Kaplan-Meier\" IPCW estimates. Setting TRUE mirrors implementation {prodlim} package. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataJoint-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for DataJoint — DataJoint-Shared","title":"Re-used documentation for DataJoint — DataJoint-Shared","text":"Re-used documentation DataJoint","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataJoint-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for DataJoint — DataJoint-Shared","text":"object (DataJoint)  Survival Longitudinal Data. x (DataJoint)  Survival Longitudinal Data. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataJoint-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint Data Object and Constructor Function — DataJoint-class","title":"Joint Data Object and Constructor Function — DataJoint-class","text":"DataJoint class handles combining data DataSurvival object DataLongitudinal object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataJoint-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint Data Object and Constructor Function — DataJoint-class","text":"","code":"DataJoint(subject, survival = NULL, longitudinal = NULL)"},{"path":"https://genentech.github.io/jmpost/reference/DataJoint-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint Data Object and Constructor Function — DataJoint-class","text":"subject (DataSubject) object created DataSubject(). survival (DataSurvival) object created DataSurvival(). longitudinal (DataLongitudinal) object created DataLongitudinal().","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataJoint-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Joint Data Object and Constructor Function — DataJoint-class","text":"subject (DataSubject) See Argument details. survival (DataSurvival) See Argument details. longitudinal (DataLongitudinal) See Argument details.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/DataLongitudinal-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for DataLongitudinal — DataLongitudinal-Shared","title":"Re-used documentation for DataLongitudinal — DataLongitudinal-Shared","text":"Re-used documentation DataLongitudinal","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataLongitudinal-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for DataLongitudinal — DataLongitudinal-Shared","text":"object (DataLongitudinal)  Longitudinal Data. x (DataLongitudinal)  Longitudinal Data. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataLongitudinal-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Data Object and Constructor Function — DataLongitudinal-class","title":"Longitudinal Data Object and Constructor Function — DataLongitudinal-class","text":"DataLongitudinal class handles processing longitudinal data fitting Joint Model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataLongitudinal-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Data Object and Constructor Function — DataLongitudinal-class","text":"","code":"DataLongitudinal(data, formula, threshold = NULL)"},{"path":"https://genentech.github.io/jmpost/reference/DataLongitudinal-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Data Object and Constructor Function — DataLongitudinal-class","text":"data (data.frame) containing observed longitudinal data. formula (formula) form outcome ~ time, contain additional covariates. threshold (numeric) cut-value used declare observation censored (detection limit).","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataLongitudinal-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Longitudinal Data Object and Constructor Function — DataLongitudinal-class","text":"data (data.frame) See Arguments details; Note observations contain missing values required variables removed. formula (formula) See Arguments details threshold (numeric) See Arguments details","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/DataSubject-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for DataSubject — DataSubject-Shared","title":"Re-used documentation for DataSubject — DataSubject-Shared","text":"Re-used documentation DataSubject","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSubject-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for DataSubject — DataSubject-Shared","text":"object (DataSubject)  subject-level data. x (DataSubject)  subject-level data. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSubject-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Subject Data Object and Constructor Function — DataSubject-class","title":"Subject Data Object and Constructor Function — DataSubject-class","text":"DataSubject class handles processing subject data fitting JointModel.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSubject-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subject Data Object and Constructor Function — DataSubject-class","text":"","code":"DataSubject(data, subject, arm, study)"},{"path":"https://genentech.github.io/jmpost/reference/DataSubject-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subject Data Object and Constructor Function — DataSubject-class","text":"data (data.frame) subject-level data. subject (character) name variable containing subject identifier. arm (character) name variable containing arm identifier. study (character) name variable containing study identifier.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSubject-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Subject Data Object and Constructor Function — DataSubject-class","text":"data (data.frame) subject-level data. subject (character) name variable containing subject identifier. arm (character) name variable containing arm identifier. study (character) name variable containing study identifier.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/DataSurvival-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for DataSurvival — DataSurvival-Shared","title":"Re-used documentation for DataSurvival — DataSurvival-Shared","text":"Re-used documentation DataSurvival","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSurvival-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for DataSurvival — DataSurvival-Shared","text":"object (DataSurvival)  Survival Data. x (DataSurvival)  Survival Data. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSurvival-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Data Object and Constructor Function — DataSurvival-class","title":"Survival Data Object and Constructor Function — DataSurvival-class","text":"DataSurvival class handles processing survival data fitting JointModel.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSurvival-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Data Object and Constructor Function — DataSurvival-class","text":"","code":"DataSurvival(data, formula)"},{"path":"https://genentech.github.io/jmpost/reference/DataSurvival-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Data Object and Constructor Function — DataSurvival-class","text":"data (data.frame) observed time--event data. formula (formula) form Surv(time, event) ~ cov1 + cov2 + .... See survival::Surv() details, though note package supports right censoring.","code":""},{"path":"https://genentech.github.io/jmpost/reference/DataSurvival-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Survival Data Object and Constructor Function — DataSurvival-class","text":"data (data.frame) See Arguments details. formula (formula) See Arguments details.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Grid-Dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid Developer Notes — Grid-Dev","title":"Grid Developer Notes — Grid-Dev","text":"Developer details implementing / extending Grid objects defining generated quantities SurvivalQuantities LongitudinalQuantities.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Grid-Dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid Developer Notes — Grid-Dev","text":"grid classes must inherit abstract Grid class. grid classes must provide .QuantityGenerator(object, data) .QuantityCollapser(object, data) methods data DataJoint object. methods must return QuantityGenerator QuantityCollapser object respectively. QuantityGenerator object specifies unique subject/timepoint combinations samples generated . QuantityCollapser object specifies combine generated samples form desired quantities. example say want generate grouped samples groups Group-1 Group-2 consist subjects sub-1, sub-2 sub-3, sub-4 respectively two time points 10 20. can achieve follows:   population based quantities use arms studies arguments QuantityGenerator instead subjects.","code":"QuantityGenerator(     times = c(10, 10, 10, 10, 20, 20, 20, 20),     subjects = c(\"sub-1\" \"sub-2\", \"sub-3\", \"sub-4\", \"sub-1\" \"sub-2\", \"sub-3\", \"sub-4\") ) QuantityCollapser(     times = c(10, 20, 10 , 20),     groups = c(\"Group-1\", \"Group-1\", \"Group-2\", \"Group-2\"),     indexes = list(c(1, 2), c(5, 6), c(3, 4), c(7, 8)) )"},{"path":"https://genentech.github.io/jmpost/reference/Grid-Dev.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Grid Developer Notes — Grid-Dev","text":"subjects (character NULL) vector subjects extract quantities . NULL default subjects within dataset. times (numeric NULL) vector time points extract quantities . NULL default 201 evenly spaced timepoints 0 either max groups (list) named list subjects extract quantities . See details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Grid-Dev.html","id":"group-specification","dir":"Reference","previous_headings":"","what":"Group Specification","title":"Grid Developer Notes — Grid-Dev","text":"GridGrouped(), groups must named list character vectors. element list must character vector subjects form group element name corresponding name group. example goal create two groups named Group-1 Group-2 composed subjects sub-1, sub-2 sub-3, sub-4 respectively specified :","code":"GridGrouped(     groups = list(         \"Group-1\" = c(\"sub-1\", \"sub-2\"),         \"Group-2\" = c(\"sub-3\", \"sub-4\")     ) )"},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Grid-Functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantity Grid Specification — Grid-Functions","title":"Quantity Grid Specification — Grid-Functions","text":"functions used specify subjects timepoints generated calculating quantities via SurvivalQuantities LongitudinalQuantities.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Grid-Functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantity Grid Specification — Grid-Functions","text":"","code":"GridEven(subjects = NULL, length.out = 30)  GridEvent(subjects = NULL)  GridFixed(subjects = NULL, times = NULL)  GridGrouped(groups, times = NULL)  GridManual(spec)  GridObserved(subjects = NULL)  GridPopulation(times = NULL)  GridPrediction(times = NULL, newdata, params = list())"},{"path":"https://genentech.github.io/jmpost/reference/Grid-Functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantity Grid Specification — Grid-Functions","text":"subjects (character NULL) vector subjects extract quantities . NULL default subjects within dataset. length.(numeric) number evenly spaced timepoints generate quantities . times (numeric NULL) vector time points extract quantities . NULL default 201 evenly spaced timepoints 0 either max observation time (LongitudinalQuantities) max event time (SurvivalQuantities). groups (list) named list subjects extract quantities . See Group Specification. spec (list) named list subjects extract quantities . names element required subjects element numeric vector timepoints generate quantity . newdata (data.frame)  new data generate quantities . Must contain columns factor levels original data used DataSurvival object. params (list) named list parameters fix longitudinal model parameters predicting survival quantities. See getPredictionNames() required parameters.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Grid-Functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantity Grid Specification — Grid-Functions","text":"GridFixed() used specify fixed set timepoints generate quantities specified subjects. GridGrouped() similar GridFixed() allows groupwise averaging (see Group Specification). GridObserved() generates quantities observed longitudinal timepoints subject. GridManual() allows individual timepoint specification subject. GridEven() generates quantities subject N evenly spaced timepoints subjects first last longitudinal observations. GridEvent() generates one quantity subject event/censor time indicated time variable survival dataset. GridPopulation() generates longitudinal model quantities based population parameters specified time points. Generates 1 set quantities distinct combination arm study within DataSubject object provided JointModel. GridPrediction() generates survival quantities based user-defined values specified time points. useful generating quantities new dataset specific longitudinal model parameters. See getPredictionNames() determine longitudinal model parameters need defined given longitudinal model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Grid-Functions.html","id":"group-specification","dir":"Reference","previous_headings":"","what":"Group Specification","title":"Quantity Grid Specification — Grid-Functions","text":"GridGrouped(), groups must named list character vectors. element list must character vector subjects form group element name corresponding name group. example goal create two groups named Group-1 Group-2 composed subjects sub-1, sub-2 sub-3, sub-4 respectively specified :","code":"GridGrouped(     groups = list(         \"Group-1\" = c(\"sub-1\", \"sub-2\"),         \"Group-2\" = c(\"sub-3\", \"sub-4\")     ) )"},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/JointModel-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for JointModel-Shared — JointModel-Shared","title":"Re-used documentation for JointModel-Shared — JointModel-Shared","text":"Re-used documentation JointModel-Shared","code":""},{"path":"https://genentech.github.io/jmpost/reference/JointModel-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for JointModel-Shared — JointModel-Shared","text":"object (JointModel)  Joint model specification. x (JointModel)  Joint model specification. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/JointModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint Model Object and Constructor Function — JointModel-class","title":"Joint Model Object and Constructor Function — JointModel-class","text":"Joint Model Object Constructor Function","code":""},{"path":"https://genentech.github.io/jmpost/reference/JointModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint Model Object and Constructor Function — JointModel-class","text":"","code":"JointModel(longitudinal = NULL, survival = NULL, link = Link())"},{"path":"https://genentech.github.io/jmpost/reference/JointModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint Model Object and Constructor Function — JointModel-class","text":"longitudinal (LongitudinalModel NULL) longitudinal model. survival (SurvivalModel NULL) survival model. link (Link) link.","code":""},{"path":"https://genentech.github.io/jmpost/reference/JointModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Joint Model Object and Constructor Function — JointModel-class","text":"longitudinal (LongitudinalModel NULL) longitudinal model. survival (SurvivalModel NULL) survival model. link (Link) link. parameters (ParameterList) parameter specification.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/JointModelSamples-class.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModelSamples — JointModelSamples-class","title":"JointModelSamples — JointModelSamples-class","text":"Contains samples JointModel.","code":""},{"path":"https://genentech.github.io/jmpost/reference/JointModelSamples-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"JointModelSamples — JointModelSamples-class","text":"model (JointModel) model samples drawn . data (DataJoint) data model fitted . results (cmdstanr::CmdStanMCMC) STAN samples.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Link-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Link Function Arguments — Link-Shared","title":"Link Function Arguments — Link-Shared","text":"exists just contain common arguments Link methods.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Link-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link Function Arguments — Link-Shared","text":"x (Link) link object. object (Link) link object. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Link-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Link — Link-class","title":"Link — Link-class","text":"Simple container class enable use multiple link components joint model. Note constructor object idempotent e.g. Link(Link(x)) == Link(x)","code":""},{"path":"https://genentech.github.io/jmpost/reference/Link-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link — Link-class","text":"","code":"Link(...)"},{"path":"https://genentech.github.io/jmpost/reference/Link-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link — Link-class","text":"... (LinkComponent PromiseLinkComponent) arbitrary number link components.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Link-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Link — Link-class","text":"components (list) list LinkComponent PromiseLinkComponent objects. resolved (logical) indicates components resolved.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Link-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Link — Link-class","text":"","code":"Link(     linkDSLD(),     linkTTG() ) #>  #> Link with the following components/parameters: #>     link_dsld ~ normal(mu = 0, sigma = 2) #>     link_ttg ~ normal(mu = 0, sigma = 2)"},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkComponent Function Arguments — LinkComponent-Shared","title":"LinkComponent Function Arguments — LinkComponent-Shared","text":"exists contain common arguments LinkComponent methods.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinkComponent Function Arguments — LinkComponent-Shared","text":"stan (StanModule) Stan code. x (LinkComponent) link component. object (LinkComponent) link component. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkComponent — LinkComponent-class","title":"LinkComponent — LinkComponent-class","text":"LinkComponent","code":""},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinkComponent — LinkComponent-class","text":"","code":"LinkComponent(stan, prior, key, ...)"},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinkComponent — LinkComponent-class","text":"stan (StanModule) Stan code. See Details. prior (Prior) prior scaling coeficient. key (character) Link identifier. See Details. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LinkComponent — LinkComponent-class","text":"object provides key information needed construct link contribution survival model based parameters longitudinal model. link component defines stan function longitudinal model parameters multiplied model coefficient added survival models hazard function. full details specification LinkComponent please see vignette(\"extending-jmpost\", package = \"jmpost\").","code":""},{"path":"https://genentech.github.io/jmpost/reference/LinkComponent-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LinkComponent — LinkComponent-class","text":"stan (StanModule) See Arguments. name (character) See Arguments. parameters (ParameterList) parameter specification.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Local_Sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Stub functions for sampling from distributions — Local_Sample","title":"Stub functions for sampling from distributions — Local_Sample","text":"functions exist can mocked unit tests order provide deterministic values. cases just straight forward pass throughs underlying distributions.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Local_Sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stub functions for sampling from distributions — Local_Sample","text":"","code":"local_rnorm(...)  local_rcauchy(...)  local_rgamma(...)  local_rlnorm(...)  local_rbeta(...)  local_runif(...)  local_rt(n, nu, mu, sigma)  local_rlogis(...)  local_rloglogis(n, alpha, beta)  local_rinvgamma(n, alpha, beta)"},{"path":"https://genentech.github.io/jmpost/reference/Local_Sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stub functions for sampling from distributions — Local_Sample","text":"... Pass additional arguments underlying distribution. nu (number) Parameter underlying distribution. mu (number) Parameter underlying distribution. sigma (number) Parameter underlying distribution. alpha (number) Parameter underlying distribution. beta (number) Parameter underlying distribution.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Local_Sample.html","id":"log-logistic","dir":"Reference","previous_headings":"","what":"Log-Logistic","title":"Stub functions for sampling from distributions — Local_Sample","text":"log-logistic sampling function within base R implemented terms sampling CDF distribution. Using Stan parameterisation CDF defined : $$ u = F(x) = \\frac{1}{1 + (x/ \\alpha)^{-\\beta}} $$ inverse function : $$ x = ((u / (1 - u))^(1 / beta)) * alpha $$ Thus can sample u \\(Uni(0, 1)\\) distribution derive x .","code":""},{"path":"https://genentech.github.io/jmpost/reference/Local_Sample.html","id":"inverse-gamma","dir":"Reference","previous_headings":"","what":"Inverse-Gamma","title":"Stub functions for sampling from distributions — Local_Sample","text":"inverse Gamma distribution defined 1/Gamma thus calculate simply sampling sampling Gamma distribution taking reciprocal.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Local_Sample.html","id":"student-t","dir":"Reference","previous_headings":"","what":"Student-t","title":"Stub functions for sampling from distributions — Local_Sample","text":"R's sampling functions produce standard Student-t distribution order match Stan's implementation multiply scale parameter add location parameter. See Stack Overflow post details","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalClaretBruno-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalClaretBruno — LongitudinalClaretBruno-class","title":"LongitudinalClaretBruno — LongitudinalClaretBruno-class","text":"class extends general LongitudinalModel class using Claret-Bruno model longitudinal outcome.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalClaretBruno-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalClaretBruno — LongitudinalClaretBruno-class","text":"","code":"LongitudinalClaretBruno(   mu_b = prior_normal(log(60), 0.5),   mu_g = prior_normal(log(1), 0.5),   mu_c = prior_normal(log(0.4), 0.5),   mu_p = prior_normal(log(2), 0.5),   omega_b = prior_lognormal(log(0.2), 0.5),   omega_g = prior_lognormal(log(0.2), 0.5),   omega_c = prior_lognormal(log(0.2), 0.5),   omega_p = prior_lognormal(log(0.2), 0.5),   sigma = prior_lognormal(log(0.1), 0.5),   scaled_variance = TRUE,   centred = FALSE )"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalClaretBruno-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalClaretBruno — LongitudinalClaretBruno-class","text":"mu_b (Prior) mean population baseline sld value. mu_g (Prior) mean population growth rate. mu_c (Prior) mean population resistance rate. mu_p (Prior) mean population growth inhibition omega_b (Prior) population standard deviation baseline sld value. omega_g (Prior) population standard deviation growth rate. omega_c (Prior) population standard deviation resistance rate. omega_p (Prior) population standard deviation growth inhibition. sigma (Prior) variance longitudinal values. scaled_variance (logical) whether variance scaled expected value (see \"Statistical Specifications\" vignette details) centred (logical) whether use centred parameterization.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalClaretBruno-class.html","id":"available-links","dir":"Reference","previous_headings":"","what":"Available Links","title":"LongitudinalClaretBruno — LongitudinalClaretBruno-class","text":"linkDSLD() linkTTG() linkIdentity() linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalGSF-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalGSF — LongitudinalGSF-class","title":"LongitudinalGSF — LongitudinalGSF-class","text":"class extends general LongitudinalModel class using Generalized Stein-Fojo (GSF) model longitudinal outcome.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalGSF-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalGSF — LongitudinalGSF-class","text":"","code":"LongitudinalGSF(   mu_bsld = prior_normal(log(60), 1),   mu_ks = prior_normal(log(0.5), 1),   mu_kg = prior_normal(log(0.3), 1),   mu_phi = prior_normal(qlogis(0.5), 1),   omega_bsld = prior_lognormal(log(0.2), 1),   omega_ks = prior_lognormal(log(0.2), 1),   omega_kg = prior_lognormal(log(0.2), 1),   omega_phi = prior_lognormal(log(0.2), 1),   sigma = prior_lognormal(log(0.1), 1),   scaled_variance = TRUE,   centred = FALSE )"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalGSF-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalGSF — LongitudinalGSF-class","text":"mu_bsld (Prior) mean baseline value mu_bsld. mu_ks (Prior) mean shrinkage rate mu_ks. mu_kg (Prior) mean growth rate mu_kg. mu_phi (Prior) mean proportion cells affected treatment mu_phi. omega_bsld (Prior) baseline value standard deviation omega_bsld. omega_ks (Prior) shrinkage rate standard deviation omega_ks. omega_kg (Prior) growth rate standard deviation omega_kg. omega_phi (Prior) standard deviation proportion cells affected treatment omega_phi. sigma (Prior) variance longitudinal values sigma. scaled_variance (logical) whether variance scaled expected value (see \"Statistical Specifications\" vignette details) centred (logical) whether use centred parameterization.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalGSF-class.html","id":"available-links","dir":"Reference","previous_headings":"","what":"Available Links","title":"LongitudinalGSF — LongitudinalGSF-class","text":"linkDSLD() linkTTG() linkIdentity() linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalModel — LongitudinalModel-class","title":"LongitudinalModel — LongitudinalModel-class","text":"class extends general StanModel class comprise longitudinal model specification.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalModel — LongitudinalModel-class","text":"","code":"LongitudinalModel(   stan = StanModule(),   parameters = ParameterList(),   name = \"<Unnamed>\",   ... )"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalModel — LongitudinalModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. name (character) display name model object. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for LongitudinalQuantities — LongitudinalQuantities-Shared","title":"Re-used documentation for LongitudinalQuantities — LongitudinalQuantities-Shared","text":"Re-used documentation LongitudinalQuantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for LongitudinalQuantities — LongitudinalQuantities-Shared","text":"x (LongitudinalQuantities)  longitudinal quantities. object (LongitudinalQuantities)  longitudinal quantities. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalQuantities Object & Constructor Function — LongitudinalQuantities-class","title":"LongitudinalQuantities Object & Constructor Function — LongitudinalQuantities-class","text":"Constructor function generate LongitudinalQuantities object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalQuantities Object & Constructor Function — LongitudinalQuantities-class","text":"","code":"LongitudinalQuantities(object, grid)"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalQuantities Object & Constructor Function — LongitudinalQuantities-class","text":"object (JointModelSamples)  samples drawn Joint Model. grid (Grid)  object specifies subjects time points calculate quantities . See Grid-Functions.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LongitudinalQuantities Object & Constructor Function — LongitudinalQuantities-class","text":"Note unlike SurvivalQuantities, LongitudinalQuantities support group aggregation.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalQuantities-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LongitudinalQuantities Object & Constructor Function — LongitudinalQuantities-class","text":"quantities (Quantities) sampled quantities. contain 1 element per element group data (DataJoint) Survival Longitudinal Data.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomEffects.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Random Effects Samples from a Longitudinal Model — LongitudinalRandomEffects","title":"Extract Random Effects Samples from a Longitudinal Model — LongitudinalRandomEffects","text":"Helper function extract subject-level random effects samples longitudinal sub-model joint model samples object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomEffects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Random Effects Samples from a Longitudinal Model — LongitudinalRandomEffects","text":"","code":"LongitudinalRandomEffects(object)"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomEffects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Random Effects Samples from a Longitudinal Model — LongitudinalRandomEffects","text":"object (JointModelSamples)  samples drawn Joint Model.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomSlope-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"class extends general LongitudinalModel class using random slope linear model longitudinal outcome.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomSlope-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"","code":"LongitudinalRandomSlope(   intercept = prior_normal(30, 10),   slope_mu = prior_normal(1, 3),   slope_sigma = prior_lognormal(0, 1.5),   sigma = prior_lognormal(0, 1.5) )"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomSlope-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"intercept (Prior) intercept. slope_mu (Prior) population slope slope_mu. slope_sigma (Prior) random slope standard deviation slope_sigma. sigma (Prior) variance longitudinal values sigma.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalRandomSlope-class.html","id":"available-links","dir":"Reference","previous_headings":"","what":"Available Links","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"linkDSLD() linkIdentity()","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalSteinFojo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalSteinFojo — LongitudinalSteinFojo-class","title":"LongitudinalSteinFojo — LongitudinalSteinFojo-class","text":"class extends general LongitudinalModel class using Stein-Fojo model longitudinal outcome.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalSteinFojo-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalSteinFojo — LongitudinalSteinFojo-class","text":"","code":"LongitudinalSteinFojo(   mu_bsld = prior_normal(log(60), 1),   mu_ks = prior_normal(log(0.5), 1),   mu_kg = prior_normal(log(0.3), 1),   omega_bsld = prior_lognormal(log(0.2), 1),   omega_ks = prior_lognormal(log(0.2), 1),   omega_kg = prior_lognormal(log(0.2), 1),   sigma = prior_lognormal(log(0.1), 1),   scaled_variance = TRUE,   centred = FALSE )"},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalSteinFojo-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalSteinFojo — LongitudinalSteinFojo-class","text":"mu_bsld (Prior) mean baseline value mu_bsld. mu_ks (Prior) mean shrinkage rate mu_ks. mu_kg (Prior) mean growth rate mu_kg. omega_bsld (Prior) baseline value standard deviation omega_bsld. omega_ks (Prior) shrinkage rate standard deviation omega_ks. omega_kg (Prior) growth rate standard deviation omega_kg. sigma (Prior) variance longitudinal values sigma. scaled_variance (logical) whether variance scaled expected value (see \"Statistical Specifications\" vignette details) centred (logical) whether use centred parameterization.","code":""},{"path":"https://genentech.github.io/jmpost/reference/LongitudinalSteinFojo-class.html","id":"available-links","dir":"Reference","previous_headings":"","what":"Available Links","title":"LongitudinalSteinFojo — LongitudinalSteinFojo-class","text":"linkDSLD() linkTTG() linkIdentity() linkGrowth()","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-Getter-Methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Getter Functions — Parameter-Getter-Methods","title":"Parameter Getter Functions — Parameter-Getter-Methods","text":"Getter functions slots Parameter object","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-Getter-Methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Getter Functions — Parameter-Getter-Methods","text":"","code":"# S3 method for class 'Parameter' names(x)  # S3 method for class 'Parameter' initialValues(object, ...)  # S3 method for class 'Parameter' size(object)"},{"path":"https://genentech.github.io/jmpost/reference/Parameter-Getter-Methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Getter Functions — Parameter-Getter-Methods","text":"x (Paramater)  model parameter object (Paramater)  model parameter ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-Getter-Methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Parameter Getter Functions — Parameter-Getter-Methods","text":"names(Parameter): parameter's name initialValues(Parameter): parameter's initial values size(Parameter): parameter's dimensionality","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Parameter-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Function Arguments — Parameter-Shared","title":"Parameter Function Arguments — Parameter-Shared","text":"documentation lists conventional arguments Parameter constructors.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Function Arguments — Parameter-Shared","text":"x (Parameter) prior Distribution object (Parameter) prior Distribution ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter — Parameter-class","title":"Parameter — Parameter-class","text":"Stores name, prior distribution size parameter. size string indicates name variable within stan data object specifies size parameter.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter — Parameter-class","text":"","code":"Parameter(prior, name, size = 1)"},{"path":"https://genentech.github.io/jmpost/reference/Parameter-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter — Parameter-class","text":"prior (Prior) parameter. name (string) parameter. size (numeric string) dimension parameter.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Parameter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Parameter — Parameter-class","text":"name (string) parameter. prior (Prior) parameter. size (numeric string) dimension parameter.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-Getter-Methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter-List Getter Functions — ParameterList-Getter-Methods","title":"Parameter-List Getter Functions — ParameterList-Getter-Methods","text":"Getter functions slots ParameterList object","code":""},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-Getter-Methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter-List Getter Functions — ParameterList-Getter-Methods","text":"","code":"# S3 method for class 'ParameterList' names(x)  # S3 method for class 'ParameterList' initialValues(object, n_chains, ...)  # S3 method for class 'ParameterList' size(object)"},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-Getter-Methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter-List Getter Functions — ParameterList-Getter-Methods","text":"x (ParameterList)  List Parameter Objects. object (ParameterList)  List Parameter Objects. n_chains (integer)  number chains. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-Getter-Methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Parameter-List Getter Functions — ParameterList-Getter-Methods","text":"names(ParameterList): parameter-list's parameter names initialValues(ParameterList): parameter-list's parameter initial values size(ParameterList): parameter-list's parameter dimensionality","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList-Shared — ParameterList-Shared","title":"ParameterList-Shared — ParameterList-Shared","text":"ParameterList-Shared","code":""},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList-Shared — ParameterList-Shared","text":"object (ParameterList)  List Parameter Objects. x (ParameterList)  List Parameter Objects. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList — ParameterList-class","title":"ParameterList — ParameterList-class","text":"class extends general list type containing Parameter specifications.","code":""},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterList — ParameterList-class","text":"","code":"ParameterList(...)"},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList — ParameterList-class","text":"... (Parameter) parameter specifications include.","code":""},{"path":"https://genentech.github.io/jmpost/reference/ParameterList-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ParameterList — ParameterList-class","text":"parameters (list)  list Parameter objects","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Prior-Getter-Methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior Getter Functions — Prior-Getter-Methods","title":"Prior Getter Functions — Prior-Getter-Methods","text":"Getter functions slots Prior object","code":""},{"path":"https://genentech.github.io/jmpost/reference/Prior-Getter-Methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior Getter Functions — Prior-Getter-Methods","text":"","code":"# S3 method for class 'Prior' initialValues(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/Prior-Getter-Methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior Getter Functions — Prior-Getter-Methods","text":"object (Prior) prior Distribution ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Prior-Getter-Methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Prior Getter Functions — Prior-Getter-Methods","text":"initialValues(Prior): prior's initial value","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Prior-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior Function Arguments — Prior-Shared","title":"Prior Function Arguments — Prior-Shared","text":"documentation lists conventional arguments Prior constructors.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Prior-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior Function Arguments — Prior-Shared","text":"centre (number) central point distribution shrink sampled values towards (distributions mean median mean undefined) x (Prior) prior Distribution object (Prior) prior Distribution name (character) name parameter prior distribution ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Prior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior Object and Constructor Function — Prior-class","title":"Prior Object and Constructor Function — Prior-class","text":"Specifies prior distribution Stan Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/Prior-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior Object and Constructor Function — Prior-class","text":"","code":"Prior(   parameters,   display,   repr_model,   repr_data,   centre,   validation,   sample,   limits = c(-Inf, Inf) )"},{"path":"https://genentech.github.io/jmpost/reference/Prior-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior Object and Constructor Function — Prior-class","text":"parameters (list) prior distribution parameters. display (string) string display object printed. repr_model (string) Stan code representation model block. repr_data (string) Stan code representation data block. centre (numeric) central point distribution shrink sampled values towards validation (list) prior distribution parameter validation functions. Must names paramaters slot. sample (function) function sample prior distribution. limits (numeric) lower upper limits truncated distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/Prior-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Prior Object and Constructor Function — Prior-class","text":"parameters (list) See arguments. repr_model (string) See arguments. repr_data (string) See arguments. centre (numeric) See arguments. validation (list) See arguments. display (string) See arguments. sample (function) See arguments. limits (numeric) See arguments.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Promise-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Promise — Promise-class","title":"Promise — Promise-class","text":"Abstract class promise objects inherit ","code":""},{"path":"https://genentech.github.io/jmpost/reference/PromiseLinkComponent-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Promise of a LinkComponent — PromiseLinkComponent-class","title":"Promise of a LinkComponent — PromiseLinkComponent-class","text":"object promises resolve LinkComponent object. Inheriting Promise LinkComponent.","code":""},{"path":"https://genentech.github.io/jmpost/reference/PromiseLinkComponent-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Promise of a LinkComponent — PromiseLinkComponent-class","text":"","code":"PromiseLinkComponent(fun, prior, key)"},{"path":"https://genentech.github.io/jmpost/reference/PromiseLinkComponent-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Promise of a LinkComponent — PromiseLinkComponent-class","text":"fun (function)  function returns LinkComponent. See details. prior (Prior) prior scaling coeficient. key (character) Link identifier. See Details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/PromiseLinkComponent-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Promise of a LinkComponent — PromiseLinkComponent-class","text":"fun slot function signature function(prior, model) return LinkComponent object. error thrown returned LinkComponent object key slot value original PromiseLinkComponent.","code":""},{"path":"https://genentech.github.io/jmpost/reference/PromiseLinkComponent-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Promise of a LinkComponent — PromiseLinkComponent-class","text":"fun (function)  function returns LinkComponent. See details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/PromiseLongitudinalModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Promise of a LongitudinalModel — PromiseLongitudinalModel-class","title":"Promise of a LongitudinalModel — PromiseLongitudinalModel-class","text":"object promises resolve LongitudinalModel object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/PromiseLongitudinalModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Promise of a LongitudinalModel — PromiseLongitudinalModel-class","text":"","code":"PromiseLongitudinalModel()"},{"path":"https://genentech.github.io/jmpost/reference/Quant-Dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantity Developer Notes — as.QuantityGenerator","title":"Quantity Developer Notes — as.QuantityGenerator","text":"Developer details QuantityX objects/methods. page just outlines arguments slots objects/methods. full implementation details please see Grid-Dev","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quant-Dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantity Developer Notes — as.QuantityGenerator","text":"","code":"as.QuantityGenerator(object, ...)  as.QuantityCollapser(object, ...)  QuantityCollapser(times, groups, indexes)  # S3 method for class 'GridEven' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridEven' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridEvent' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridEvent' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridFixed' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridFixed' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridGrouped' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridGrouped' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridManual' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridManual' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridObserved' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridObserved' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridPopulation' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridPopulation' as.QuantityCollapser(object, data, ...)  # S3 method for class 'GridPrediction' as.QuantityGenerator(object, data, ...)  # S3 method for class 'GridPrediction' as.QuantityCollapser(object, data, ...)  QuantityGeneratorPopulation(times, studies = NULL, arms = NULL)  QuantityGeneratorPrediction(times, newdata = NULL, params = NULL)  QuantityGeneratorSubject(times, subjects = NULL)"},{"path":"https://genentech.github.io/jmpost/reference/Quant-Dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantity Developer Notes — as.QuantityGenerator","text":"object (Grid) object convert QuantityGenerator QuantityCollapser. ... currently used. times (numeric) vector time points extract quantities . groups (character) vector labels apply generated quantities. indexes (list) list indexes specify observations QuantityGenerator combined form desired quantities. data (DataJoint) Survival Longitudinal Data. subjects (character) vector subjects extract quantities .","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quant-Dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantity Developer Notes — as.QuantityGenerator","text":".QuantityGenerator must return QuantityGenerator object. .QuantityCollapser must return QuantityCollapser object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quant-Dev.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Quantity Developer Notes — as.QuantityGenerator","text":"times (numeric) See Arguments details. subjects (character) See Arguments details. groups (character) See Arguments details. indexes (list) See Arguments details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quantities-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for Quantities — Quantities-Shared","title":"Re-used documentation for Quantities — Quantities-Shared","text":"Re-used documentation Quantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quantities-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for Quantities — Quantities-Shared","text":"x (Quantities)  generated quantities. object (Quantities)  generated quantities. type (character) sets type variable. conf.level (numeric)  confidence level interval. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quantities-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Generated Quantities Container — Quantities-class","title":"Generated Quantities Container — Quantities-class","text":"simple wrapper around matrix store required metadata","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quantities-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generated Quantities Container — Quantities-class","text":"","code":"Quantities(quantities, times, groups)"},{"path":"https://genentech.github.io/jmpost/reference/Quantities-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generated Quantities Container — Quantities-class","text":"quantities (matrix) generated quantities. times (numeric) labels specifying time point quantity generated . groups (character) labels group quantity belongs .","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quantities-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generated Quantities Container — Quantities-class","text":"row matrix represents sample column represents distinct quantity. number columns matrix equal length times groups provide metadata quantity belongs time point generated .","code":""},{"path":"https://genentech.github.io/jmpost/reference/Quantities-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Generated Quantities Container — Quantities-class","text":"quantities (matrix) See Arguments details. times (numeric) See Arguments details. groups (character) See Arguments details.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for RandomEffectQuantities — RandomEffectQuantities-Shared","title":"Re-used documentation for RandomEffectQuantities — RandomEffectQuantities-Shared","text":"Re-used documentation RandomEffectQuantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for RandomEffectQuantities — RandomEffectQuantities-Shared","text":"x (RandomEffectQuantities)  generated quantities. object (RandomEffectQuantities)  generated quantities. conf.level (numeric)  confidence level interval. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Effects Quantities Container — RandomEffectQuantities-class","title":"Random Effects Quantities Container — RandomEffectQuantities-class","text":"simple wrapper around matrix store required metadata patient level random effects data","code":""},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Effects Quantities Container — RandomEffectQuantities-class","text":"","code":"RandomEffectQuantities(quantities, subject, parameter)"},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Effects Quantities Container — RandomEffectQuantities-class","text":"quantities (matrix) random effects values. subject (character) labels specifying subjects values belong . parameter (character) labels specifying parameter value .","code":""},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random Effects Quantities Container — RandomEffectQuantities-class","text":"row matrix represents sample column represents distinct subject specific parameter. number columns matrix equal length subject parameter provide metadata parameter corresponds well parameter .","code":""},{"path":"https://genentech.github.io/jmpost/reference/RandomEffectQuantities-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Random Effects Quantities Container — RandomEffectQuantities-class","text":"quantities (matrix) See Arguments details. subject (numeric) See Arguments details. parameter (character) See Arguments details.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/STAN_BLOCKS.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Stan Blocks — STAN_BLOCKS","title":"List of Stan Blocks — STAN_BLOCKS","text":"list 1 element per standard Stan program blocks. object  mostly used internally reference blocks expected exist within given Stan program.","code":""},{"path":"https://genentech.github.io/jmpost/reference/STAN_BLOCKS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Stan Blocks — STAN_BLOCKS","text":"","code":"STAN_BLOCKS"},{"path":"https://genentech.github.io/jmpost/reference/STAN_BLOCKS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Stan Blocks — STAN_BLOCKS","text":"object class list length 7.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimGroup-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Simulation Group — SimGroup-class","title":"Define Simulation Group — SimGroup-class","text":"Specifies simulation group used SimJointData().","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimGroup-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Simulation Group — SimGroup-class","text":"","code":"SimGroup(n, arm, study)"},{"path":"https://genentech.github.io/jmpost/reference/SimGroup-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Simulation Group — SimGroup-class","text":"n (numeric) number subjects group. arm (character) treatment arm. study (character) study name.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimGroup-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Define Simulation Group — SimGroup-class","text":"n (numeric) See arguments. arm (character) See arguments. study (character) See arguments.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimGroup-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define Simulation Group — SimGroup-class","text":"","code":"SimGroup(n = 50, arm = \"Arm-A\", study = \"Study-1\") #> An object of class \"SimGroup\" #> Slot \"n\": #> [1] 50 #>  #> Slot \"arm\": #> [1] \"Arm-A\" #>  #> Slot \"study\": #> [1] \"Study-1\" #>"},{"path":"https://genentech.github.io/jmpost/reference/SimJointData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating Joint Longitudinal and Time-to-Event Data — SimJointData-class","title":"Simulating Joint Longitudinal and Time-to-Event Data — SimJointData-class","text":"Simulating Joint Longitudinal Time--Event Data","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimJointData-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulating Joint Longitudinal and Time-to-Event Data — SimJointData-class","text":"","code":"SimJointData(   design = list(SimGroup(n = 50, study = \"Study-1\", arm = \"Arm-A\"), SimGroup(n = 50,     study = \"Study-1\", arm = \"Arm-B\")),   longitudinal,   survival,   .silent = FALSE )"},{"path":"https://genentech.github.io/jmpost/reference/SimJointData-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating Joint Longitudinal and Time-to-Event Data — SimJointData-class","text":"design (list) list SimGroup objects. See details. longitudinal (SimLongitudinal) object specifying simulate longitudinal data survival (SimSurvival) object specifying simulate survival data .silent (flag) whether suppress info messages","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimJointData-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulating Joint Longitudinal and Time-to-Event Data — SimJointData-class","text":"design argument used specify many distinct groups simulated including key information number subjects within group well treatment arm study group belongs . design argument list SimGroup objects e.g.","code":"design = list(     SimGroup(n = 50, study = \"Study-1\", arm = \"Arm-A\"),     SimGroup(n = 50, study = \"Study-1\", arm = \"Arm-B\") )"},{"path":"https://genentech.github.io/jmpost/reference/SimJointData-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Simulating Joint Longitudinal and Time-to-Event Data — SimJointData-class","text":"longitudinal (data.frame) simulated longitudinal data. survival (data.frame) simulated survival data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinal-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Simulation Class for Longitudinal Data — SimLongitudinal-class","title":"Abstract Simulation Class for Longitudinal Data — SimLongitudinal-class","text":"class exists extended classes simulate longitudinal data. intended used directly.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinal-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Simulation Class for Longitudinal Data — SimLongitudinal-class","text":"","code":"SimLongitudinal(times = seq(0, 100, 50))"},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinal-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Simulation Class for Longitudinal Data — SimLongitudinal-class","text":"times (numeric) times generate observations .","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalClaretBruno-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Longitudinal Data from a Claret-Bruno Model — SimLongitudinalClaretBruno-class","title":"Simulate Longitudinal Data from a Claret-Bruno Model — SimLongitudinalClaretBruno-class","text":"Simulate Longitudinal Data Claret-Bruno Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalClaretBruno-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Longitudinal Data from a Claret-Bruno Model — SimLongitudinalClaretBruno-class","text":"","code":"SimLongitudinalClaretBruno(   times = c(-100, -50, 0, 50, 100, 150, 250, 350, 450, 550)/365,   sigma = 0.01,   mu_b = log(60),   mu_g = log(c(0.9, 1.1)),   mu_c = log(c(0.25, 0.35)),   mu_p = log(c(1.5, 2)),   omega_b = 0.2,   omega_g = 0.2,   omega_c = 0.2,   omega_p = 0.2,   link_dsld = 0,   link_ttg = 0,   link_identity = 0,   link_growth = 0,   scaled_variance = TRUE )"},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalClaretBruno-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Longitudinal Data from a Claret-Bruno Model — SimLongitudinalClaretBruno-class","text":"times (numeric) times generate observations . sigma (number) variance longitudinal values. mu_b (numeric) mean population baseline sld value. mu_g (numeric) mean population growth rate. mu_c (numeric) mean population resistance rate. mu_p (numeric) mean population growth inhibition. omega_b (number) population standard deviation baseline sld value. omega_g (number) population standard deviation growth rate. omega_c (number) population standard deviation resistance rate. omega_p (number) population standard deviation growth inhibition. link_dsld (number) link coefficient derivative contribution. link_ttg (number) link coefficient time--growth contribution. link_identity (number) link coefficient SLD Identity contribution. link_growth (number) link coefficient growth parameter contribution. scaled_variance (logical) whether variance scaled expected value (see \"Statistical Specifications\" vignette details)","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalClaretBruno-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Simulate Longitudinal Data from a Claret-Bruno Model — SimLongitudinalClaretBruno-class","text":"sigma (numeric) See arguments. mu_b (numeric) See arguments. mu_g (numeric) See arguments. mu_c (numeric) See arguments. mu_p (numeric) See arguments. omega_b (numeric) See arguments. omega_g (numeric) See arguments. omega_c (numeric) See arguments. omega_p (numeric) See arguments. link_dsld (numeric) See arguments. link_ttg (numeric) See arguments. link_identity (numeric) See arguments. link_growth (numeric) See arguments. scaled_variance (logical) See arguments.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalGSF-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Longitudinal Data from a GSF Model — SimLongitudinalGSF-class","title":"Simulate Longitudinal Data from a GSF Model — SimLongitudinalGSF-class","text":"Simulate Longitudinal Data GSF Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalGSF-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Longitudinal Data from a GSF Model — SimLongitudinalGSF-class","text":"","code":"SimLongitudinalGSF(   times = c(-100, -50, 0, 50, 100, 150, 250, 350, 450, 550)/365,   sigma = 0.01,   mu_s = log(c(0.6, 0.4)),   mu_g = log(c(0.25, 0.35)),   mu_b = log(60),   mu_phi = qlogis(c(0.4, 0.6)),   omega_b = 0.2,   omega_s = 0.2,   omega_g = 0.2,   omega_phi = 0.2,   link_dsld = 0,   link_ttg = 0,   link_identity = 0,   link_growth = 0,   link_shrinkage = 0,   scaled_variance = TRUE )"},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalGSF-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Longitudinal Data from a GSF Model — SimLongitudinalGSF-class","text":"times (numeric) times generate observations . sigma (number) variance longitudinal values. mu_s (numeric) mean shrinkage rates. mu_g (numeric) mean growth rates. mu_b (numeric) mean baseline values. mu_phi (numeric) mean proportion cells affected treatment omega_b (number) baseline value standard deviation. omega_s (number) shrinkage rate standard deviation. omega_g (number) growth rate standard deviation. omega_phi (number) standard deviation proportion cells affected treatment omega_phi. link_dsld (number) link coefficient derivative contribution. link_ttg (number) link coefficient time--growth contribution. link_identity (number) link coefficient SLD Identity contribution. link_growth (number) link coefficient log-growth parameter contribution. link_shrinkage (number) link coefficient log-shrinkage parameter contribution. scaled_variance (logical) whether variance scaled expected value (see \"Statistical Specifications\" vignette details)","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalGSF-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Simulate Longitudinal Data from a GSF Model — SimLongitudinalGSF-class","text":"sigma (numeric) See arguments. mu_s (numeric) See arguments. mu_g (numeric) See arguments. mu_b (numeric) See arguments. mu_phi (numeric) See arguments. omega_b (numeric) See arguments. omega_s (numeric) See arguments. omega_g (numeric) See arguments. omega_phi (numeric) See arguments. link_dsld (numeric) See arguments. link_ttg (numeric) See arguments. link_identity (numeric) See arguments. link_growth (numeric) See arguments. link_shrinkage (numeric) See arguments. scaled_variance (numeric) See arguments.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalRandomSlope-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Longitudinal Data from a Random Slope Model — SimLongitudinalRandomSlope-class","title":"Simulate Longitudinal Data from a Random Slope Model — SimLongitudinalRandomSlope-class","text":"Simulate Longitudinal Data Random Slope Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalRandomSlope-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Longitudinal Data from a Random Slope Model — SimLongitudinalRandomSlope-class","text":"","code":"SimLongitudinalRandomSlope(   times = c(-100, -50, 0, 50, 100, 150, 250, 350, 450, 550),   intercept = 50,   slope_mu = c(0.01, 0.03),   slope_sigma = 0.5,   sigma = 2,   link_dsld = 0,   link_identity = 0 )"},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalRandomSlope-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Longitudinal Data from a Random Slope Model — SimLongitudinalRandomSlope-class","text":"times (numeric) times generate observations . intercept (number) mean baseline value study. slope_mu (numeric) population slope treatment arm. slope_sigma (number) random slope standard deviation. sigma (number) variance longitudinal values. link_dsld (number) link coefficient DSLD contribution. link_identity (number) link coefficient identity contribution.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalRandomSlope-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Simulate Longitudinal Data from a Random Slope Model — SimLongitudinalRandomSlope-class","text":"intercept (numeric) See arguments. slope_mu (numeric) See arguments. slope_sigma (numeric) See arguments. sigma (numeric) See arguments. link_dsld (numeric) See arguments. link_identity (numeric) See arguments.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalSteinFojo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Longitudinal Data from a Stein-Fojo Model — SimLongitudinalSteinFojo-class","title":"Simulate Longitudinal Data from a Stein-Fojo Model — SimLongitudinalSteinFojo-class","text":"Simulate Longitudinal Data Stein-Fojo Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalSteinFojo-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Longitudinal Data from a Stein-Fojo Model — SimLongitudinalSteinFojo-class","text":"","code":"SimLongitudinalSteinFojo(   times = c(-100, -50, 0, 50, 100, 150, 250, 350, 450, 550)/365,   sigma = 0.01,   mu_s = log(c(0.6, 0.4)),   mu_g = log(c(0.25, 0.35)),   mu_b = log(60),   omega_b = 0.2,   omega_s = 0.2,   omega_g = 0.2,   link_dsld = 0,   link_ttg = 0,   link_identity = 0,   link_growth = 0,   link_shrinkage = 0,   scaled_variance = TRUE )"},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalSteinFojo-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Longitudinal Data from a Stein-Fojo Model — SimLongitudinalSteinFojo-class","text":"times (numeric) times generate observations . sigma (number) variance longitudinal values. mu_s (numeric) mean shrinkage rates two treatment arms. mu_g (numeric) mean growth rates two treatment arms. mu_b (numeric) mean baseline values two treatment arms. omega_b (number) baseline value standard deviation. omega_s (number) shrinkage rate standard deviation. omega_g (number) growth rate standard deviation. link_dsld (number) link coefficient derivative contribution. link_ttg (number) link coefficient time--growth contribution. link_identity (number) link coefficient SLD Identity contribution. link_growth (number) link coefficient log-growth parameter contribution. link_shrinkage (number) link coefficient log-shrinkage parameter contribution. scaled_variance (logical) whether variance scaled expected value (see \"Statistical Specifications\" vignette details)","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimLongitudinalSteinFojo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Simulate Longitudinal Data from a Stein-Fojo Model — SimLongitudinalSteinFojo-class","text":"sigma (numeric) See arguments. mu_s (numeric) See arguments. mu_g (numeric) See arguments. mu_b (numeric) See arguments. omega_b (numeric) See arguments. omega_s (numeric) See arguments. omega_g (numeric) See arguments. link_dsld (numeric) See arguments. link_ttg (numeric) See arguments. link_identity (numeric) See arguments. link_growth (numeric) See arguments. link_shrinkage (numeric) See arguments. scaled_variance (logical) See arguments.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"SimSurvival Function Arguments — SimSurvival-Shared","title":"SimSurvival Function Arguments — SimSurvival-Shared","text":"documentation lists conventional arguments SimSurvival constructors.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SimSurvival Function Arguments — SimSurvival-Shared","text":"time_max (number) maximum time simulate . time_step (number) time interval evaluating log-hazard function. lambda_censor (number) censoring rate. beta_cont (number) continuous covariate coefficient. beta_cat (numeric) categorical covariate coefficients. loghazard (function) log hazard function. name (character) name object. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-Shared.html","id":"hazard-evaluation","dir":"Reference","previous_headings":"","what":"Hazard Evaluation","title":"SimSurvival Function Arguments — SimSurvival-Shared","text":"Event times simulated sampling cumulative hazard limit \\(U(0, 1)\\) distribution subject counting much hazard exposed evaluating log-hazard function set interval. time_max argument sets upper bound number time points evaluate log-hazard function subjects event censored time_max. time_step argument sets interval evaluate log-hazard function. Setting smaller values time_step increase precision simulation cost increased computation time. Likewise, setting large values time_max minimize number censored subjects cost increased computation time.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Simulation Class for Survival Data — SimSurvival-class","title":"Abstract Simulation Class for Survival Data — SimSurvival-class","text":"Abstract Simulation Class Survival Data","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Simulation Class for Survival Data — SimSurvival-class","text":"","code":"SimSurvival(   time_max = 2000,   time_step = 1,   lambda_censor = 1/3000,   beta_cont = 0.2,   beta_cat = c(A = 0, B = -0.4, C = 0.2),   loghazard,   name = \"SimSurvival\" )"},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Simulation Class for Survival Data — SimSurvival-class","text":"time_max (number) maximum time simulate . time_step (number) time interval evaluating log-hazard function. lambda_censor (number) censoring rate. beta_cont (number) continuous covariate coefficient. beta_cat (numeric) categorical covariate coefficients. loghazard (function) log hazard function. name (character) name object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Abstract Simulation Class for Survival Data — SimSurvival-class","text":"time_max (numeric) See arguments. time_step (numeric) See arguments. lambda_censor (numeric) See arguments. beta_cont (numeric) See arguments. beta_cat (numeric) See arguments. loghazard (function) See arguments. name (character) See arguments.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvival-class.html","id":"hazard-evaluation","dir":"Reference","previous_headings":"","what":"Hazard Evaluation","title":"Abstract Simulation Class for Survival Data — SimSurvival-class","text":"Event times simulated sampling cumulative hazard limit \\(U(0, 1)\\) distribution subject counting much hazard exposed evaluating log-hazard function set interval. time_max argument sets upper bound number time points evaluate log-hazard function subjects event censored time_max. time_step argument sets interval evaluate log-hazard function. Setting smaller values time_step increase precision simulation cost increased computation time. Likewise, setting large values time_max minimize number censored subjects cost increased computation time.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalExponential.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Survival Data from a Exponential Proportional Hazard Model — SimSurvivalExponential","title":"Simulate Survival Data from a Exponential Proportional Hazard Model — SimSurvivalExponential","text":"Simulate Survival Data Exponential Proportional Hazard Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalExponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Survival Data from a Exponential Proportional Hazard Model — SimSurvivalExponential","text":"","code":"SimSurvivalExponential(   lambda,   time_max = 2000,   time_step = 1,   lambda_censor = 1/3000,   beta_cont = 0.2,   beta_cat = c(A = 0, B = -0.4, C = 0.2) )"},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalExponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Survival Data from a Exponential Proportional Hazard Model — SimSurvivalExponential","text":"lambda (number) rate parameter. time_max (number) maximum time simulate . time_step (number) time interval evaluating log-hazard function. lambda_censor (number) censoring rate. beta_cont (number) continuous covariate coefficient. beta_cat (numeric) categorical covariate coefficients.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalExponential.html","id":"hazard-evaluation","dir":"Reference","previous_headings":"","what":"Hazard Evaluation","title":"Simulate Survival Data from a Exponential Proportional Hazard Model — SimSurvivalExponential","text":"Event times simulated sampling cumulative hazard limit \\(U(0, 1)\\) distribution subject counting much hazard exposed evaluating log-hazard function set interval. time_max argument sets upper bound number time points evaluate log-hazard function subjects event censored time_max. time_step argument sets interval evaluate log-hazard function. Setting smaller values time_step increase precision simulation cost increased computation time. Likewise, setting large values time_max minimize number censored subjects cost increased computation time.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Survival Data from a Gamma Proportional Hazard Model — SimSurvivalGamma","title":"Simulate Survival Data from a Gamma Proportional Hazard Model — SimSurvivalGamma","text":"Simulate Survival Data Gamma Proportional Hazard Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Survival Data from a Gamma Proportional Hazard Model — SimSurvivalGamma","text":"","code":"SimSurvivalGamma(   k,   theta,   time_max = 2000,   time_step = 1,   lambda_censor = 1/3000,   beta_cont = 0.2,   beta_cat = c(A = 0, B = -0.4, C = 0.2) )"},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Survival Data from a Gamma Proportional Hazard Model — SimSurvivalGamma","text":"k (number) shape parameter. theta (number) scale parameter. time_max (number) maximum time simulate . time_step (number) time interval evaluating log-hazard function. lambda_censor (number) censoring rate. beta_cont (number) continuous covariate coefficient. beta_cat (numeric) categorical covariate coefficients.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalGamma.html","id":"hazard-evaluation","dir":"Reference","previous_headings":"","what":"Hazard Evaluation","title":"Simulate Survival Data from a Gamma Proportional Hazard Model — SimSurvivalGamma","text":"Event times simulated sampling cumulative hazard limit \\(U(0, 1)\\) distribution subject counting much hazard exposed evaluating log-hazard function set interval. time_max argument sets upper bound number time points evaluate log-hazard function subjects event censored time_max. time_step argument sets interval evaluate log-hazard function. Setting smaller values time_step increase precision simulation cost increased computation time. Likewise, setting large values time_max minimize number censored subjects cost increased computation time.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalLogLogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Survival Data from a Log-Logistic Proportional Hazard Model — SimSurvivalLogLogistic","title":"Simulate Survival Data from a Log-Logistic Proportional Hazard Model — SimSurvivalLogLogistic","text":"Simulate Survival Data Log-Logistic Proportional Hazard Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalLogLogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Survival Data from a Log-Logistic Proportional Hazard Model — SimSurvivalLogLogistic","text":"","code":"SimSurvivalLogLogistic(   a,   b,   time_max = 2000,   time_step = 1,   lambda_censor = 1/3000,   beta_cont = 0.2,   beta_cat = c(A = 0, B = -0.4, C = 0.2) )"},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalLogLogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Survival Data from a Log-Logistic Proportional Hazard Model — SimSurvivalLogLogistic","text":"(number) scale parameter. b (number) shape parameter. time_max (number) maximum time simulate . time_step (number) time interval evaluating log-hazard function. lambda_censor (number) censoring rate. beta_cont (number) continuous covariate coefficient. beta_cat (numeric) categorical covariate coefficients.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalLogLogistic.html","id":"hazard-evaluation","dir":"Reference","previous_headings":"","what":"Hazard Evaluation","title":"Simulate Survival Data from a Log-Logistic Proportional Hazard Model — SimSurvivalLogLogistic","text":"Event times simulated sampling cumulative hazard limit \\(U(0, 1)\\) distribution subject counting much hazard exposed evaluating log-hazard function set interval. time_max argument sets upper bound number time points evaluate log-hazard function subjects event censored time_max. time_step argument sets interval evaluate log-hazard function. Setting smaller values time_step increase precision simulation cost increased computation time. Likewise, setting large values time_max minimize number censored subjects cost increased computation time.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalWeibullPH.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Survival Data from a Weibull Proportional Hazard Model — SimSurvivalWeibullPH","title":"Simulate Survival Data from a Weibull Proportional Hazard Model — SimSurvivalWeibullPH","text":"Simulate Survival Data Weibull Proportional Hazard Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalWeibullPH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Survival Data from a Weibull Proportional Hazard Model — SimSurvivalWeibullPH","text":"","code":"SimSurvivalWeibullPH(   lambda,   gamma,   time_max = 2000,   time_step = 1,   lambda_censor = 1/3000,   beta_cont = 0.2,   beta_cat = c(A = 0, B = -0.4, C = 0.2) )"},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalWeibullPH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Survival Data from a Weibull Proportional Hazard Model — SimSurvivalWeibullPH","text":"lambda (number) scale parameter. gamma (number) shape parameter. time_max (number) maximum time simulate . time_step (number) time interval evaluating log-hazard function. lambda_censor (number) censoring rate. beta_cont (number) continuous covariate coefficient. beta_cat (numeric) categorical covariate coefficients.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SimSurvivalWeibullPH.html","id":"hazard-evaluation","dir":"Reference","previous_headings":"","what":"Hazard Evaluation","title":"Simulate Survival Data from a Weibull Proportional Hazard Model — SimSurvivalWeibullPH","text":"Event times simulated sampling cumulative hazard limit \\(U(0, 1)\\) distribution subject counting much hazard exposed evaluating log-hazard function set interval. time_max argument sets upper bound number time points evaluate log-hazard function subjects event censored time_max. time_step argument sets interval evaluate log-hazard function. Setting smaller values time_step increase precision simulation cost increased computation time. Likewise, setting large values time_max minimize number censored subjects cost increased computation time.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/StanModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Model Object and Constructor Function — StanModel-class","title":"Stan Model Object and Constructor Function — StanModel-class","text":"Stan Model Object Constructor Function","code":""},{"path":"https://genentech.github.io/jmpost/reference/StanModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Model Object and Constructor Function — StanModel-class","text":"","code":"StanModel(stan, parameters, name = \"<Unnamed>\")"},{"path":"https://genentech.github.io/jmpost/reference/StanModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Model Object and Constructor Function — StanModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. name (character) display name model object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/StanModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Stan Model Object and Constructor Function — StanModel-class","text":"stan (StanModule) See Arguments. parameters (ParameterList) See Arguments. name (character) display name model object.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/StanModule-class.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModule Object and Constructor Function — StanModule-class","title":"StanModule Object and Constructor Function — StanModule-class","text":"StanModule Object Constructor Function","code":""},{"path":"https://genentech.github.io/jmpost/reference/StanModule-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModule Object and Constructor Function — StanModule-class","text":"","code":"StanModule(x = \"\", ...)"},{"path":"https://genentech.github.io/jmpost/reference/StanModule-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModule Object and Constructor Function — StanModule-class","text":"x (string) file path Stan program character vector Stan code parsed. ... additional arguments passed constructor.","code":""},{"path":"https://genentech.github.io/jmpost/reference/StanModule-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"StanModule Object and Constructor Function — StanModule-class","text":"functions (character) functions block. data (character) data block. transformed_data (character) transformed_data block. parameters (character) parameters block. transformed_parameters (character) transformed_parameters block. model (character) model block. generated_quantities (character) generated_quantities block.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/Surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Formula Specification — Surv","title":"Survival Formula Specification — Surv","text":"See survival::Surv() details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/Surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Formula Specification — Surv","text":"object class Surv.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalExponential-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalExponential — SurvivalExponential-class","title":"SurvivalExponential — SurvivalExponential-class","text":"class extends general SurvivalModel class using exponential survival model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalExponential-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalExponential — SurvivalExponential-class","text":"","code":"SurvivalExponential(lambda = prior_gamma(2, 5), beta = prior_normal(0, 2))"},{"path":"https://genentech.github.io/jmpost/reference/SurvivalExponential-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalExponential — SurvivalExponential-class","text":"lambda (Prior) exponential rate lambda. beta (Prior) covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalGamma-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalGamma — SurvivalGamma-class","title":"SurvivalGamma — SurvivalGamma-class","text":"class extends general SurvivalModel class using Gamma survival model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalGamma-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalGamma — SurvivalGamma-class","text":"","code":"SurvivalGamma(   k = prior_gamma(2, 0.5),   theta = prior_gamma(2, 0.5),   beta = prior_normal(0, 2) )"},{"path":"https://genentech.github.io/jmpost/reference/SurvivalGamma-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalGamma — SurvivalGamma-class","text":"k (Prior) shape k. theta (Prior) scale theta. beta (Prior) covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalLogLogistic-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalLogLogistic — SurvivalLogLogistic-class","title":"SurvivalLogLogistic — SurvivalLogLogistic-class","text":"class extends general SurvivalModel class using log-logistic survival model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalLogLogistic-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalLogLogistic — SurvivalLogLogistic-class","text":"","code":"SurvivalLogLogistic(   a = prior_lognormal(log(0.1), 5),   b = prior_gamma(2, 5),   beta = prior_normal(0, 2) )"},{"path":"https://genentech.github.io/jmpost/reference/SurvivalLogLogistic-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalLogLogistic — SurvivalLogLogistic-class","text":"(Prior) Prior distribution scale parameter . b (Prior) Prior distribution shape parameter b. beta (Prior) Prior distribution covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalModel — SurvivalModel-class","title":"SurvivalModel — SurvivalModel-class","text":"class extends general StanModel class comprise survival model specification.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalModel — SurvivalModel-class","text":"","code":"SurvivalModel(   stan = StanModule(),   parameters = ParameterList(),   name = \"<Unnamed>\",   ... )"},{"path":"https://genentech.github.io/jmpost/reference/SurvivalModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalModel — SurvivalModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. name (character) display name model object. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-Shared.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-used documentation for SurvivalQuantities — SurvivalQuantities-Shared","title":"Re-used documentation for SurvivalQuantities — SurvivalQuantities-Shared","text":"Re-used documentation SurvivalQuantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-Shared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-used documentation for SurvivalQuantities — SurvivalQuantities-Shared","text":"object (SurvivalQuantities)  survival quantities. x (SurvivalQuantities)  survival quantities. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalQuantities Object & Constructor Function — SurvivalQuantities-class","title":"SurvivalQuantities Object & Constructor Function — SurvivalQuantities-class","text":"Constructor function generate SurvivalQuantities object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalQuantities Object & Constructor Function — SurvivalQuantities-class","text":"","code":"SurvivalQuantities(object, grid, type = c(\"surv\", \"haz\", \"loghaz\", \"cumhaz\"))"},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalQuantities Object & Constructor Function — SurvivalQuantities-class","text":"object (JointModelSamples)  samples drawn Joint Model. grid (Grid)  object specifies subjects time points calculate quantities . See Grid-Functions. type (character) quantity generated. Must one surv, haz, loghaz, cumhaz.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"SurvivalQuantities Object & Constructor Function — SurvivalQuantities-class","text":"quantities (Quantities) sampled quantities. contain 1 element per element group groups (list) See argument section details type (character) See See argument section details time_grid (numeric) See argument section details data (DataJoint) data Joint Model fitted produce samples/quantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalQuantities-class.html","id":"group-specification","dir":"Reference","previous_headings":"","what":"Group Specification","title":"SurvivalQuantities Object & Constructor Function — SurvivalQuantities-class","text":"groups character vector subject IDs survival quantities calculated specific subjects. groups list elements 1 subject ID grouped together quantities calculated taking point-wise average. example: groups = list(\"g1\" = c(\"sub1\", \"sub2\"), \"g2\" = c(\"sub3\", \"sub4\")) result 2 groups created whose values pointwise average c(\"sub1\", \"sub2\") c(\"sub3\", \"sub4\") respectively. groups=NULL subjects original dataset selected","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/SurvivalWeibullPH-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalWeibullPH — SurvivalWeibullPH-class","title":"SurvivalWeibullPH — SurvivalWeibullPH-class","text":"class extends general SurvivalModel class using Weibull proportional hazards survival model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/SurvivalWeibullPH-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalWeibullPH — SurvivalWeibullPH-class","text":"","code":"SurvivalWeibullPH(   lambda = prior_gamma(2, 0.5),   gamma = prior_gamma(2, 0.5),   beta = prior_normal(0, 2) )"},{"path":"https://genentech.github.io/jmpost/reference/SurvivalWeibullPH-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalWeibullPH — SurvivalWeibullPH-class","text":"lambda (Prior) scale lambda. gamma (Prior) shape gamma. beta (Prior) covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/reference/add_missing_stan_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Missing Stan Blocks — add_missing_stan_blocks","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"Add Missing Stan Blocks","code":""},{"path":"https://genentech.github.io/jmpost/reference/add_missing_stan_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"","code":"add_missing_stan_blocks(x, stan_blocks = STAN_BLOCKS)"},{"path":"https://genentech.github.io/jmpost/reference/add_missing_stan_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"x (list) list Stan code blocks stan_blocks (list) reference list stan blocks.","code":""},{"path":"https://genentech.github.io/jmpost/reference/add_missing_stan_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"Amended list x blocks global variable STAN_BLOCKS contained.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.CmdStanMCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to CmdStanMCMC — as.CmdStanMCMC.JointModelSamples","title":"Coerce to CmdStanMCMC — as.CmdStanMCMC.JointModelSamples","text":"Coerces object cmdstanr::CmdStanMCMC object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.CmdStanMCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to CmdStanMCMC — as.CmdStanMCMC.JointModelSamples","text":"","code":"as.CmdStanMCMC.JointModelSamples(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.CmdStanMCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to CmdStanMCMC — as.CmdStanMCMC.JointModelSamples","text":"object converted ... additional options","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.JointModel.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModel -> StanModule — as.StanModule.JointModel","title":"JointModel -> StanModule — as.StanModule.JointModel","text":"Converts JointModel object StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.JointModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JointModel -> StanModule — as.StanModule.JointModel","text":"","code":"# S3 method for class 'JointModel' as.StanModule(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.JointModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JointModel -> StanModule — as.StanModule.JointModel","text":"object (JointModel)  Joint model specification. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.JointModelSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModelSamples -> StanModule — as.StanModule.JointModelSamples","title":"JointModelSamples -> StanModule — as.StanModule.JointModelSamples","text":"Converts JointModelSamples object StanModule object ensuring resulting StanModule object able generate post sampling quantities.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.JointModelSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JointModelSamples -> StanModule — as.StanModule.JointModelSamples","text":"","code":"# S3 method for class 'JointModelSamples' as.StanModule(object, generator, type, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.JointModelSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JointModelSamples -> StanModule — as.StanModule.JointModelSamples","text":"object object obtain generated quantities generator (QuantityGenerator) object specifies subjects time points calculate quantities type (character) type quantities generated, must either \"survival\" \"longitudinal\". ... additional options.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link -> StanModule — as.StanModule.Link","title":"Link -> StanModule — as.StanModule.Link","text":"Converts Link object StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link -> StanModule — as.StanModule.Link","text":"","code":"# S3 method for class 'Link' as.StanModule(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link -> StanModule — as.StanModule.Link","text":"object (Link) link object. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.LinkComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkComponent -> StanModule — as.StanModule.LinkComponent","title":"LinkComponent -> StanModule — as.StanModule.LinkComponent","text":"Converts LinkComponent object StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.LinkComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinkComponent -> StanModule — as.StanModule.LinkComponent","text":"","code":"# S3 method for class 'LinkComponent' as.StanModule(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.LinkComponent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinkComponent -> StanModule — as.StanModule.LinkComponent","text":"object (LinkComponent) link component. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter -> StanModule — as.StanModule.Parameter","title":"Parameter -> StanModule — as.StanModule.Parameter","text":"Converts Parameter object StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter -> StanModule — as.StanModule.Parameter","text":"","code":"# S3 method for class 'Parameter' as.StanModule(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter -> StanModule — as.StanModule.Parameter","text":"object (Parameter) prior Distribution ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.ParameterList.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList -> StanModule — as.StanModule.ParameterList","title":"ParameterList -> StanModule — as.StanModule.ParameterList","text":"Converts ParameterList object StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.ParameterList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterList -> StanModule — as.StanModule.ParameterList","text":"","code":"# S3 method for class 'ParameterList' as.StanModule(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.ParameterList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList -> StanModule — as.StanModule.ParameterList","text":"object (ParameterList)  List Parameter Objects. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior -> StanModule — as.StanModule.Prior","title":"Prior -> StanModule — as.StanModule.Prior","text":"Converts Prior object StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior -> StanModule — as.StanModule.Prior","text":"","code":"# S3 method for class 'Prior' as.StanModule(object, name, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.Prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior -> StanModule — as.StanModule.Prior","text":"object (Prior) prior Distribution name (character) name parameter prior distribution ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.html","id":null,"dir":"Reference","previous_headings":"","what":"as.StanModule — as.StanModule","title":"as.StanModule — as.StanModule","text":"Converts object StanModule.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.StanModule — as.StanModule","text":"","code":"as.StanModule(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.StanModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.StanModule — as.StanModule","text":"object convert. ... additional options.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.character.JointModel.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModel -> character — as.character.JointModel","title":"JointModel -> character — as.character.JointModel","text":"Renders JointModel object stan program","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.character.JointModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JointModel -> character — as.character.JointModel","text":"","code":"# S3 method for class 'JointModel' as.character(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.character.JointModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JointModel -> character — as.character.JointModel","text":"x (JointModel)  Joint model specification. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.character.Parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter -> Character — as.character.Parameter","title":"Parameter -> Character — as.character.Parameter","text":"Converts Parameter object character vector","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.character.Parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter -> Character — as.character.Parameter","text":"","code":"# S3 method for class 'Parameter' as.character(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.character.Parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter -> Character — as.character.Parameter","text":"x (Parameter) prior Distribution ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.character.Prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior -> Character — as.character.Prior","title":"Prior -> Character — as.character.Prior","text":"Converts Prior object character vector","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.character.Prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior -> Character — as.character.Prior","text":"","code":"# S3 method for class 'Prior' as.character(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.character.Prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior -> Character — as.character.Prior","text":"x (Prior) prior Distribution ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.character.StanModule.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModule -> character — as.character.StanModule","title":"StanModule -> character — as.character.StanModule","text":"Converts StanModule object valid Stan program file line returned character vector represents line program","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.character.StanModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModule -> character — as.character.StanModule","text":"","code":"# S3 method for class 'StanModule' as.character(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.character.StanModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModule -> character — as.character.StanModule","text":"x (StanModule) stan program ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataLongitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"DataLongitudinal -> data.frame — as.data.frame.DataLongitudinal","title":"DataLongitudinal -> data.frame — as.data.frame.DataLongitudinal","text":"Converts DataLongitudinal object data.frame. subject variable cast factor.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataLongitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataLongitudinal -> data.frame — as.data.frame.DataLongitudinal","text":"","code":"# S3 method for class 'DataLongitudinal' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataLongitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataLongitudinal -> data.frame — as.data.frame.DataLongitudinal","text":"x (DataLongitudinal)  Longitudinal Data. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataSubject.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSubject -> data.frame — as.data.frame.DataSubject","title":"DataSubject -> data.frame — as.data.frame.DataSubject","text":"Converts DataSubject object data.frame. subject variable cast factor.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataSubject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSubject -> data.frame — as.data.frame.DataSubject","text":"","code":"# S3 method for class 'DataSubject' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataSubject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSubject -> data.frame — as.data.frame.DataSubject","text":"x (DataSubject)  subject-level data. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSurvival -> data.frame — as.data.frame.DataSurvival","title":"DataSurvival -> data.frame — as.data.frame.DataSurvival","text":"Converts DataSurvival object data.frame. subject variable cast factor.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSurvival -> data.frame — as.data.frame.DataSurvival","text":"","code":"# S3 method for class 'DataSurvival' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.DataSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSurvival -> data.frame — as.data.frame.DataSurvival","text":"x (DataSurvival)  Survival Data. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.LongitudinalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"as.data.frame — as.data.frame.LongitudinalQuantities","title":"as.data.frame — as.data.frame.LongitudinalQuantities","text":".data.frame","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.LongitudinalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.data.frame — as.data.frame.LongitudinalQuantities","text":"","code":"# S3 method for class 'LongitudinalQuantities' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.LongitudinalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.data.frame — as.data.frame.LongitudinalQuantities","text":"x (LongitudinalQuantities)  longitudinal quantities. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.Quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantities -> data.frame — as.data.frame.Quantities","title":"Quantities -> data.frame — as.data.frame.Quantities","text":"Quantities -> data.frame","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.Quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantities -> data.frame — as.data.frame.Quantities","text":"","code":"# S3 method for class 'Quantities' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.Quantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantities -> data.frame — as.data.frame.Quantities","text":"x (Quantities)  generated quantities. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.RandomEffectQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"RandomEffectQuantities -> data.frame — as.data.frame.RandomEffectQuantities","title":"RandomEffectQuantities -> data.frame — as.data.frame.RandomEffectQuantities","text":"Returns data.frame subject-level random effect parameter samples.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.RandomEffectQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RandomEffectQuantities -> data.frame — as.data.frame.RandomEffectQuantities","text":"","code":"# S3 method for class 'RandomEffectQuantities' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.RandomEffectQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RandomEffectQuantities -> data.frame — as.data.frame.RandomEffectQuantities","text":"x (RandomEffectQuantities)  generated quantities. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.SurvivalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"as.data.frame — as.data.frame.SurvivalQuantities","title":"as.data.frame — as.data.frame.SurvivalQuantities","text":".data.frame","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.SurvivalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.data.frame — as.data.frame.SurvivalQuantities","text":"","code":"# S3 method for class 'SurvivalQuantities' as.data.frame(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.data.frame.SurvivalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.data.frame — as.data.frame.SurvivalQuantities","text":"x (SurvivalQuantities)  longitudinal quantities. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.list.Link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link -> list — as.list.Link","title":"Link -> list — as.list.Link","text":"Returns named list element list corresponds Stan modelling block e.g. data, model, etc.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.list.Link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link -> list — as.list.Link","text":"","code":"# S3 method for class 'Link' as.list(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.list.Link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link -> list — as.list.Link","text":"x (Link) link object. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.list.LinkComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkComponent -> list — as.list.LinkComponent","title":"LinkComponent -> list — as.list.LinkComponent","text":"Returns named list element list corresponds Stan modelling block e.g. data, model, etc.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.list.LinkComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinkComponent -> list — as.list.LinkComponent","text":"","code":"# S3 method for class 'LinkComponent' as.list(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.list.LinkComponent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinkComponent -> list — as.list.LinkComponent","text":"x (LinkComponent) link component. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.list.ParameterList.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList -> list — as.list.ParameterList","title":"ParameterList -> list — as.list.ParameterList","text":"Returns named list element list corresponds Stan modelling block e.g. data, model, etc.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.list.ParameterList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterList -> list — as.list.ParameterList","text":"","code":"# S3 method for class 'ParameterList' as.list(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.list.ParameterList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList -> list — as.list.ParameterList","text":"x (ParameterList)  List Parameter Objects. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.list.StanModel.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModel -> list — as.list.StanModel","title":"StanModel -> list — as.list.StanModel","text":"Returns named list element list corresponds Stan modelling block e.g. data, model, etc.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.list.StanModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModel -> list — as.list.StanModel","text":"","code":"# S3 method for class 'StanModel' as.list(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.list.StanModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModel -> list — as.list.StanModel","text":"x (StanModel) Stan Model ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as.list.StanModule.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModule -> list — as.list.StanModule","title":"StanModule -> list — as.list.StanModule","text":"Returns named list element list corresponds Stan modelling block e.g. data, model, etc.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as.list.StanModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModule -> list — as.list.StanModule","text":"","code":"# S3 method for class 'StanModule' as.list(x, stan_blocks = STAN_BLOCKS, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as.list.StanModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModule -> list — as.list.StanModule","text":"x (StanModule) Stan Module stan_blocks (list) reference list stan blocks. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"As Formula — as_formula","title":"As Formula — as_formula","text":"Utility wrapper function convert object formula.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As Formula — as_formula","text":"","code":"as_formula(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As Formula — as_formula","text":"x ()  object convert formula. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataLongitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"DataLongitudinal -> Printable Character — as_print_string.DataLongitudinal","title":"DataLongitudinal -> Printable Character — as_print_string.DataLongitudinal","text":"Converts DataLongitudinal object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataLongitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataLongitudinal -> Printable Character — as_print_string.DataLongitudinal","text":"","code":"# S3 method for class 'DataLongitudinal' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataLongitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataLongitudinal -> Printable Character — as_print_string.DataLongitudinal","text":"object (DataLongitudinal)  Longitudinal Data. indent (numeric) much white space prefix print string . ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataSubject.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSubject -> Printable Character — as_print_string.DataSubject","title":"DataSubject -> Printable Character — as_print_string.DataSubject","text":"Converts DataSubject object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataSubject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSubject -> Printable Character — as_print_string.DataSubject","text":"","code":"# S3 method for class 'DataSubject' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataSubject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSubject -> Printable Character — as_print_string.DataSubject","text":"object (DataSubject)  subject-level data. indent (numeric) much white space prefix print string . ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSurvival -> Printable Character — as_print_string.DataSurvival","title":"DataSurvival -> Printable Character — as_print_string.DataSurvival","text":"Converts DataSurvival object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSurvival -> Printable Character — as_print_string.DataSurvival","text":"","code":"# S3 method for class 'DataSurvival' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.DataSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSurvival -> Printable Character — as_print_string.DataSurvival","text":"object (DataSurvival)  Survival Data. indent (numeric) much white space prefix print string . ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.JointModelSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModelSamples -> Printable Character — as_print_string.JointModelSamples","title":"JointModelSamples -> Printable Character — as_print_string.JointModelSamples","text":"Converts JointModelSamples object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.JointModelSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JointModelSamples -> Printable Character — as_print_string.JointModelSamples","text":"","code":"# S3 method for class 'JointModelSamples' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.JointModelSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JointModelSamples -> Printable Character — as_print_string.JointModelSamples","text":"object (JointModelSamples) samples drawn JointModel. indent (numeric) much white space prefix print string .","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.ParameterList.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList -> Printable Character — as_print_string.ParameterList","title":"ParameterList -> Printable Character — as_print_string.ParameterList","text":"Converts ParameterList object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.ParameterList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterList -> Printable Character — as_print_string.ParameterList","text":"","code":"# S3 method for class 'ParameterList' as_print_string(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.ParameterList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList -> Printable Character — as_print_string.ParameterList","text":"object (ParameterList)  List Parameter Objects. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.Quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantities -> Printable Character — as_print_string.Quantities","title":"Quantities -> Printable Character — as_print_string.Quantities","text":"Converts Quantities object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.Quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantities -> Printable Character — as_print_string.Quantities","text":"","code":"# S3 method for class 'Quantities' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.Quantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantities -> Printable Character — as_print_string.Quantities","text":"object (Quantities)  generated quantities. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.RandomEffectQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"RandomEffectQuantities -> Printable Character — as_print_string.RandomEffectQuantities","title":"RandomEffectQuantities -> Printable Character — as_print_string.RandomEffectQuantities","text":"Converts RandomEffectQuantities object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.RandomEffectQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RandomEffectQuantities -> Printable Character — as_print_string.RandomEffectQuantities","text":"","code":"# S3 method for class 'RandomEffectQuantities' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.RandomEffectQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RandomEffectQuantities -> Printable Character — as_print_string.RandomEffectQuantities","text":"object (RandomEffectQuantities)  generated quantities. indent (numeric)  number spaces indent string . ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.StanModule.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModule -> Printable Character — as_print_string.StanModule","title":"StanModule -> Printable Character — as_print_string.StanModule","text":"Converts StanModule object printable string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.StanModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModule -> Printable Character — as_print_string.StanModule","text":"","code":"# S3 method for class 'StanModule' as_print_string(object, indent = 1, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.StanModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModule -> Printable Character — as_print_string.StanModule","text":"object (StanModule) stan program indent (numeric) much white space prefix print string .","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.html","id":null,"dir":"Reference","previous_headings":"","what":"as_print_string — as_print_string","title":"as_print_string — as_print_string","text":"Returns character representation object suitable printing console","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_print_string — as_print_string","text":"","code":"as_print_string(object, ...)  # S3 method for class 'SimLongitudinal' as_print_string(object)  # S3 method for class 'SimLongitudinalClaretBruno' as_print_string(object)  # S3 method for class 'SimLongitudinalGSF' as_print_string(object)  # S3 method for class 'SimLongitudinalRandomSlope' as_print_string(object)  # S3 method for class 'SimLongitudinalSteinFojo' as_print_string(object)  # S3 method for class 'SimSurvival' as_print_string(object)"},{"path":"https://genentech.github.io/jmpost/reference/as_print_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_print_string — as_print_string","text":"object converted string. ... additional options.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"Merging Code Blocks Stan Code Character Vector","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"","code":"as_stan_file(   functions = \"\",   data = \"\",   transformed_data = \"\",   parameters = \"\",   transformed_parameters = \"\",   model = \"\",   generated_quantities = \"\",   stan_blocks = STAN_BLOCKS )"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"functions (character) code block. data (character) code block. transformed_data (character) code block. parameters (character) code block. transformed_parameters (character) code block. model (character) code block. generated_quantities (character) code block. stan_blocks (list) reference list stan blocks.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"Character vector complete Stan code.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"Conversion Character Vector Stan Code Block List","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"","code":"as_stan_fragments(x, stan_blocks = STAN_BLOCKS)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"x (character) single Stan code vector. stan_blocks (list) reference list stan blocks.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"list Stan code blocks.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_fragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"Function works code format   say support code inline format .e.","code":"data {     <code> } model {     <code> } data { <code> } model { <code> }"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.DataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Object -> list — as_stan_list.DataSubject","title":"Data Object -> list — as_stan_list.DataSubject","text":"Coerces data object list data components required fitting JointModel. See \"Extending jmpost\" vignette details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.DataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Object -> list — as_stan_list.DataSubject","text":"","code":"# S3 method for class 'DataSubject' as_stan_list(object, ...)  # S3 method for class 'DataSubject' as.list(x, ...)  # S3 method for class 'DataLongitudinal' as_stan_list(object, subject_var, ...)  # S3 method for class 'DataLongitudinal' as.list(x, ...)  # S3 method for class 'DataSurvival' as_stan_list(object, ...)  # S3 method for class 'DataSurvival' as.list(x, ...)  # S3 method for class 'DataJoint' as_stan_list(object, ...)  # S3 method for class 'DataJoint' as.list(x, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.DataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Object -> list — as_stan_list.DataSubject","text":"object (DataSubject DataLongitudinal DataSurvival)  data object convert list. ... used. x (DataSubject DataLongitudinal DataSurvival)  data object convert list. subject_var (character)  name variable containing subject identifier.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.Parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter -> list — as_stan_list.Parameter","title":"Parameter -> list — as_stan_list.Parameter","text":"Converts Parameter object list parameter data values Stan model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.Parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter -> list — as_stan_list.Parameter","text":"","code":"# S3 method for class 'Parameter' as_stan_list(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.Parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter -> list — as_stan_list.Parameter","text":"object (Parameter) prior Distribution ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.ParameterList.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList -> list — as_stan_list.ParameterList","title":"ParameterList -> list — as_stan_list.ParameterList","text":"Converts ParameterList object list parameter data values Stan model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.ParameterList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterList -> list — as_stan_list.ParameterList","text":"","code":"# S3 method for class 'ParameterList' as_stan_list(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.ParameterList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList -> list — as_stan_list.ParameterList","text":"object (ParameterList)  List Parameter Objects. ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.Prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior -> list — as_stan_list.Prior","title":"Prior -> list — as_stan_list.Prior","text":"Converts Prior object list parameter data values Stan model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.Prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior -> list — as_stan_list.Prior","text":"","code":"# S3 method for class 'Prior' as_stan_list(object, name, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.Prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior -> list — as_stan_list.Prior","text":"object (Prior) prior Distribution name (character) name parameter prior distribution ... Used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.QuantityGenerator.html","id":null,"dir":"Reference","previous_headings":"","what":"QuantityGenerator -> list — as_stan_list.QuantityGenerator","title":"QuantityGenerator -> list — as_stan_list.QuantityGenerator","text":"Converts QuantityGenerator object list containing required input data stan model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.QuantityGenerator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QuantityGenerator -> list — as_stan_list.QuantityGenerator","text":"","code":"# S3 method for class 'QuantityGenerator' as_stan_list(object, data, ...)  # S3 method for class 'QuantityGeneratorPopulation' as_stan_list(object, data, ...)  # S3 method for class 'QuantityGeneratorPrediction' as_stan_list(object, data, model, ...)  # S3 method for class 'QuantityGeneratorSubject' as_stan_list(object, data, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.QuantityGenerator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QuantityGenerator -> list — as_stan_list.QuantityGenerator","text":"object (QuantityGenerator) object convert list. data (DataJoint) Survival Longitudinal Data. ... currently used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.html","id":null,"dir":"Reference","previous_headings":"","what":"as_stan_list — as_stan_list","title":"as_stan_list — as_stan_list","text":"Extracts list data elements object used input Stan Model","code":""},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_stan_list — as_stan_list","text":"","code":"as_stan_list(object, ...)  # Default S3 method as_stan_list(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/as_stan_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_stan_list — as_stan_list","text":"object converted. ... additional options.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/autoplot.LongitudinalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic Plotting for LongitudinalQuantities — autoplot.LongitudinalQuantities","title":"Automatic Plotting for LongitudinalQuantities — autoplot.LongitudinalQuantities","text":"Automatic Plotting LongitudinalQuantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/autoplot.LongitudinalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic Plotting for LongitudinalQuantities — autoplot.LongitudinalQuantities","text":"","code":"# S3 method for class 'LongitudinalQuantities' autoplot(object, conf.level = 0.95, ...)"},{"path":"https://genentech.github.io/jmpost/reference/autoplot.LongitudinalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic Plotting for LongitudinalQuantities — autoplot.LongitudinalQuantities","text":"object (LongitudinalQuantities)  longitudinal quantities. conf.level (numeric)  confidence level interval. values FALSE, NULL 0 provided confidence regions added plot. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/autoplot.SurvivalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic Plotting for `SurvivalQuantities“ — autoplot.SurvivalQuantities","title":"Automatic Plotting for `SurvivalQuantities“ — autoplot.SurvivalQuantities","text":"Automatic Plotting `SurvivalQuantities“","code":""},{"path":"https://genentech.github.io/jmpost/reference/autoplot.SurvivalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic Plotting for `SurvivalQuantities“ — autoplot.SurvivalQuantities","text":"","code":"# S3 method for class 'SurvivalQuantities' autoplot(object, conf.level = 0.95, add_km = FALSE, add_wrap = TRUE, ...)"},{"path":"https://genentech.github.io/jmpost/reference/autoplot.SurvivalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic Plotting for `SurvivalQuantities“ — autoplot.SurvivalQuantities","text":"object (SurvivalQuantities)  survival quantities. conf.level (numeric)  confidence level interval. values FALSE, NULL 0 provided confidence regions added plot add_km (logical)  TRUE Kaplan-Meier curves added plot group/subject. add_wrap (logical)  TRUE apply ggplot2::facet_wrap() plot group/subject. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete ggplot appropriate to a particular data type — autoplot","title":"Create a complete ggplot appropriate to a particular data type — autoplot","text":"See ggplot2::autoplot() details.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/brierScore.SurvivalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"brierScore — brierScore.SurvivalQuantities","title":"brierScore — brierScore.SurvivalQuantities","text":"Derives Brier Scores (using Inverse Probability Censoring Weighting) Survival estimates detailed blanche2015jmpost.","code":""},{"path":"https://genentech.github.io/jmpost/reference/brierScore.SurvivalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brierScore — brierScore.SurvivalQuantities","text":"","code":"# S3 method for class 'SurvivalQuantities' brierScore(object, maintain_cen_order = TRUE, event_offset = TRUE, ...)"},{"path":"https://genentech.github.io/jmpost/reference/brierScore.SurvivalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brierScore — brierScore.SurvivalQuantities","text":"object (SurvivalQuantities)  survival quantities. maintain_cen_order (logical) TRUE , case ties, censor times always considered occurred event times calculating \"reverse Kaplan-Meier\" IPCW estimates. Setting TRUE mirrors implementation {prodlim} package. event_offset (logical) TRUE \\(G(T_i)\\) evaluated \\(G(T_i-)\\). Setting TRUE mirrors implementation {pec} package. ... used.","code":""},{"path":[]},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/brierScore.html","id":null,"dir":"Reference","previous_headings":"","what":"brierScore — brierScore","title":"brierScore — brierScore","text":"Returns Brier Score given model","code":""},{"path":"https://genentech.github.io/jmpost/reference/brierScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brierScore — brierScore","text":"","code":"brierScore(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/brierScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"brierScore — brierScore","text":"object calculate Brier Score . ... additional options.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/brier_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Brier Score — brier_score","title":"Brier Score — brier_score","text":"Implements Brier Score detailed blanche2015jmpost","code":""},{"path":"https://genentech.github.io/jmpost/reference/brier_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brier Score — brier_score","text":"","code":"brier_score(   t,   times,   events,   pred_mat,   maintain_cen_order = TRUE,   event_offset = TRUE )  bs_get_squared_dist(t, times, events, pred_mat)  bs_get_weights(   t,   times,   events,   event_offset = TRUE,   maintain_cen_order = TRUE )"},{"path":"https://genentech.github.io/jmpost/reference/brier_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brier Score — brier_score","text":"t (numeric) timepoints calculate desired quantity . times (numeric) observed times. events (numeric) event indicator times. Either 1 event 0 censor. maintain_cen_order (logical) TRUE , case ties, censor times always considered occurred event times calculating \"reverse Kaplan-Meier\" IPCW estimates. Setting TRUE mirrors implementation {prodlim} package. event_offset (logical) TRUE \\(G(T_i)\\) evaluated \\(G(T_i-)\\). Setting TRUE mirrors implementation {pec} package.","code":""},{"path":"https://genentech.github.io/jmpost/reference/brier_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Brier Score — brier_score","text":"bs_get_squared_dist() - implements squared distance part formula. bs_get_weights() - implements IPCW weighting","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/clbr_sld.html","id":null,"dir":"Reference","previous_headings":"","what":"Claret-Bruno Functionals — clbr_sld","title":"Claret-Bruno Functionals — clbr_sld","text":"Claret-Bruno Functionals","code":""},{"path":"https://genentech.github.io/jmpost/reference/clbr_sld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Claret-Bruno Functionals — clbr_sld","text":"","code":"clbr_sld(t, b, g, c, p)  clbr_ttg(t, b, g, c, p)  clbr_dsld(t, b, g, c, p)"},{"path":"https://genentech.github.io/jmpost/reference/clbr_sld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Claret-Bruno Functionals — clbr_sld","text":"t (numeric) time grid. b (number) baseline sld. g (number) growth rate. c (number) resistance rate. p (number) growth inhibition.","code":""},{"path":"https://genentech.github.io/jmpost/reference/clbr_sld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Claret-Bruno Functionals — clbr_sld","text":"function results.","code":""},{"path":"https://genentech.github.io/jmpost/reference/coalesceGridTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Coalesce Time — coalesceGridTime","title":"Coalesce Time — coalesceGridTime","text":"Coalesce Time","code":""},{"path":"https://genentech.github.io/jmpost/reference/coalesceGridTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coalesce Time — coalesceGridTime","text":"","code":"coalesceGridTime(object, times, ...)  # S3 method for class 'GridFixed' coalesceGridTime(object, times, ...)  # S3 method for class 'GridGrouped' coalesceGridTime(object, times, ...)  # S3 method for class 'GridPopulation' coalesceGridTime(object, times, ...)  # S3 method for class 'GridPrediction' coalesceGridTime(object, times, ...)"},{"path":"https://genentech.github.io/jmpost/reference/coalesceGridTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coalesce Time — coalesceGridTime","text":"object (Grid)  object coalesce time . times (numeric)  times coalesce . ... used Method used replace NULL times grid objects (appropriate)","code":""},{"path":"https://genentech.github.io/jmpost/reference/collapse_quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Grouped Quantities — collapse_quantities","title":"Create Grouped Quantities — collapse_quantities","text":"function takes matrix quantity samples aggregates calculating pointwise average.","code":""},{"path":"https://genentech.github.io/jmpost/reference/collapse_quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Grouped Quantities — collapse_quantities","text":"","code":"collapse_quantities(quantities_raw, collapser)"},{"path":"https://genentech.github.io/jmpost/reference/collapse_quantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Grouped Quantities — collapse_quantities","text":"quantities_raw (matrix) samples 1 row per sample 1 column per distinct quantity. collapser (QuantityCollapser) specifies columns combine together.","code":""},{"path":"https://genentech.github.io/jmpost/reference/collapse_quantities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Grouped Quantities — collapse_quantities","text":"function essentially implements group wise average collapsing multiple columns together based specification provided QuantityCollapser object. Grid-Dev page provides example function implements","code":""},{"path":"https://genentech.github.io/jmpost/reference/compileStanModel.html","id":null,"dir":"Reference","previous_headings":"","what":"compileStanModel — compileStanModel","title":"compileStanModel — compileStanModel","text":"Compile Stan module.","code":""},{"path":"https://genentech.github.io/jmpost/reference/compileStanModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compileStanModel — compileStanModel","text":"","code":"compileStanModel(object)  # S3 method for class 'StanModule' compileStanModel(object)  # S3 method for class 'JointModel' compileStanModel(object)"},{"path":"https://genentech.github.io/jmpost/reference/compileStanModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compileStanModel — compileStanModel","text":"object module.","code":""},{"path":"https://genentech.github.io/jmpost/reference/decompose_subjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose subjects into Relevant Components — decompose_subjects","title":"Decompose subjects into Relevant Components — decompose_subjects","text":"function takes character vector list subjects decomposes structured format.","code":""},{"path":"https://genentech.github.io/jmpost/reference/decompose_subjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose subjects into Relevant Components — decompose_subjects","text":"","code":"decompose_subjects(subjects, all_subjects)"},{"path":"https://genentech.github.io/jmpost/reference/decompose_subjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose subjects into Relevant Components — decompose_subjects","text":"subjects (character list) subject identifiers. NULL set all_subjects. all_subjects (character) set allowable subject identifiers. cause error value subjects vector.","code":""},{"path":"https://genentech.github.io/jmpost/reference/decompose_subjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose subjects into Relevant Components — decompose_subjects","text":"list containing three components: groups: (list) element list character vector specifying subjects belong given \"group\" \"group\" element name unique_values: (character) vector unique subjects within subjects indexes: (list) element named numeric index vector maps values grouped unique_values","code":""},{"path":"https://genentech.github.io/jmpost/reference/decompose_subjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decompose subjects into Relevant Components — decompose_subjects","text":"primary use function correctly setup indexing variables predicting survival quantities (see SurvivalQuantities())","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/decompose_subjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose subjects into Relevant Components — decompose_subjects","text":"","code":"if (FALSE) { # \\dontrun{ result <- decompose_subjects(c(\"A\", \"B\"), c(\"A\", \"B\", \"C\", \"D\")) result <- decompose_subjects(     list(\"g1\" = c(\"A\", \"B\"), \"g2\" = c(\"B\", \"C\")),     c(\"A\", \"B\", \"C\", \"D\") ) } # }"},{"path":"https://genentech.github.io/jmpost/reference/decorated_render.html","id":null,"dir":"Reference","previous_headings":"","what":"decorated_render — decorated_render","title":"decorated_render — decorated_render","text":"Simple wrapper around jinjar::render() provides additional default variables system (avoids call jinjar specify )","code":""},{"path":"https://genentech.github.io/jmpost/reference/decorated_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"decorated_render — decorated_render","text":"","code":"decorated_render(...)"},{"path":"https://genentech.github.io/jmpost/reference/decorated_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"decorated_render — decorated_render","text":"... Arguments passed onto jinjar::render()","code":""},{"path":"https://genentech.github.io/jmpost/reference/decorated_render.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"decorated_render — decorated_render","text":"See jinjar::render()","code":""},{"path":"https://genentech.github.io/jmpost/reference/enableGQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable Generated Quantities Generic — enableGQ","title":"Enable Generated Quantities Generic — enableGQ","text":"Enable Generated Quantities Generic","code":""},{"path":"https://genentech.github.io/jmpost/reference/enableGQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable Generated Quantities Generic — enableGQ","text":"","code":"enableGQ(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/enableGQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable Generated Quantities Generic — enableGQ","text":"object (StanModel) enable generated quantities . ... used. Optional hook method called StanModel attempting use either LongitudinalQuantities SurvivalQuantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/enableGQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable Generated Quantities Generic — enableGQ","text":"StanModule object","code":""},{"path":"https://genentech.github.io/jmpost/reference/enableLink.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable Link Generic — enableLink","title":"Enable Link Generic — enableLink","text":"Enable Link Generic","code":""},{"path":"https://genentech.github.io/jmpost/reference/enableLink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable Link Generic — enableLink","text":"","code":"enableLink(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/enableLink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable Link Generic — enableLink","text":"object (LongitudinalModel) enable link . ... used. Optional hook method called LongitudinalModel link method provided JointModel. can used allow model include optional stan code required links present.","code":""},{"path":"https://genentech.github.io/jmpost/reference/enableLink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable Link Generic — enableLink","text":"LongitudinalModel object","code":""},{"path":"https://genentech.github.io/jmpost/reference/ensure_initial_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure that initial values are correctly specified — ensure_initial_values","title":"Ensure that initial values are correctly specified — ensure_initial_values","text":"Ensure initial values correctly specified","code":""},{"path":"https://genentech.github.io/jmpost/reference/ensure_initial_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure that initial values are correctly specified — ensure_initial_values","text":"","code":"ensure_initial_values(initial_values, data, parameters)"},{"path":"https://genentech.github.io/jmpost/reference/ensure_initial_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure that initial values are correctly specified — ensure_initial_values","text":"initial_values (list) list lists containing initial values must 1 list per desired chain. elements identical names data (list) specifies size expand initial values . elements size 1 initial_values expanded size corresponding element data broadcasting value. parameters (ParameterList) parameters object","code":""},{"path":"https://genentech.github.io/jmpost/reference/ensure_initial_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensure that initial values are correctly specified — ensure_initial_values","text":"function mostly thin wrapper around expand_initial_values enable easier unit testing.","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_initial_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicate Single Values in a List — expand_initial_values","title":"Replicate Single Values in a List — expand_initial_values","text":"Replicate Single Values List","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_initial_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicate Single Values in a List — expand_initial_values","text":"","code":"expand_initial_values(initial_values, sizes)"},{"path":"https://genentech.github.io/jmpost/reference/expand_initial_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicate Single Values in a List — expand_initial_values","text":"initial_values (list) initial values names. sizes (list) size corresponds element initial_values, matched names. attribute array must attached element, see replace_with_lookup().","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_initial_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicate Single Values in a List — expand_initial_values","text":"named list values, single values initial_values list replicated according corresponding values sizes list. Even size 1, value passed array corresponding attribute TRUE sizes.","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_initial_values.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Replicate Single Values in a List — expand_initial_values","text":"resulting list names original lists.","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_subjects.html","id":null,"dir":"Reference","previous_headings":"","what":"expand_subjects — expand_subjects","title":"expand_subjects — expand_subjects","text":"function checks expands given subjects vector. input vector must unique contain values specified all_subjects","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_subjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expand_subjects — expand_subjects","text":"","code":"expand_subjects(subjects, all_subjects)"},{"path":"https://genentech.github.io/jmpost/reference/expand_subjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expand_subjects — expand_subjects","text":"subjects (character NULL) Character vector representing subjects. NULL, set value all_subjects. all_subjects (character) Character vector representing possible subjects.","code":""},{"path":"https://genentech.github.io/jmpost/reference/expand_subjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expand_subjects — expand_subjects","text":"Returns expanded subjects vector.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataLongitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataLongitudinal","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataLongitudinal","text":"Extract list maps variable names user-defined data.frame standardised values.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataLongitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataLongitudinal","text":"","code":"# S3 method for class 'DataLongitudinal' extractVariableNames(object)"},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataLongitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataLongitudinal","text":"object (DataLongitudinal)  Longitudinal Data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataLongitudinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataLongitudinal","text":"list following named elements: subject (character) name variable containing subject identifier frm (formula) form outcome ~ time time (character) name variable containing outcome time outcome (character) name variable containing outcome values threshold (numeric) cut-value used declare observation censored (detection limit).","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSubject.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSubject","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSubject","text":"Extract list maps variable names user-defined data.frame standardised values.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSubject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSubject","text":"","code":"# S3 method for class 'DataSubject' extractVariableNames(object)"},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSubject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSubject","text":"object (DataSubject)  subject-level data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSubject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSubject","text":"list following named elements: subject (character) name variable containing subject identifier. arm (character) name variable containing arm identifier. study (character)  name variable containing study identifier.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSurvival","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSurvival","text":"Extract list maps variable names user-defined data.frame standardised values.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSurvival","text":"","code":"# S3 method for class 'DataSurvival' extractVariableNames(object)"},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSurvival","text":"object (DataSurvival)  Survival Data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.DataSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Mapping to Standardised Variable Names — extractVariableNames.DataSurvival","text":"list following named elements: frm (formula) symbolic description survival model fitted time (character)  name variable containing event time event (character)   name variable containing event status","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Mapping to Standardised Variable Names — extractVariableNames","title":"Extract Mapping to Standardised Variable Names — extractVariableNames","text":"Extract list maps variable names user-defined data.frame standardised values.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Mapping to Standardised Variable Names — extractVariableNames","text":"","code":"extractVariableNames(object)"},{"path":"https://genentech.github.io/jmpost/reference/extractVariableNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Mapping to Standardised Variable Names — extractVariableNames","text":"object data object.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/extract_observed_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Observed Longitudinal Values — extract_observed_values","title":"Extract Observed Longitudinal Values — extract_observed_values","text":"Utility function extract observed longitudinal values DataJoint object","code":""},{"path":"https://genentech.github.io/jmpost/reference/extract_observed_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Observed Longitudinal Values — extract_observed_values","text":"","code":"extract_observed_values(object)"},{"path":"https://genentech.github.io/jmpost/reference/extract_observed_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Observed Longitudinal Values — extract_observed_values","text":"object (DataJoint) data used fit JointModel.","code":""},{"path":"https://genentech.github.io/jmpost/reference/extract_observed_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Observed Longitudinal Values — extract_observed_values","text":"data.frame following columns subject (character) subject identifier time (numeric) time observation occurred Yob (numeric) observed value","code":""},{"path":"https://genentech.github.io/jmpost/reference/extract_quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Survival Quantities — extract_quantities","title":"Extract Survival Quantities — extract_quantities","text":"Utility function extract generated quantities cmdstanr::CmdStanGQ object. Multiple quantities generated default convenience function extract desired ones return user friendly posterior::draws_matrix object","code":""},{"path":"https://genentech.github.io/jmpost/reference/extract_quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Survival Quantities — extract_quantities","text":"","code":"extract_quantities(   gq,   type = c(\"surv\", \"haz\", \"loghaz\", \"cumhaz\", \"lm_identity\") )"},{"path":"https://genentech.github.io/jmpost/reference/extract_quantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Survival Quantities — extract_quantities","text":"gq (CmdStanGQ)  cmdstanr::CmdStanGQ object created generateQuantities(). type (character) quantity generated. Must one surv, haz, loghaz, cumhaz, lm_identity.","code":""},{"path":"https://genentech.github.io/jmpost/reference/generateQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"generateQuantities — generateQuantities","title":"generateQuantities — generateQuantities","text":"Obtain generated quantities Stan Model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/generateQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateQuantities — generateQuantities","text":"","code":"generateQuantities(object, ...)  # S3 method for class 'JointModelSamples' generateQuantities(object, generator, type, ...)"},{"path":"https://genentech.github.io/jmpost/reference/generateQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generateQuantities — generateQuantities","text":"object object obtain generated quantities ... additional options. generator (QuantityGenerator) object specifies subjects time points calculate quantities type (character) type quantities generated, must either \"survival\" \"longitudinal\".","code":""},{"path":"https://genentech.github.io/jmpost/reference/getParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"getParameters — getParameters","title":"getParameters — getParameters","text":"Extract modelling parameters ParameterList object model.","code":""},{"path":"https://genentech.github.io/jmpost/reference/getParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getParameters — getParameters","text":"","code":"getParameters(object, ...)  # S3 method for class 'StanModel' getParameters(object, ...)  # S3 method for class 'LinkComponent' getParameters(object, ...)  # S3 method for class 'Link' getParameters(object, ...)  # Default S3 method getParameters(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/getParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getParameters — getParameters","text":"object obtain parameters . ... additional options.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/getPredictionNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Prediction Names — getPredictionNames","title":"Get Prediction Names — getPredictionNames","text":"Utility function returns names required parameters predicting survival quantities GridPrediction.","code":""},{"path":"https://genentech.github.io/jmpost/reference/getPredictionNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Prediction Names — getPredictionNames","text":"","code":"getPredictionNames(object, ...)  # Default S3 method getPredictionNames(object, ...)  # S3 method for class 'LongitudinalClaretBruno' getPredictionNames(object, ...)  # S3 method for class 'LongitudinalGSF' getPredictionNames(object, ...)  # S3 method for class 'LongitudinalRandomSlope' getPredictionNames(object, ...)  # S3 method for class 'LongitudinalSteinFojo' getPredictionNames(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/getPredictionNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Prediction Names — getPredictionNames","text":"object (LongitudinalModel)  longitudinal model object ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/getRandomEffectsNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Random Effects Names — getRandomEffectsNames","title":"Get Random Effects Names — getRandomEffectsNames","text":"Utility function returns names random effects parameters. main use allow LongitudinalRandomEffects function know parameters needs extract common names map parameters .","code":""},{"path":"https://genentech.github.io/jmpost/reference/getRandomEffectsNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Random Effects Names — getRandomEffectsNames","text":"","code":"getRandomEffectsNames(object, ...)  # Default S3 method getRandomEffectsNames(object, ...)  # S3 method for class 'JointModel' getRandomEffectsNames(object, ...)  # S3 method for class 'LongitudinalGSF' getRandomEffectsNames(object, ...)  # S3 method for class 'LongitudinalGSF' getRandomEffectsNames(object, ...)  # S3 method for class 'LongitudinalRandomSlope' getRandomEffectsNames(object, ...)  # S3 method for class 'LongitudinalSteinFojo' getRandomEffectsNames(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/getRandomEffectsNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Random Effects Names — getRandomEffectsNames","text":"object (LongitudinalModel)  longitudinal model object ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/get_missing_rownumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"Row Numbers Data Missing Variables","code":""},{"path":"https://genentech.github.io/jmpost/reference/get_missing_rownumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"","code":"get_missing_rownumbers(df, formula = NULL)"},{"path":"https://genentech.github.io/jmpost/reference/get_missing_rownumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"df (data.frame) input data. formula (formula NULL) variables inspect missingness, NULL variables considered.","code":""},{"path":"https://genentech.github.io/jmpost/reference/get_missing_rownumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"Numeric vector specifying rows contain least 1 missing observation inspected variables.","code":""},{"path":"https://genentech.github.io/jmpost/reference/gsf_sld.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Stein-Fojo Functionals — gsf_sld","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"Generalized Stein-Fojo Functionals","code":""},{"path":"https://genentech.github.io/jmpost/reference/gsf_sld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"","code":"gsf_sld(time, b, s, g, phi)  gsf_ttg(time, b, s, g, phi)  gsf_dsld(time, b, s, g, phi)"},{"path":"https://genentech.github.io/jmpost/reference/gsf_sld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"time (numeric) time grid. b (number) baseline. s (number) shrinkage. g (number) growth. phi (number) shrinkage proportion.","code":""},{"path":"https://genentech.github.io/jmpost/reference/gsf_sld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"function results.","code":""},{"path":"https://genentech.github.io/jmpost/reference/harmonise.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data Object — harmonise.DataSubject","title":"Prepare Data Object — harmonise.DataSubject","text":"Prepare Data Object","code":""},{"path":"https://genentech.github.io/jmpost/reference/harmonise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data Object — harmonise.DataSubject","text":"","code":"# S3 method for class 'DataSubject' harmonise(object, ...)  harmonise(object, ...)  # Default S3 method harmonise(object, ...)  # S3 method for class 'DataLongitudinal' harmonise(object, subject_var, subject_ord, ...)  # S3 method for class 'DataSurvival' harmonise(object, subject_var, subject_ord, ...)"},{"path":"https://genentech.github.io/jmpost/reference/harmonise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data Object — harmonise.DataSubject","text":"object (DataSubject DataLongitudinal DataSurvival)  data object \"harmonise\" ... used. subject_var (character)  name variable containing subject identifier. subject_ord (character)  expected levels (order) subject identifier.","code":""},{"path":"https://genentech.github.io/jmpost/reference/harmonise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data Object — harmonise.DataSubject","text":"Returns original object data standardised (see details)","code":""},{"path":"https://genentech.github.io/jmpost/reference/harmonise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Data Object — harmonise.DataSubject","text":"utility function prepares datasets data objects order ensure consistent compatible . particular ensures subject variable, specified DataSubject, available DataLongitudinal DataSurvival levels present 3 data objects. also sorts datasets ensure indexes consistent e.g. index 1 DataSubject@data corresponds subject index 1 DataSurvival@data. DataLongitudinal data additionally sorted time outcome value.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.SimSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Time Intervals — hazardWindows.SimSurvival","title":"Construct Time Intervals — hazardWindows.SimSurvival","text":"Construct Time Intervals","code":""},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.SimSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Time Intervals — hazardWindows.SimSurvival","text":"","code":"# S3 method for class 'SimSurvival' hazardWindows(object)"},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.SimSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Time Intervals — hazardWindows.SimSurvival","text":"object (SimSurvival) survival simulation object create evaluation points .","code":""},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.SimSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Time Intervals — hazardWindows.SimSurvival","text":"tibble lower, upper, time, eval width.","code":""},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate time windows for evaluating a hazard function — hazardWindows","title":"Generate time windows for evaluating a hazard function — hazardWindows","text":"Generate time windows evaluating hazard function","code":""},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate time windows for evaluating a hazard function — hazardWindows","text":"","code":"hazardWindows(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/hazardWindows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate time windows for evaluating a hazard function — hazardWindows","text":"object (SurvivalModel)  object generate time windows . ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/initialValues.html","id":null,"dir":"Reference","previous_headings":"","what":"initialValues — initialValues","title":"initialValues — initialValues","text":"Obtain list initial values passed Stan sampler.","code":""},{"path":"https://genentech.github.io/jmpost/reference/initialValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialValues — initialValues","text":"","code":"initialValues(object, ...)  # S3 method for class 'StanModel' initialValues(object, n_chains, ...)  # S3 method for class 'LinkComponent' initialValues(object, n_chains, ...)  # S3 method for class 'Link' initialValues(object, ...)  # S3 method for class 'JointModel' initialValues(object, n_chains, ...)"},{"path":"https://genentech.github.io/jmpost/reference/initialValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialValues — initialValues","text":"object get initial values . ... currently used. n_chains number initial values generate. See details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/initialValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"initialValues — initialValues","text":"multiple ways specifying initial values Stan, see init argument cmdstanr::model-method-sample full details. Within package supply initial values via list lists inner list contains initial values single chain. n_chains argument specifies number inner lists generate. See Vignette details specify initial values.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/is_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Is String a Valid File? — is_file","title":"Is String a Valid File? — is_file","text":"utility function check string valid file . Used help address short comings file.exists() return TRUE directory well file.","code":""},{"path":"https://genentech.github.io/jmpost/reference/is_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is String a Valid File? — is_file","text":"","code":"is_file(filename = NULL)"},{"path":"https://genentech.github.io/jmpost/reference/is_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is String a Valid File? — is_file","text":"filename (string) file name.","code":""},{"path":"https://genentech.github.io/jmpost/reference/jmpost-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jmpost: Joint Models for Predicting Overall Survival Trajectories — jmpost-package","title":"jmpost: Joint Models for Predicting Overall Survival Trajectories — jmpost-package","text":"Implements joint models combining non-linear mixed effects model longitudinal measurements time--event model survival outcome. acronym 'jmpost' stands Joint Models Predicting Overall Survival Trajectories, refers application. phase 1 studies patients followed progression . Thus, reliable overall survival data hence estimates available. However, can use additional information previous clinical trials real-world data - can correlate tumour response data, longitudinal measurements, overall survival patients hazard ratios. Thereby can predict overall survival phase 1 study data therefore make better decisions.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/jmpost-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jmpost: Joint Models for Predicting Overall Survival Trajectories — jmpost-package","text":"Maintainer: Craig Gower-Page craig.gower-page@roche.com Authors: Francois Mercier francois.mercier@roche.com Daniel Sabanes Bove daniel.sabanes_bove@roche.com Georgios Kazantzidis georgios.kazantzidis@roche.com Isaac Gravestock isaac.gravestock@roche.com Xiaoyan Fang xiaoyan.fang@roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://genentech.github.io/jmpost/reference/jmpost-settings.html","id":null,"dir":"Reference","previous_headings":"","what":"jmpost settings — jmpost-settings","title":"jmpost settings — jmpost-settings","text":"Define settings modify behaviour jmpost package following name options can set via:","code":"options(<option_name> = <value>)"},{"path":"https://genentech.github.io/jmpost/reference/jmpost-settings.html","id":"jmpost-prior-shrinkage","dir":"Reference","previous_headings":"","what":"jmpost.prior_shrinkage","title":"jmpost settings — jmpost-settings","text":"Default = 0.5 default initial values drawn random sample respective prior distribution shrinkage factor towards mean. :   setting controls shrinkage factor. value 0 means shrinkage (.e. pure random draw) whilst value 1 means initial value just mean.","code":"initial_value = prior_mean * prior_shrinkage + (1 - prior_shrinkage) * prior_sample"},{"path":"https://genentech.github.io/jmpost/reference/jmpost-settings.html","id":"jmpost-cache-dir","dir":"Reference","previous_headings":"","what":"jmpost.cache_dir","title":"jmpost settings — jmpost-settings","text":"Default = tempfile() Directory store compiled stan models . set, temporary directory used given R session. Can also set via environment variable JMPOST_CACHE_DIR.","code":""},{"path":"https://genentech.github.io/jmpost/reference/jmpost-settings.html","id":"jmpost-gauss-quad-n","dir":"Reference","previous_headings":"","what":"jmpost.gauss_quad_n","title":"jmpost settings — jmpost-settings","text":"Default = 15 cases survival function joint model closed form calculated integrating hazard function. jmpost estimates via Gaussian Quadrature, particular uses statmod::gauss.quad kind = \"legendre\" create nodes weights. option specifies n argument call statmod::gauss.quad. general higher values n lead better accuracy approximation cost increased computational time.","code":""},{"path":"https://genentech.github.io/jmpost/reference/jmpost-settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"jmpost settings — jmpost-settings","text":"","code":"set_options()"},{"path":"https://genentech.github.io/jmpost/reference/jmpost-settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"jmpost settings — jmpost-settings","text":"","code":"if (FALSE) { # \\dontrun{ options(jmpost.prior_shrinkage = 0.5) } # }"},{"path":"https://genentech.github.io/jmpost/reference/length.Link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link -> list — length.Link","title":"Link -> list — length.Link","text":"Returns number link components within Link object","code":""},{"path":"https://genentech.github.io/jmpost/reference/length.Link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link -> list — length.Link","text":"","code":"# S3 method for class 'Link' length(x)"},{"path":"https://genentech.github.io/jmpost/reference/length.Link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link -> list — length.Link","text":"x (Link) link object.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/longitudinal_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Plot — longitudinal_plot","title":"Longitudinal Plot — longitudinal_plot","text":"Internal plotting function create longitudinal plots function predominately exists extract core logic function enable easier unit testing.","code":""},{"path":"https://genentech.github.io/jmpost/reference/longitudinal_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Plot — longitudinal_plot","text":"","code":"longitudinal_plot(data, data_obs = NULL, add_ci = FALSE)"},{"path":"https://genentech.github.io/jmpost/reference/longitudinal_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Longitudinal Plot — longitudinal_plot","text":"data (data.frame) summary statistics longitudinal value estimates. See details. data_obs (data.frame) real observed values overlaid reference.  See details. add_ci (logical) confidence intervals added? Default = TRUE.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/longitudinal_plot.html","id":"data","dir":"Reference","previous_headings":"","what":"data","title":"Longitudinal Plot — longitudinal_plot","text":"contain following columns: time (numeric)  time point summary statistic. group (character)  group observation belongs . median (numeric)  median value summary statistic. upper (numeric)  upper 95% CI summary statistic. lower (numeric)  lower 95% CI summary statistic.","code":""},{"path":"https://genentech.github.io/jmpost/reference/longitudinal_plot.html","id":"data-obs","dir":"Reference","previous_headings":"","what":"data_obs","title":"Longitudinal Plot — longitudinal_plot","text":"contain following columns: time (numeric)  time observed value occurred. Yob (numeric)  real observed value. group (character)  group event belongs , correspond values data$group.","code":""},{"path":"https://genentech.github.io/jmpost/reference/match_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Order — match_order","title":"Match Order — match_order","text":"Match Order","code":""},{"path":"https://genentech.github.io/jmpost/reference/match_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Order — match_order","text":"","code":"match_order(x)"},{"path":"https://genentech.github.io/jmpost/reference/match_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Order — match_order","text":"x (numeric) vector want generate index vectors can put sort order Assuming vector sorted function return index vector convert sorted vector sort order input vector x. example let x = 8, 7, 9 , 7. sorted get x_sort = 7, 7, 8, 9. order convert x_sort back x need index vector 3, 1, 4, 2. function used determine corresponding index vector arbitrarily sorted vector x. specific handling ties. assuming case ties x vector re-indexing also tied values thus specific tied element selection matter.","code":""},{"path":"https://genentech.github.io/jmpost/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"merge — merge","title":"merge — merge","text":"Merge two StanModule ParameterList objects.","code":""},{"path":"https://genentech.github.io/jmpost/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge — merge","text":"","code":"merge(x, y, ...)  # S4 method for class 'StanModule,StanModule' merge(x, y, stan_blocks = STAN_BLOCKS, ...)  # S4 method for class 'ParameterList,ParameterList' merge(x, y)  # S4 method for class 'StanModel,NULL' merge(x, y, ...)  # S4 method for class 'NULL,StanModel' merge(x, y, ...)  # S4 method for class 'StanModule,NULL' merge(x, y, ...)  # S4 method for class 'NULL,StanModule' merge(x, y, ...)  # S4 method for class 'ParameterList,NULL' merge(x, y, ...)  # S4 method for class 'NULL,ParameterList' merge(x, y, ...)  # S4 method for class 'NULL,NULL' merge(x, y, ...)"},{"path":"https://genentech.github.io/jmpost/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge — merge","text":"x first module. y second module. ... additional arguments. stan_blocks (list) reference list stan blocks.","code":""},{"path":"https://genentech.github.io/jmpost/reference/mirror_design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Build design matrix for prediction data — mirror_design_matrix","title":"Build design matrix for prediction data — mirror_design_matrix","text":"function takes DataSurvival object data.frame object generates design matrix data.frame identical structure design matrix DataSurvival object. used predicting new data using model trained different original data source","code":""},{"path":"https://genentech.github.io/jmpost/reference/mirror_design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build design matrix for prediction data — mirror_design_matrix","text":"","code":"mirror_design_matrix(olddata, newdata)"},{"path":"https://genentech.github.io/jmpost/reference/mirror_design_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build design matrix for prediction data — mirror_design_matrix","text":"olddata (DataSurvival)  original data used template new data newdata (data.frame)  new data used generate design matrix","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Prior Distribution — prior_beta","title":"Beta Prior Distribution — prior_beta","text":"Beta Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Prior Distribution — prior_beta","text":"","code":"prior_beta(a, b)"},{"path":"https://genentech.github.io/jmpost/reference/prior_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Prior Distribution — prior_beta","text":"(number) first parameter. b (number) second parameter","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_cauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Cauchy Prior Distribution — prior_cauchy","title":"Cauchy Prior Distribution — prior_cauchy","text":"Cauchy Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_cauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cauchy Prior Distribution — prior_cauchy","text":"","code":"prior_cauchy(mu, sigma)"},{"path":"https://genentech.github.io/jmpost/reference/prior_cauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cauchy Prior Distribution — prior_cauchy","text":"mu (number) mean. sigma (number) scale.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Prior Distribution — prior_gamma","title":"Gamma Prior Distribution — prior_gamma","text":"Gamma Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Prior Distribution — prior_gamma","text":"","code":"prior_gamma(alpha, beta)"},{"path":"https://genentech.github.io/jmpost/reference/prior_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Prior Distribution — prior_gamma","text":"alpha (number) shape. beta (number) inverse scale.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_init_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial Values Specification — prior_init_only","title":"Initial Values Specification — prior_init_only","text":"function used specify initial values parameter. primarily used hierarchical parameters whose distributions fixed within model altered user.","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_init_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial Values Specification — prior_init_only","text":"","code":"prior_init_only(dist)"},{"path":"https://genentech.github.io/jmpost/reference/prior_init_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial Values Specification — prior_init_only","text":"dist (Prior) prior Distribution","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_invgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse-Gamma Prior Distribution — prior_invgamma","title":"Inverse-Gamma Prior Distribution — prior_invgamma","text":"Inverse-Gamma Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_invgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse-Gamma Prior Distribution — prior_invgamma","text":"","code":"prior_invgamma(alpha, beta)"},{"path":"https://genentech.github.io/jmpost/reference/prior_invgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse-Gamma Prior Distribution — prior_invgamma","text":"alpha (number) Shape parameter. beta (number) Scale parameter.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Prior Distribution — prior_logistic","title":"Logistic Prior Distribution — prior_logistic","text":"Logistic Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Prior Distribution — prior_logistic","text":"","code":"prior_logistic(mu, sigma)"},{"path":"https://genentech.github.io/jmpost/reference/prior_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Prior Distribution — prior_logistic","text":"mu (number) Location parameter. sigma (number) Scale parameter.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_loglogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Logistic Prior Distribution — prior_loglogistic","title":"Log-Logistic Prior Distribution — prior_loglogistic","text":"Log-Logistic Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_loglogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Logistic Prior Distribution — prior_loglogistic","text":"","code":"prior_loglogistic(alpha, beta)"},{"path":"https://genentech.github.io/jmpost/reference/prior_loglogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Logistic Prior Distribution — prior_loglogistic","text":"alpha (number) Scale parameter. beta (number) Shape parameter.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Normal Prior Distribution — prior_lognormal","title":"Log-Normal Prior Distribution — prior_lognormal","text":"Log-Normal Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Normal Prior Distribution — prior_lognormal","text":"","code":"prior_lognormal(mu, sigma)"},{"path":"https://genentech.github.io/jmpost/reference/prior_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Normal Prior Distribution — prior_lognormal","text":"mu (number) mean logarithm. sigma (number) standard deviation logarithm.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal Prior Distribution — prior_normal","title":"Normal Prior Distribution — prior_normal","text":"Normal Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal Prior Distribution — prior_normal","text":"","code":"prior_normal(mu, sigma)"},{"path":"https://genentech.github.io/jmpost/reference/prior_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal Prior Distribution — prior_normal","text":"mu (number) mean. sigma (number) standard deviation.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_std_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Normal Prior Distribution — prior_std_normal","title":"Standard Normal Prior Distribution — prior_std_normal","text":"Standard Normal Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_std_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Normal Prior Distribution — prior_std_normal","text":"","code":"prior_std_normal()"},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_student_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Student-t Prior Distribution — prior_student_t","title":"Student-t Prior Distribution — prior_student_t","text":"Student-t Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_student_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student-t Prior Distribution — prior_student_t","text":"","code":"prior_student_t(nu, mu, sigma)"},{"path":"https://genentech.github.io/jmpost/reference/prior_student_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Student-t Prior Distribution — prior_student_t","text":"nu (number) Degrees freedom parameter. mu (number) Location parameter. sigma (number) Scale parameter.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/prior_uniform.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Prior Distribution — prior_uniform","title":"Uniform Prior Distribution — prior_uniform","text":"Uniform Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/prior_uniform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Prior Distribution — prior_uniform","text":"","code":"prior_uniform(alpha, beta)"},{"path":"https://genentech.github.io/jmpost/reference/prior_uniform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Prior Distribution — prior_uniform","text":"alpha (number) minimum value parameter. beta (number) maximum value parameter.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/read_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Code as Character — read_stan","title":"Stan Code as Character — read_stan","text":"Stan Code Character","code":""},{"path":"https://genentech.github.io/jmpost/reference/read_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Code as Character — read_stan","text":"","code":"read_stan(string)"},{"path":"https://genentech.github.io/jmpost/reference/read_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Code as Character — read_stan","text":"string Character, either absolute path stan file, name stan file package directory stan code string.","code":""},{"path":"https://genentech.github.io/jmpost/reference/remove_missing_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Rows with Missing Variables — remove_missing_rows","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"Removes rows data set contain missing values inspected variables. Allows users specify variables inspect missing values based either formula character vector variable names.","code":""},{"path":"https://genentech.github.io/jmpost/reference/remove_missing_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"","code":"remove_missing_rows(data, formula, extra_vars = NULL)"},{"path":"https://genentech.github.io/jmpost/reference/remove_missing_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"data (data.frame) input data. formula (formula NULL) variables inspect missingness. extra_vars (character) additional variables inspect missingness.","code":""},{"path":"https://genentech.github.io/jmpost/reference/remove_missing_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"data removing observations contain missing values required variables. Note additional variables listed formula extra_vars dropped may still contain missing values.","code":""},{"path":"https://genentech.github.io/jmpost/reference/render_stan_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates Stan Syntax for Truncated distributions — render_stan_limits","title":"Creates Stan Syntax for Truncated distributions — render_stan_limits","text":"function creates Stan syntax truncated distributions","code":""},{"path":"https://genentech.github.io/jmpost/reference/render_stan_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates Stan Syntax for Truncated distributions — render_stan_limits","text":"","code":"render_stan_limits(limits)"},{"path":"https://genentech.github.io/jmpost/reference/render_stan_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates Stan Syntax for Truncated distributions — render_stan_limits","text":"limits (numeric) lower upper limits truncated distribution","code":""},{"path":"https://genentech.github.io/jmpost/reference/render_stan_limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates Stan Syntax for Truncated distributions — render_stan_limits","text":"(character) Stan syntax truncated distributions","code":""},{"path":"https://genentech.github.io/jmpost/reference/replace_with_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Character Size by Looked Up Numbers — replace_with_lookup","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"Replace Character Size Looked Numbers","code":""},{"path":"https://genentech.github.io/jmpost/reference/replace_with_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"","code":"replace_with_lookup(sizes, data)"},{"path":"https://genentech.github.io/jmpost/reference/replace_with_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"sizes (list) may include character elements correspond names data list. data (list) data containing numeric values.","code":""},{"path":"https://genentech.github.io/jmpost/reference/replace_with_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"list sizes character elements sizes replaced corresponding numeric values data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/replace_with_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"attribute array returned list element indicates whether parameter needs handled array. case size larger 1, size looked data, case flexible hence handled array Stan code.","code":""},{"path":"https://genentech.github.io/jmpost/reference/replace_with_lookup.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"element final list sizes must single number.","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.Link.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve any promises — resolvePromise.Link","title":"Resolve any promises — resolvePromise.Link","text":"Loops components ensures PromiseLinkComponent objects resolved LinkComponent objects.","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.Link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve any promises — resolvePromise.Link","text":"","code":"# S3 method for class 'Link' resolvePromise(object, model, ...)"},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.Link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve any promises — resolvePromise.Link","text":"object (Link) link object. model (LongitudinalModel) model object. ... Used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.PromiseLinkComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve a PromiseLinkComponent — resolvePromise.PromiseLinkComponent","title":"Resolve a PromiseLinkComponent — resolvePromise.PromiseLinkComponent","text":"Resolves PromiseLinkComponent object LinkComponent object. error thrown returned LinkComponent object key slot value original PromiseLinkComponent.","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.PromiseLinkComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve a PromiseLinkComponent — resolvePromise.PromiseLinkComponent","text":"","code":"# S3 method for class 'PromiseLinkComponent' resolvePromise(object, model, ...)"},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.PromiseLinkComponent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve a PromiseLinkComponent — resolvePromise.PromiseLinkComponent","text":"object (PromiseLinkComponent)  promise resolve model (LongitudinalModel)  model resolve promise ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.PromiseLinkComponent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve a PromiseLinkComponent — resolvePromise.PromiseLinkComponent","text":"(LinkComponent)  resolved LinkComponent object","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve a Promise — resolvePromise","title":"Resolve a Promise — resolvePromise","text":"Resolve Promise","code":""},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve a Promise — resolvePromise","text":"","code":"resolvePromise(object, ...)  # Default S3 method resolvePromise(object, ...)"},{"path":"https://genentech.github.io/jmpost/reference/resolvePromise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve a Promise — resolvePromise","text":"object () object resolve. ... () additional arguments. object promise just return else resolve promise return promised object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/reverse_km.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse Kaplan-Meier — reverse_km","title":"Reverse Kaplan-Meier — reverse_km","text":"Calculates survival estimates censoring distribution using Kaplan-Meier estimate. primarily used calculation IPCW estimates.","code":""},{"path":"https://genentech.github.io/jmpost/reference/reverse_km.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse Kaplan-Meier — reverse_km","text":"","code":"reverse_km_event_first(t, times, events)  reverse_km_cen_first(t, times, events)"},{"path":"https://genentech.github.io/jmpost/reference/reverse_km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse Kaplan-Meier — reverse_km","text":"t (numeric) timepoints calculate desired quantity . times (numeric) observed times. events (numeric) event indicator times. Either 1 event 0 censor.","code":""},{"path":"https://genentech.github.io/jmpost/reference/reverse_km.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reverse Kaplan-Meier — reverse_km","text":"regards ties censor event times; standard approach regard events occurring censors. However, modelling censoring distribution regarding censors \"events\" come first case ties? reverse_km_event_first() function maintains rule events always come first even regarding censors \"events\". matches implementation prodlim::prodlim(..., reverse = TRUE). reverse_km_cen_first() function provides alternative implementation assuming case ties censor \"events\" come event \"censors\". essentially thin wrapper around survival::survfit(Surv(time, 1 - event), ...)","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleObservations.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Simulated Observations — sampleObservations","title":"Generate Simulated Observations — sampleObservations","text":"Generate Simulated Observations","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleObservations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Simulated Observations — sampleObservations","text":"","code":"sampleObservations(object, times_df)  # S3 method for class 'SimLongitudinalClaretBruno' sampleObservations(object, times_df)  # S3 method for class 'SimLongitudinalGSF' sampleObservations(object, times_df)  # S3 method for class 'SimLongitudinalRandomSlope' sampleObservations(object, times_df)  # S3 method for class 'SimLongitudinalSteinFojo' sampleObservations(object, times_df)  # S3 method for class 'SimSurvival' sampleObservations(object, times_df)"},{"path":"https://genentech.github.io/jmpost/reference/sampleObservations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Simulated Observations — sampleObservations","text":"object (SimLongitudinal SimSurvival)  object generate observations . times_df (data.frame)  times generate observations. See details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleObservations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Simulated Observations — sampleObservations","text":"times_df argument data.frame created sampleSubjects replicated time point observations generated. want generate observations times c(0, 1, 2, 3) times_df created :","code":"subject_dat <- sampleSubjects(object, ...) times_df <- tidyr::expand_grid(     subject_dat,     time = c(0, 1, 2, 3) )"},{"path":"https://genentech.github.io/jmpost/reference/sampleStanModel.html","id":null,"dir":"Reference","previous_headings":"","what":"sampleStanModel — sampleStanModel","title":"sampleStanModel — sampleStanModel","text":"Sample Stan Module.","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleStanModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sampleStanModel — sampleStanModel","text":"","code":"sampleStanModel(object, ...)  # S3 method for class 'JointModel' sampleStanModel(object, data, ...)"},{"path":"https://genentech.github.io/jmpost/reference/sampleStanModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sampleStanModel — sampleStanModel","text":"object module. ... additional arguments. data (DataJoint list) input data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleSubjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Simulated Subjects — sampleSubjects","title":"Generate Simulated Subjects — sampleSubjects","text":"Generate Simulated Subjects","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleSubjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Simulated Subjects — sampleSubjects","text":"","code":"sampleSubjects(object, subjects_df)  # S3 method for class 'SimLongitudinalClaretBruno' sampleSubjects(object, subjects_df)  # S3 method for class 'SimLongitudinalGSF' sampleSubjects(object, subjects_df)  # S3 method for class 'SimLongitudinalRandomSlope' sampleSubjects(object, subjects_df)  # S3 method for class 'SimLongitudinalSteinFojo' sampleSubjects(object, subjects_df)  # S3 method for class 'SimSurvival' sampleSubjects(object, subjects_df)"},{"path":"https://genentech.github.io/jmpost/reference/sampleSubjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Simulated Subjects — sampleSubjects","text":"object (SimLongitudinal SimSurvival)  object generate subjects . subjects_df (data.frame)  subjects generate observations . See details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/sampleSubjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Simulated Subjects — sampleSubjects","text":"subjects_df argument data.frame 1 row per desired subject create following columns: study (factor) study identifier. arm (factor) treatment arm identifier. subject (character) subject identifier. method takes care generating individual subject data required sampleObservations method generate observations.","code":""},{"path":"https://genentech.github.io/jmpost/reference/samples_median_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"Obtain Median Credible Intervals MCMC samples","code":""},{"path":"https://genentech.github.io/jmpost/reference/samples_median_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"","code":"samples_median_ci(samples, level = 0.95)"},{"path":"https://genentech.github.io/jmpost/reference/samples_median_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"samples (matrix) samples rows parameters columns. level (number) credibility level use credible intervals.","code":""},{"path":"https://genentech.github.io/jmpost/reference/samples_median_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"data.frame columns median, lower upper.","code":""},{"path":"https://genentech.github.io/jmpost/reference/saveObject.JointModelSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a JointModelSamples object to a file. — saveObject.JointModelSamples","title":"Save a JointModelSamples object to a file. — saveObject.JointModelSamples","text":"function just wrapper around saveRDS saves object file ensuring Stan samples correctly stored. Note cmdstanr objects store samples csv file samples may lost call saveRDS directly object.","code":""},{"path":"https://genentech.github.io/jmpost/reference/saveObject.JointModelSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a JointModelSamples object to a file. — saveObject.JointModelSamples","text":"","code":"# S3 method for class 'JointModelSamples' saveObject(object, file, ...)"},{"path":"https://genentech.github.io/jmpost/reference/saveObject.JointModelSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a JointModelSamples object to a file. — saveObject.JointModelSamples","text":"object (JointModelSamples) object save. file (character) file save object . ... () additional arguments saveRDS.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/saveObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Object to File — saveObject","title":"Save Object to File — saveObject","text":"Save Object File","code":""},{"path":"https://genentech.github.io/jmpost/reference/saveObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Object to File — saveObject","text":"","code":"saveObject(object, file, ...)"},{"path":"https://genentech.github.io/jmpost/reference/saveObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Object to File — saveObject","text":"object ()  object save. file (character)  file save object . ... ()  additional arguments.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/set_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Constraints — set_limits","title":"Set Constraints — set_limits","text":"Applies constraints prior distribution ensure sampled numbers distribution fall within constraints","code":""},{"path":"https://genentech.github.io/jmpost/reference/set_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Constraints — set_limits","text":"","code":"set_limits(object, lower = -Inf, upper = Inf)  # S3 method for class 'Prior' set_limits(object, lower = -Inf, upper = Inf)"},{"path":"https://genentech.github.io/jmpost/reference/set_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Constraints — set_limits","text":"object (Prior) prior distribution apply constraints lower (numeric) lower constraint boundary upper (numeric) upper constraint boundary","code":""},{"path":"https://genentech.github.io/jmpost/reference/sf_sld.html","id":null,"dir":"Reference","previous_headings":"","what":"Stein-Fojo Functionals — sf_sld","title":"Stein-Fojo Functionals — sf_sld","text":"Stein-Fojo Functionals","code":""},{"path":"https://genentech.github.io/jmpost/reference/sf_sld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stein-Fojo Functionals — sf_sld","text":"","code":"sf_sld(time, b, s, g)  sf_ttg(time, b, s, g)  sf_dsld(time, b, s, g)"},{"path":"https://genentech.github.io/jmpost/reference/sf_sld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stein-Fojo Functionals — sf_sld","text":"time (numeric) time grid. b (number) baseline. s (number) shrinkage. g (number) growth.","code":""},{"path":"https://genentech.github.io/jmpost/reference/sf_sld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stein-Fojo Functionals — sf_sld","text":"function results.","code":""},{"path":"https://genentech.github.io/jmpost/reference/show-object.html","id":null,"dir":"Reference","previous_headings":"","what":"Show an Object — show,DataSubject-method","title":"Show an Object — show,DataSubject-method","text":"Prints object console.","code":""},{"path":"https://genentech.github.io/jmpost/reference/show-object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show an Object — show,DataSubject-method","text":"","code":"# S4 method for class 'DataSubject' show(object)  # S4 method for class 'DataLongitudinal' show(object)  # S4 method for class 'DataSurvival' show(object)  # S4 method for class 'DataJoint' show(object)  # S4 method for class 'StanModule' show(object)  # S4 method for class 'Prior' show(object)  # S4 method for class 'Parameter' show(object)  # S4 method for class 'ParameterList' show(object)  # S4 method for class 'StanModel' show(object)  # S4 method for class 'LinkComponent' show(object)  # S4 method for class 'Link' show(object)  # S4 method for class 'JointModel' show(object)  # S4 method for class 'Quantities' show(object)  # S4 method for class 'SurvivalQuantities' show(object)  # S4 method for class 'JointModelSamples' show(object)  # S4 method for class 'LongitudinalQuantities' show(object)  # S4 method for class 'RandomEffectQuantities' show(object)  # S4 method for class 'SimJointData' show(object)  # S4 method for class 'SimLongitudinal' show(object)  # S4 method for class 'SimSurvival' show(object)"},{"path":"https://genentech.github.io/jmpost/reference/show-object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show an Object — show,DataSubject-method","text":"object Object printed","code":""},{"path":"https://genentech.github.io/jmpost/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing of Different Classes — show","title":"Printing of Different Classes — show","text":"methods print objects different classes.","code":""},{"path":"https://genentech.github.io/jmpost/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing of Different Classes — show","text":"object print.","code":""},{"path":"https://genentech.github.io/jmpost/reference/size.html","id":null,"dir":"Reference","previous_headings":"","what":"size — size","title":"size — size","text":"Obtain list parameter sizes.","code":""},{"path":"https://genentech.github.io/jmpost/reference/size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"size — size","text":"","code":"size(object)"},{"path":"https://genentech.github.io/jmpost/reference/size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"size — size","text":"object get parameter sizes .","code":""},{"path":"https://genentech.github.io/jmpost/reference/standard-link-user.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Links — standard-link-user","title":"Standard Links — standard-link-user","text":"functions used enable use corresponding link function survival longitudinal models joint model. Note exact implementation link function model specific, see vignette(\"Statistical Specifications\", package = \"jmpost\") details.","code":""},{"path":"https://genentech.github.io/jmpost/reference/standard-link-user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Links — standard-link-user","text":"","code":"linkNone()  linkTTG(prior, model = PromiseLongitudinalModel(), ...)  linkDSLD(prior, model = PromiseLongitudinalModel(), ...)  linkIdentity(prior, model = PromiseLongitudinalModel(), ...)  linkGrowth(prior, model = PromiseLongitudinalModel(), ...)  linkShrinkage(prior, model = PromiseLongitudinalModel(), ...)"},{"path":"https://genentech.github.io/jmpost/reference/standard-link-user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Links — standard-link-user","text":"prior (Prior)  Prior object. model (LongitudinalModel)  LongitudinalModel object. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/standard-link-user.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Standard Links — standard-link-user","text":"linkNone(): link (fit survival longitudinal models independently) linkTTG(): Time growth link linkDSLD(): Derivative SLD time link linkIdentity(): Current SLD value link linkGrowth(): Growth Parameter link linkShrinkage(): Shrinkage Parameter link","code":""},{"path":"https://genentech.github.io/jmpost/reference/stanmodel_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModel Function Arguments — stanmodel_arguments","title":"StanModel Function Arguments — stanmodel_arguments","text":"documentation lists conventional arguments wrappers around StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/reference/stanmodel_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModel Function Arguments — stanmodel_arguments","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. parameter (ParameterList) (single) parameter specification. name (character) display name model object. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/reference/subjects_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand and Validate Subjects — subjects_to_list","title":"Expand and Validate Subjects — subjects_to_list","text":"subjects NULL return named list subjects data. Else return subjects named list ensuring subjects exist data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/subjects_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand and Validate Subjects — subjects_to_list","text":"","code":"subjects_to_list(subjects = NULL, data)"},{"path":"https://genentech.github.io/jmpost/reference/subjects_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand and Validate Subjects — subjects_to_list","text":"subjects (character) vector subjects exist data data (DataJoint) Survival Longitudinal Data.","code":""},{"path":"https://genentech.github.io/jmpost/reference/subset.DataJoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting DataJoint as a data.frame — subset.DataJoint","title":"Subsetting DataJoint as a data.frame — subset.DataJoint","text":"Coerces object data.frame containing just event times status filtering specific subjects subjects list additional variable group added onto dataset specifying group row belongs .","code":""},{"path":"https://genentech.github.io/jmpost/reference/subset.DataJoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting DataJoint as a data.frame — subset.DataJoint","text":"","code":"# S3 method for class 'DataJoint' subset(x, subjects, ...)"},{"path":"https://genentech.github.io/jmpost/reference/subset.DataJoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting DataJoint as a data.frame — subset.DataJoint","text":"x (DataJoint)  object created DataJoint(). subjects (character list) subjects wish subset data.frame contain. See details. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/subset.DataJoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsetting DataJoint as a data.frame — subset.DataJoint","text":"","code":"if (FALSE) { # \\dontrun{ subjects <- c(\"SUB1\", \"SUB2\", \"SUB3\", \"SUB4\") subset(x, subjects)  groups <- list(     \"g1\" = c(\"SUB1\", \"SUB3\", \"SUB4\"),     \"g2\" = c(\"SUB2\", \"SUB3\") ) subset(x, groups) } # }"},{"path":"https://genentech.github.io/jmpost/reference/subset_and_add_grouping.html","id":null,"dir":"Reference","previous_headings":"","what":"subset_and_add_grouping — subset_and_add_grouping","title":"subset_and_add_grouping — subset_and_add_grouping","text":"subset_and_add_grouping","code":""},{"path":"https://genentech.github.io/jmpost/reference/subset_and_add_grouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset_and_add_grouping — subset_and_add_grouping","text":"","code":"subset_and_add_grouping(dat, groupings)"},{"path":"https://genentech.github.io/jmpost/reference/subset_and_add_grouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset_and_add_grouping — subset_and_add_grouping","text":"dat (data.frame)  must column called subject corresponds values passed groupings. groupings (character list) subjects wish subset dataset contain. groupings list additional variable group added onto dataset specifying group row belongs .","code":""},{"path":"https://genentech.github.io/jmpost/reference/subset_and_add_grouping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"subset_and_add_grouping — subset_and_add_grouping","text":"Example usage","code":"subjects <- c(\"SUB1\", \"SUB2\", \"SUB3\", \"SUB4\") subset_and_add_grouping(dat, subjects)  groups <- list(     \"g1\" = c(\"SUB1\", \"SUB3\", \"SUB4\"),     \"g2\" = c(\"SUB2\", \"SUB3\") ) subset_and_add_grouping(dat, groups)"},{"path":"https://genentech.github.io/jmpost/reference/summary.LongitudinalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary.LongitudinalQuantities","title":"summary — summary.LongitudinalQuantities","text":"method returns data.frame longitudinal quantities.","code":""},{"path":"https://genentech.github.io/jmpost/reference/summary.LongitudinalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary.LongitudinalQuantities","text":"","code":"# S3 method for class 'LongitudinalQuantities' summary(object, conf.level = 0.95, ...)"},{"path":"https://genentech.github.io/jmpost/reference/summary.LongitudinalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary.LongitudinalQuantities","text":"object (LongitudinalQuantities)  longitudinal quantities. conf.level (numeric)  confidence level interval. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/summary.Quantities.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary.Quantities","title":"summary — summary.Quantities","text":"method returns summary statistic data.frame quantities. Note just internal utility method order share common code LongitudinalQuantities SurvivalQuantities","code":""},{"path":"https://genentech.github.io/jmpost/reference/summary.Quantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary.Quantities","text":"","code":"# S3 method for class 'Quantities' summary(object, conf.level = 0.95, ...)"},{"path":"https://genentech.github.io/jmpost/reference/summary.Quantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary.Quantities","text":"object (Quantities)  generated quantities. conf.level (numeric)  confidence level interval. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/summary.Quantities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary — summary.Quantities","text":"data.frame following variables: median (numeric)  median value quantity. lower (numeric)  lower CI value quantity. upper (numeric)  upper CI value quantity. time (numeric)  time point quantity . group (character)  group quantity belongs . type (character)  type quantity .","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/summary.RandomEffectQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary.RandomEffectQuantities","title":"summary — summary.RandomEffectQuantities","text":"method returns summary statistic data.frame random effect parameters","code":""},{"path":"https://genentech.github.io/jmpost/reference/summary.RandomEffectQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary.RandomEffectQuantities","text":"","code":"# S3 method for class 'RandomEffectQuantities' summary(object, conf.level = 0.95, ...)"},{"path":"https://genentech.github.io/jmpost/reference/summary.RandomEffectQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary.RandomEffectQuantities","text":"object (RandomEffectQuantities)  generated quantities. conf.level (numeric)  confidence level interval. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/reference/summary.RandomEffectQuantities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary — summary.RandomEffectQuantities","text":"data.frame following variables: subject (character)  subject identifier. parameter (character)  parameter identifier. median (numeric)  median value quantity. lower (numeric)  lower CI value quantity. upper (numeric)  upper CI value quantity.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/summary.SurvivalQuantities.html","id":null,"dir":"Reference","previous_headings":"","what":"summary — summary.SurvivalQuantities","title":"summary — summary.SurvivalQuantities","text":"method returns data.frame longitudinal quantities.","code":""},{"path":"https://genentech.github.io/jmpost/reference/summary.SurvivalQuantities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary — summary.SurvivalQuantities","text":"","code":"# S3 method for class 'SurvivalQuantities' summary(object, conf.level = 0.95, ...)"},{"path":"https://genentech.github.io/jmpost/reference/summary.SurvivalQuantities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary — summary.SurvivalQuantities","text":"object (SurvivalQuantities)  survival quantities. conf.level (numeric)  confidence level interval. ... used.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/survival_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Plot — survival_plot","title":"Survival Plot — survival_plot","text":"Internal plotting function create survival plots KM curve overlays function predominately exists extract core logic function enable easier unit testing.","code":""},{"path":"https://genentech.github.io/jmpost/reference/survival_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival Plot — survival_plot","text":"","code":"survival_plot(   data,   add_ci = TRUE,   add_wrap = TRUE,   kmdf = NULL,   y_label = expression(S(t)),   x_label = expression(t) )"},{"path":"https://genentech.github.io/jmpost/reference/survival_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival Plot — survival_plot","text":"data (data.frame) summary statistics survival curve plotted. See details. add_ci (logical) confidence intervals added? Default = TRUE. add_wrap (logical) plots wrapped data$group? Default = TRUE. kmdf (data.frame NULL) event times status used plot overlaying KM curves. NULL KM curve plotted. See details. y_label (character expression)  label display y-axis. Default = expression(S(t)). x_label (character expression)  label display x-axis.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/reference/survival_plot.html","id":"data","dir":"Reference","previous_headings":"","what":"data","title":"Survival Plot — survival_plot","text":"contain following columns: time (numeric)  time point summary statistic. group (character)  group observation belongs . median (numeric)  median value summary statistic. upper (numeric)  upper 95% CI summary statistic. lower (numeric)  lower 95% CI summary statistic.","code":""},{"path":"https://genentech.github.io/jmpost/reference/survival_plot.html","id":"kmdf","dir":"Reference","previous_headings":"","what":"kmdf","title":"Survival Plot — survival_plot","text":"contain following columns: time (numeric)  time event occurred. event (numeric)  1/0 status indicator event. group (character)  group event belongs , correspond values data$group.","code":""},{"path":"https://genentech.github.io/jmpost/reference/validate_time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"validate_time_grid — validate_time_grid","title":"validate_time_grid — validate_time_grid","text":"Validate provided time grid : finite numeric non-missing sorted unique","code":""},{"path":"https://genentech.github.io/jmpost/reference/validate_time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate_time_grid — validate_time_grid","text":"","code":"validate_time_grid(time_grid)"},{"path":"https://genentech.github.io/jmpost/reference/validate_time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate_time_grid — validate_time_grid","text":"time_grid (numeric) vector times quantities evaluated .","code":""},{"path":"https://genentech.github.io/jmpost/reference/write_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"write_stan — write_stan","title":"write_stan — write_stan","text":"Write Stan code Stan module.","code":""},{"path":"https://genentech.github.io/jmpost/reference/write_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_stan — write_stan","text":"","code":"write_stan(object, destination, ...)  # S3 method for class 'JointModel' write_stan(object, destination, ...)"},{"path":"https://genentech.github.io/jmpost/reference/write_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_stan — write_stan","text":"object module. destination (character  connection) write stan code . ... Additional arguments","code":""},{"path":"https://genentech.github.io/jmpost/news/index.html","id":"jmpost-development-version","dir":"Changelog","previous_headings":"","what":"jmpost (development version)","title":"jmpost (development version)","text":"Included new LongitudinalRandomEffects() function can used extract patient-level random effects parameter samples JointModelSample object (#423). Introduced saveObject() method JointModelSample objects order serialise disk (#431). Added support truncated prior distributions e.g. can now apply normal prior strictly positive parameter jmpost take care adjusting density accordingly (#429). Included new Gamma distribution survival model (#411). Reworked LOO calculations apply individual submodel disabled LOO calculations overall joint model (#402). Added support additive variance (#403). Added support independent variances per study/arm (#389). Miscellaneous bug fixes.","code":""},{"path":"https://genentech.github.io/jmpost/news/index.html","id":"jmpost-001","dir":"Changelog","previous_headings":"","what":"jmpost 0.0.1","title":"jmpost 0.0.1","text":"Initial Release","code":""}]
