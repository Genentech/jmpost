[{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://genentech.github.io/jmpost/main/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Model Fitting","text":"JointModel needs specified three parts: 1. longitudinal: model longitudinal outcomes. 2. survival: model survival outcomes. 3. link: link specifies longitudinal model parameters enter survival model.","code":""},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"default-options","dir":"Articles","previous_headings":"Model Specification","what":"Default Options","title":"Model Fitting","text":"Let’s first specify simple joint model : 1. random slope model longitudinal outcome. 2. Weibull proportional hazards model survival outcome. 3. link two models random slope longitudinal model enters product link coefficient linear predictor survival model. Note use default options two models link, particular prior distributions initial values MCMC chain parameters automatically chosen. Currently can see arguments constructors: see 4 model parameters proper prior additional random_slope one just initial value can specified.","code":"simple_model <- JointModel(     longitudinal = LongitudinalRandomSlope(),     link = LinkRandomSlope(),     survival = SurvivalWeibullPH() ) args(LongitudinalRandomSlope) #> function (intercept = prior_normal(30, 10, init = 30), slope_mu = prior_normal(0,  #>     15, init = 0.001), slope_sigma = prior_cauchy(0, 4, init = 0.4),  #>     sigma = prior_cauchy(0, 4, init = 0.4), random_slope = prior_none(init = 0))  #> NULL"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"specifying-prior-and-initial-values","dir":"Articles","previous_headings":"Model Specification","what":"Specifying Prior and Initial Values","title":"Model Fitting","text":"can alternatively also specify prior distributions initial values parameters manually. important practice obtain meaningful model specification hence converging MCMC chains allow estimate posterior distributions. random slope model longitudinal outcome, can e.g. say: sets prior intercept, without stating explicit initial value. case init value just set mean normal distribution, 40. also sets prior different mean initial value slope_mu parameter. paramaters left default priors initial values.","code":"random_slope_model <- LongitudinalRandomSlope(     intercept = prior_normal(40, 5),     slope_mu = prior_normal(10, 2, init = 30) )"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"separate-models","dir":"Articles","previous_headings":"Model Specification","what":"Separate Models","title":"Model Fitting","text":"also possible link longitudinal survival models, using special LinkNone link specification. example, allow fit two models separately, MCMC chain.","code":"simple_model_no_link <- JointModel(     longitudinal = LongitudinalRandomSlope(),     link = LinkNone(),     survival = SurvivalWeibullPH() )"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"single-models","dir":"Articles","previous_headings":"Model Specification","what":"Single Models","title":"Model Fitting","text":"also possible specify longitudinal survival model. can estimated separate MCMC chains.","code":"single_longitudinal <- JointModel(     longitudinal = LongitudinalRandomSlope() ) single_survival <- JointModel(     survival = SurvivalWeibullPH() )"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Model Fitting","text":"can fit models, need prepare data right format.","code":""},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"simulating-data","dir":"Articles","previous_headings":"Data Preparation","what":"Simulating Data","title":"Model Fitting","text":"start simulated data set. assign 500 patients two treatment arms. use time grid 1 2000, e.g. specifying days randomization. use exponentially distributed censoring time mean 9000 days. use categorical covariate three levels , B C overall survival model, drawn uniformly three levels. (Note hardcoded moment, levels need , B, C.) use another continuous covariate overall survival model generated standard normal distribution, coefficient 0.3. longitudinal outcome, draw values random slope model given parameters. survival outcome, draw true value Weibull model. Note fairly easy put another choice, just need specify function time returning log baseline hazard given survival model. let’s run code : get message patients die day 2000, concern. Basically just gives us feeling many survival events included data set.","code":"set.seed(129) sim_data <- simulate_joint_data(     n_arm = c(500, 500),     times = 1:2000,     lambda_cen = 1 / 9000,     beta_cat = c(         \"A\" = 0,         \"B\" = -0.1,         \"C\" = 0.5     ),     beta_cont = 0.3,     lm_fun = sim_lm_random_slope(         intercept = 30,         slope_mu = c(1, 2),         slope_sigma = 0.2,         sigma = 3,         phi = 0.1     ),     os_fun = sim_os_weibull(         lambda = 1 / 300,         gamma = 0.97     ) ) #> 11 patients did not die before max(times)"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"formatting-data","dir":"Articles","previous_headings":"Data Preparation","what":"Formatting Data","title":"Model Fitting","text":"Next bring data right format. start extracting data individual data sets, reducing longitudinal data specific time points. Let’s quick look format: survival data : - patient ID - time point - continuous covariate value - categorical covariate level - event indicator (1 observed, 0 censored) - study ID - treatment arm longitudinal data : - patient ID - time point - sum longest diameters (SLD) - study ID - treatment arm - observation flag Finally, wrap data formatting functions. mapping column names required variables happens.","code":"os_data <- sim_data$os long_data <- sim_data$lm |>     dplyr::filter(time %in% c(1, 50, 100, 150, 200, 250, 300)) |>     dplyr::arrange(time, pt) head(os_data) #> # A tibble: 6 × 7 #>   pt         time cov_cont cov_cat event study   arm     #>   <chr>     <dbl>    <dbl> <fct>   <dbl> <fct>   <fct>   #> 1 pt_00001  135     -1.12  C           1 Study-1 Group-1 #> 2 pt_00002 1385     -0.990 B           1 Study-1 Group-1 #> 3 pt_00003  278     -1.37  C           1 Study-1 Group-1 #> 4 pt_00004   45.4   -1.36  C           0 Study-1 Group-1 #> 5 pt_00005  511      2.00  B           1 Study-1 Group-1 #> 6 pt_00006  452      0.696 B           1 Study-1 Group-1 head(long_data) #> # A tibble: 6 × 6 #>   pt        time   sld study   arm     observed #>   <chr>    <dbl> <dbl> <fct>   <fct>   <lgl>    #> 1 pt_00001     1  31.0 Study-1 Group-1 TRUE     #> 2 pt_00002     1  27.3 Study-1 Group-1 TRUE     #> 3 pt_00003     1  33.8 Study-1 Group-1 TRUE     #> 4 pt_00004     1  32.5 Study-1 Group-1 TRUE     #> 5 pt_00005     1  31.6 Study-1 Group-1 TRUE     #> 6 pt_00006     1  30.0 Study-1 Group-1 TRUE joint_data <- DataJoint(     survival = DataSurvival(         data = os_data,         formula = Surv(time, event) ~ cov_cat + cov_cont,         subject = \"pt\",         arm = \"arm\",         study = \"study\"     ),     longitudinal = DataLongitudinal(         data = long_data,         formula = sld ~ time,         subject = \"pt\",         threshold = 5     ) )"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Model Fitting","text":"Now let’s look can fit (joint) models.","code":""},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"debugging-stan-code","dir":"Articles","previous_headings":"Model Fitting","what":"Debugging Stan Code","title":"Model Fitting","text":"always possible read Stan code contained JointModel object, using write_stan():","code":"tmp <- tempfile() write_stan(simple_model, file_path = tmp) first_part <- head(readLines(tmp), 10) cat(paste(first_part, collapse = \"\\n\")) #> functions { #>     // #>     // Source - base/functions.stan #>     // #>  #>     // Constant used in below. #>     real neg_log_sqrt_2_pi() { #>         return -0.9189385332046727; #>     }"},{"path":"https://genentech.github.io/jmpost/main/articles/model_fitting.html","id":"sampling-parameters","dir":"Articles","previous_headings":"Model Fitting","what":"Sampling Parameters","title":"Model Fitting","text":"Finally, sampleStanModel() kicking MCMC sampler via cmdstanr backend. Note exe_file used specify location compiled Stan file, e.g. relative current working directory. can see couple red warnings beginning sampling. However, concern persist. sampling finishes, can inspect parameter distributions. using cmdstanr functions, results element class CmdStanMCMC.","code":"mcmc_results <- sampleStanModel(     simple_model,     data = joint_data,     iter_sampling = 500,     iter_warmup = 500,     chains = 1,     parallel_chains = 1,     exe_file = file.path(\"local\", \"full\") ) #> CmdStan path set to: /root/.cmdstan/cmdstan-2.32.2 #> Running MCMC with 1 chain... #>  #> Chain 1 Iteration:   1 / 1000 [  0%]  (Warmup) #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/tmp/Rtmpa2y9j3/model-8a36116f2c8.stan', line 299, column 8 to line 303, column 10) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: #> Chain 1 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/tmp/Rtmpa2y9j3/model-8a36116f2c8.stan', line 299, column 8 to line 303, column 10) #> Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, #> Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. #> Chain 1 #> Chain 1 Iteration: 100 / 1000 [ 10%]  (Warmup)  #> Chain 1 Iteration: 200 / 1000 [ 20%]  (Warmup)  #> Chain 1 Iteration: 300 / 1000 [ 30%]  (Warmup)  #> Chain 1 Iteration: 400 / 1000 [ 40%]  (Warmup)  #> Chain 1 Iteration: 500 / 1000 [ 50%]  (Warmup)  #> Chain 1 Iteration: 501 / 1000 [ 50%]  (Sampling)  #> Chain 1 Iteration: 600 / 1000 [ 60%]  (Sampling)  #> Chain 1 Iteration: 700 / 1000 [ 70%]  (Sampling)  #> Chain 1 Iteration: 800 / 1000 [ 80%]  (Sampling)  #> Chain 1 Iteration: 900 / 1000 [ 90%]  (Sampling)  #> Chain 1 Iteration: 1000 / 1000 [100%]  (Sampling)  #> Chain 1 finished in 187.4 seconds. vars <- c(     \"lm_rs_intercept\",     \"lm_rs_slope_mu\",     \"lm_rs_slope_sigma\",     \"lm_rs_sigma\",     \"link_lm_phi\",     \"sm_weibull_ph_lambda\",     \"sm_weibull_ph_gamma\",     \"beta_os_cov\" ) mcmc_results@results$summary(vars) #> Warning: The ESS has been capped to avoid unstable estimates.  #> Warning: The ESS has been capped to avoid unstable estimates.  #> Warning: The ESS has been capped to avoid unstable estimates. #> # A tibble: 11 × 10 #>    variable       mean   median      sd     mad       q5      q95  rhat ess_bulk #>    <chr>         <num>    <num>   <num>   <num>    <num>    <num> <num>    <num> #>  1 lm_rs_int… 30.0     30.0     4.36e-2 4.18e-2 29.9     30.0     1.00      270. #>  2 lm_rs_slo…  1.00     1.00    9.43e-3 9.57e-3  0.989    1.02    0.998    1349. #>  3 lm_rs_slo…  2.01     2.01    8.63e-3 8.67e-3  2.00     2.03    1.00     1064. #>  4 lm_rs_slo…  0.200    0.200   4.98e-3 5.09e-3  0.192    0.208   0.999    1349. #>  5 lm_rs_sig…  2.90     2.90    1.79e-2 1.76e-2  2.88     2.93    1.00     1349. #>  6 link_lm_p…  0.0549   0.0545  5.99e-2 6.05e-2 -0.0399   0.152   0.999     448. #>  7 sm_weibul…  0.00390  0.00383 7.46e-4 7.38e-4  0.00282  0.00522 1.00      320. #>  8 sm_weibul…  0.964    0.964   2.48e-2 2.37e-2  0.921    1.01    1.01      371. #>  9 beta_os_c… -0.243   -0.246   8.65e-2 8.74e-2 -0.383   -0.0952  1.00      627. #> 10 beta_os_c…  0.441    0.441   8.03e-2 8.33e-2  0.314    0.577   0.998     781. #> 11 beta_os_c…  0.290    0.288   3.23e-2 2.72e-2  0.235    0.348   1.01      588. #> # ℹ 1 more variable: ess_tail <num>"},{"path":"https://genentech.github.io/jmpost/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Craig Gower-Page. Author, maintainer. Georgios Kazantzidis. Author. Daniel Sabanes Bove. Author. Xiaoyan Fang. Author. Francois Mercier. Author. Isaac Gravestock. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://genentech.github.io/jmpost/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gower-Page C, Kazantzidis G, Sabanes Bove D, Fang X, Mercier F, Gravestock (2023). jmpost: Joint Models Predicting Overall Survival Trajectories. R package version 0.0.0.9000.","code":"@Manual{,   title = {jmpost: Joint Models for Predicting Overall Survival Trajectories},   author = {Craig Gower-Page and Georgios Kazantzidis and Daniel {Sabanes Bove} and Xiaoyan Fang and Francois Mercier and Isaac Gravestock},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"https://genentech.github.io/jmpost/main/index.html","id":"jmpost","dir":"","previous_headings":"","what":"Joint Models for Predicting Overall Survival Trajectories","title":"Joint Models for Predicting Overall Survival Trajectories","text":"goal jmpost package fit joint models involving: parametric time--event sub-model, nonlinear (linear) mixed-effect sub-model, describing individual time profiles (.e. trajectories) continuous marker, link function (.k.. association term). specifically, model implemented package utilizes modeling framework described previously [1-3] link overall survival tumor size data oncology clinical trials. [1] Tardivon et al. Association tumor size kinetics survival patients urothelial carcinoma treated atezolizumab: Implications patient follow-. Clin Pharm Ther, 2019.[2] Kerioui et al. Bayesian inference using Hamiltonian Monte-Carlo algorithm nonlinear joint modeling context cancer immunotherapy. Stat Med, 2020.[3] Kerioui et al. Modelling association biomarkers clinical outcome: introduction nonlinear joint models. Br J Clin Pharm, 2022. models implemented STAN, package provides flexible user interface. Please reach us via issues email (see DESCRIPTION file) comments questions like get involved ongoing development, thank !","code":""},{"path":"https://genentech.github.io/jmpost/main/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Joint Models for Predicting Overall Survival Trajectories","text":"GitHub can install current development version GitHub : Please note package requires cmdstanr. CRAN package published CRAN yet.","code":"if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"genentech/jmpost\")"},{"path":"https://genentech.github.io/jmpost/main/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Joint Models for Predicting Overall Survival Trajectories","text":"See also model fitting vignette details. present basic example . First simulate data set. practice want follow similar structure input data use DataJoint() bring right format. specify joint model, use Generalized Stein-Fojo model longitudinal part, Weibull proportional hazards model survival part. longitudinal model impacts hazard via term derivative another term time--growth. Finally can sample parameters via MCMC underlying Stan model. Note real application choose warm sampling iterations.","code":"library(jmpost) set.seed(321) sim_data <- simulate_joint_data(     lm_fun = sim_lm_random_slope(),     os_fun = sim_os_exponential(1 / 300) ) #> 1 patients did not die before max(times) os_data <- sim_data$os long_data <- sim_data$lm |>     dplyr::filter(time %in% c(1, 50, 100, 150, 200, 250, 300)) |>     dplyr::arrange(time, pt)  joint_data <- DataJoint(     survival = DataSurvival(         data = os_data,         formula = Surv(time, event) ~ cov_cat + cov_cont,         subject = \"pt\",         arm = \"arm\",         study = \"study\"     ),     longitudinal = DataLongitudinal(         data = long_data,         formula = sld ~ time,         subject = \"pt\",         threshold = 5     ) ) joint_model <- JointModel(     longitudinal = LongitudinalGSF(),     link = LinkGSF(),     survival = SurvivalWeibullPH() ) mcmc_results <- sampleStanModel(     joint_model,     data = joint_data,     iter_sampling = 100,     iter_warmup = 100,     chains = 1,     parallel_chains = 1,     exe_file = tempfile() )"},{"path":"https://genentech.github.io/jmpost/main/index.html","id":"citing-jmpost","dir":"","previous_headings":"","what":"Citing jmpost","title":"Joint Models for Predicting Overall Survival Trajectories","text":"cite jmpost please see .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataJoint-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DataJoint — DataJoint-class","title":"DataJoint — DataJoint-class","text":"DataJoint class handles combining data DataSurvival object DataLongitudinal object.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataJoint-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataJoint — DataJoint-class","text":"","code":"DataJoint(survival, longitudinal)"},{"path":"https://genentech.github.io/jmpost/main/reference/DataJoint-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataJoint — DataJoint-class","text":"survival (DataSurvival) object created DataSurvival(). longitudinal (DataLongitudinal) object created DataLongitudinal().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataJoint-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DataJoint — DataJoint-class","text":".list(x), (x, \"list\"): Coerces x list data components required fitting JointModel(). See vignette (TODO) details.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataJoint-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"DataJoint — DataJoint-class","text":"survival (DataSurvival) object created DataSurvival(). longitudinal (DataLongitudinal) object created DataLongitudinal().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataLongitudinal-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DataLongitudinal — DataLongitudinal-class","title":"DataLongitudinal — DataLongitudinal-class","text":"DataLongitudinal class handles processing longitudinal data fitting Joint Model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataLongitudinal-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataLongitudinal — DataLongitudinal-class","text":"","code":"DataLongitudinal(data, formula, subject, threshold = NULL, time_grid = NULL)"},{"path":"https://genentech.github.io/jmpost/main/reference/DataLongitudinal-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataLongitudinal — DataLongitudinal-class","text":"data (data.frame) containing observed longitudinal data. formula (formula) form outcome ~ time, contain additional covariates. subject (string) name subject identifier variable. threshold (number) cut-value used declare observation censored (detection limit). time_grid (numeric) grid time points use providing samples longitudinal model fit functions. NULL, taken sequence 201 values minimum maximum observed times.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataLongitudinal-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DataLongitudinal — DataLongitudinal-class","text":".list(x), (x, \"list\"): Coerces x list data components required fitting JointModel. See vignette (TODO) details .data.frame(x)","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataLongitudinal-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"DataLongitudinal — DataLongitudinal-class","text":"data (data.frame) containing observed longitudinal data. Note observations contain missing values required variables removed slot. formula (formula) form outcome ~ time, contain additional covariates. subject (string) name subject identifier variable. threshold (number) cut-value used declare observation censored (detection limit). time_grid (numeric) grid time points use providing samples longitudinal model fit functions. NULL, taken sequence 201 values minimum maximum observed times.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/main/reference/DataSurvival-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSurvival — DataSurvival-class","title":"DataSurvival — DataSurvival-class","text":"DataSurvival class handles processing survival data fitting Joint Model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataSurvival-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSurvival — DataSurvival-class","text":"","code":"DataSurvival(data, formula, subject, arm, study, time_grid = NULL)"},{"path":"https://genentech.github.io/jmpost/main/reference/DataSurvival-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSurvival — DataSurvival-class","text":"data (data.frame) observed time--event data. formula (formula) form Surv(time, event) ~ cov1 + cov2 + .... See survival::Surv() details, though note package supports right censoring. subject (string) name subject identifier variable. arm (string) name treatment arm variable. study (string) name study variable. time_grid (numeric) grid time points use providing samples longitudinal model fit functions. NULL, taken sequence 201 values 0 maximum observed times.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/DataSurvival-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"DataSurvival — DataSurvival-class","text":"data (data.frame) observed time--event data. Note observations contain missing values required variables removed slot. formula (formula) form Surv(time, event) ~ cov1 + cov2 + .... See survival::Surv() details, though note package supports right censoring. subject (string) name subject identifier variable. arm (string) name treatment arm variable. study (string) name study variable. time_grid (numeric) grid time points use providing samples survival functions. NULL, taken sequence 201 values 0 maximum observed times.","code":""},{"path":[]},{"path":"https://genentech.github.io/jmpost/main/reference/JointModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModel — JointModel-class","title":"JointModel — JointModel-class","text":"JointModel","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/JointModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JointModel — JointModel-class","text":"","code":"JointModel(longitudinal = NULL, survival = NULL, link = NULL)"},{"path":"https://genentech.github.io/jmpost/main/reference/JointModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JointModel — JointModel-class","text":"longitudinal (LongitudinalModel NULL) longitudinal model. survival (SurvivalModel NULL) survival model. link (Link) link.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/JointModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"JointModel — JointModel-class","text":"stan (StanModule) code containing joint model specification. parameters (ParameterList) parameter specification.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/JointModelSamples-class.html","id":null,"dir":"Reference","previous_headings":"","what":"JointModelSamples — JointModelSamples-class","title":"JointModelSamples — JointModelSamples-class","text":"Contains samples JointModel.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/JointModelSamples-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"JointModelSamples — JointModelSamples-class","text":"model (JointModel) original model. data (list) data input. init (list) initial values. results (CmdStanMCMC) results sampleStanModel().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Link-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Link — Link-class","title":"Link — Link-class","text":"Link","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Link-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link — Link-class","text":"","code":"Link(stan = StanModule(), parameters = ParameterList(), ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/Link-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link — Link-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. ... additional arguments passed constructor.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Link-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Link — Link-class","text":"stan (StanModule) code containing link specification. parameters (ParameterList) parameter specification.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LinkGSF-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkGSF — LinkGSF-class","title":"LinkGSF — LinkGSF-class","text":"class extends general Link class LongitudinalGSF model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LinkGSF-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinkGSF — LinkGSF-class","text":"","code":"LinkGSF(components = list(link_gsf_dsld(), link_gsf_ttg()))"},{"path":"https://genentech.github.io/jmpost/main/reference/LinkGSF-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinkGSF — LinkGSF-class","text":"components (list) link components included.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LinkNone-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkNone — LinkNone-class","title":"LinkNone — LinkNone-class","text":"class extends general Link class specify link longitudinal time--event models.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LinkNone-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinkNone — LinkNone-class","text":"","code":"LinkNone()"},{"path":"https://genentech.github.io/jmpost/main/reference/LinkRandomSlope-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LinkRandomSlope — LinkRandomSlope-class","title":"LinkRandomSlope — LinkRandomSlope-class","text":"class extends general Link class LongitudinalRandomSlope model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LinkRandomSlope-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinkRandomSlope — LinkRandomSlope-class","text":"","code":"LinkRandomSlope(link_lm_phi = prior_normal(0.2, 0.5, init = 0.02))"},{"path":"https://genentech.github.io/jmpost/main/reference/LinkRandomSlope-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinkRandomSlope — LinkRandomSlope-class","text":"link_lm_phi (Prior) prior link coefficient random slope link contribution.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalGSF-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalGSF — LongitudinalGSF-class","title":"LongitudinalGSF — LongitudinalGSF-class","text":"class extends general LongitudinalModel class using Generalized Stein-Fojo (GSF) model longitudinal outcome.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalGSF-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalGSF — LongitudinalGSF-class","text":"","code":"LongitudinalGSF(   mu_bsld = prior_lognormal(log(55), 5, init = 55),   mu_ks = prior_lognormal(log(0.1), 0.5, init = 0.1),   mu_kg = prior_lognormal(log(0.1), 1, init = 0.1),   mu_phi = prior_beta(2, 8, init = 0.2),   omega_bsld = prior_lognormal(log(0.1), 1, init = 0.1),   omega_ks = prior_lognormal(log(0.1), 1, init = 0.1),   omega_kg = prior_lognormal(log(0.1), 1, init = 0.1),   omega_phi = prior_lognormal(log(0.1), 1, init = 0.1),   sigma = prior_lognormal(log(0.1), 0.8, init = 0.1) )"},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalGSF-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalGSF — LongitudinalGSF-class","text":"mu_bsld (Prior) mean baseline value mu_bsld. mu_ks (Prior) mean shrinkage rate mu_ks. mu_kg (Prior) mean growth rate mu_kg. mu_phi (Prior) mean shrinkage proportion mu_phi. omega_bsld (Prior) baseline value standard deviation omega_bsld. omega_ks (Prior) shrinkage rate standard deviation omega_ks. omega_kg (Prior) growth rate standard deviation omega_kg. omega_phi (Prior) shrinkage proportion standard deviation omega_phi. sigma (Prior) variance longitudinal values sigma.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalModel — LongitudinalModel-class","title":"LongitudinalModel — LongitudinalModel-class","text":"class extends general StanModel class comprise longitudinal model specification.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalModel — LongitudinalModel-class","text":"","code":"LongitudinalModel(stan = StanModule(), parameters = ParameterList(), ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalModel — LongitudinalModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalRandomSlope-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"class extends general LongitudinalModel class using random slope linear model longitudinal outcome.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalRandomSlope-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"","code":"LongitudinalRandomSlope(   intercept = prior_normal(30, 10, init = 30),   slope_mu = prior_normal(0, 15, init = 0.001),   slope_sigma = prior_cauchy(0, 4, init = 0.4),   sigma = prior_cauchy(0, 4, init = 0.4),   random_slope = prior_none(init = 0) )"},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalRandomSlope-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalRandomSlope — LongitudinalRandomSlope-class","text":"intercept (Prior) intercept. slope_mu (Prior) population slope slope_mu. slope_sigma (Prior) random slope standard deviation slope_sigma. sigma (Prior) variance longitudinal values sigma. random_slope (Prior) must prior_none(), just used specify initial values.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalSamples-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LongitudinalSamples — LongitudinalSamples-class","title":"LongitudinalSamples — LongitudinalSamples-class","text":"class extension listso can define specific longitudinal postprocessing methods .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalSamples-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LongitudinalSamples — LongitudinalSamples-class","text":"","code":"# S4 method for LongitudinalSamples,ANY,ANY,ANY [(x, i, j, ..., drop = TRUE)"},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalSamples-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LongitudinalSamples — LongitudinalSamples-class","text":"x (LongitudinalSamples) samples object subset. (vector) index vector. j used. ... used. drop used.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/LongitudinalSamples-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LongitudinalSamples — LongitudinalSamples-class","text":"subsetted LongitudinalSamples object.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Parameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter — Parameter-class","title":"Parameter — Parameter-class","text":"Stores name, prior distribution size parameter.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Parameter-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter — Parameter-class","text":"","code":"Parameter(prior, name, size = 1)"},{"path":"https://genentech.github.io/jmpost/main/reference/Parameter-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter — Parameter-class","text":"prior (Prior) parameter. name (string) parameter. size (numeric string) dimension parameter.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Parameter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Parameter — Parameter-class","text":"name (string) parameter. prior (Prior) parameter. size (numeric string) dimension parameter.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/ParameterList-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterList — ParameterList-class","title":"ParameterList — ParameterList-class","text":"class extends general list type containing Parameter specifications.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/ParameterList-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterList — ParameterList-class","text":"","code":"ParameterList(...)"},{"path":"https://genentech.github.io/jmpost/main/reference/ParameterList-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterList — ParameterList-class","text":"... (Parameter) parameter specifications include.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Prior-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior — Prior-class","title":"Prior — Prior-class","text":"Prior","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Prior-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Prior — Prior-class","text":"parameters (list) prior distribution parameters. repr (string) Stan code regular expression encoding distribution. init (numeric) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/StanModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModel — StanModel-class","title":"StanModel — StanModel-class","text":"StanModel","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/StanModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModel — StanModel-class","text":"","code":"StanModel(stan, parameters, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/StanModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModel — StanModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/StanModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"StanModel — StanModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/StanModule-class.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModule — StanModule-class","title":"StanModule — StanModule-class","text":"StanModule","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/StanModule-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StanModule — StanModule-class","text":"","code":"StanModule(x = \"\", priors = list(), inits = list(), ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/StanModule-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModule — StanModule-class","text":"x (string) file name Stan code parsed. priors (list) prior specifications. inits (list) initial values. ... additional arguments passed constructor.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/StanModule-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"StanModule — StanModule-class","text":"functions (character) functions block. data (character) data block. transformed_data (character) transformed_data block. parameters (character) parameters block. transformed_parameters (character) transformed_parameters block. model (character) model block. generated_quantities (character) generated_quantities block. priors (list) prior specifications. inits (list) initial values.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival Formula Specification — Surv","title":"Survival Formula Specification — Surv","text":"See survival::Surv() details.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/Surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival Formula Specification — Surv","text":"object class Surv.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalExponential-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalExponential — SurvivalExponential-class","title":"SurvivalExponential — SurvivalExponential-class","text":"class extends general SurvivalModel class using exponential survival model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalExponential-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalExponential — SurvivalExponential-class","text":"","code":"SurvivalExponential(lambda = prior_gamma(2, 5), beta = prior_normal(0, 5))"},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalExponential-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalExponential — SurvivalExponential-class","text":"lambda (Prior) exponential rate lambda. beta (Prior) covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalLogLogistic-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalLogLogistic — SurvivalLogLogistic-class","title":"SurvivalLogLogistic — SurvivalLogLogistic-class","text":"class extends general SurvivalModel class using log-logistic survival model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalLogLogistic-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalLogLogistic — SurvivalLogLogistic-class","text":"","code":"SurvivalLogLogistic(   lambda = prior_lognormal(log(0.1), 5, init = 0.1),   p = prior_gamma(2, 5, init = 0.5),   beta = prior_normal(0, 5) )"},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalLogLogistic-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalLogLogistic — SurvivalLogLogistic-class","text":"lambda (Prior) inverse median lambda. p (Prior) shape parameter p. beta (Prior) covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalModel — SurvivalModel-class","title":"SurvivalModel — SurvivalModel-class","text":"class extends general StanModel class comprise survival model specification.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalModel — SurvivalModel-class","text":"","code":"SurvivalModel(stan = StanModule(), parameters = ParameterList(), ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalModel — SurvivalModel-class","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalSamples-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalSamples — SurvivalSamples-class","title":"SurvivalSamples — SurvivalSamples-class","text":"class extension list can define specific survival postprocessing methods .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalSamples-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalSamples — SurvivalSamples-class","text":"","code":"# S4 method for SurvivalSamples,ANY,ANY,ANY [(x, i, j, ..., drop = TRUE)"},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalSamples-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalSamples — SurvivalSamples-class","text":"x (SurvivalSamples) samples object subset. (vector) index vector. j used. ... used. drop used.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalSamples-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SurvivalSamples — SurvivalSamples-class","text":"subsetted SurvivalSamples object.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalWeibullPH-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SurvivalWeibullPH — SurvivalWeibullPH-class","title":"SurvivalWeibullPH — SurvivalWeibullPH-class","text":"class extends general SurvivalModel class using Weibull proportional hazards survival model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalWeibullPH-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurvivalWeibullPH — SurvivalWeibullPH-class","text":"","code":"SurvivalWeibullPH(   lambda = prior_gamma(2, 0.5),   gamma = prior_gamma(2, 0.5),   beta = prior_normal(0, 5) )"},{"path":"https://genentech.github.io/jmpost/main/reference/SurvivalWeibullPH-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurvivalWeibullPH — SurvivalWeibullPH-class","text":"lambda (Prior) scale lambda. gamma (Prior) shape gamma. beta (Prior) covariates coefficients beta.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/addLink.html","id":null,"dir":"Reference","previous_headings":"","what":"addLink — addLink","title":"addLink — addLink","text":"Add link longitudinal model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/addLink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"addLink — addLink","text":"","code":"addLink(x, y, ...)  # S4 method for LongitudinalModel,Link addLink(x, y, ...)  # S4 method for LongitudinalModel,LinkNone addLink(x, y, ...)  # S4 method for LongitudinalModel,`NULL` addLink(x, y, ...)  # S4 method for `NULL`,Link addLink(x, y, ...)  # S4 method for `NULL`,`NULL` addLink(x, y, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/addLink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"addLink — addLink","text":"x longitudinal model. y link added. ... additional arguments.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/add_missing_stan_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Missing Stan Blocks — add_missing_stan_blocks","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"Add Missing Stan Blocks","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/add_missing_stan_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"","code":"add_missing_stan_blocks(x)"},{"path":"https://genentech.github.io/jmpost/main/reference/add_missing_stan_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"x (list) list Stan code blocks","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/add_missing_stan_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Missing Stan Blocks — add_missing_stan_blocks","text":"Amended list x blocks global variable STAN_BLOCKS contained.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation Methods for Different Classes — aggregate","title":"Aggregation Methods for Different Classes — aggregate","text":"aggregation methods allow group samples different objects.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation Methods for Different Classes — aggregate","text":"","code":"# S4 method for SurvivalSamples aggregate(x, groups, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregation Methods for Different Classes — aggregate","text":"x aggregate. groups (list) defining groups aggregate individual samples, names new group labels character vectors old individual sample labels. ... arguments passed aggregation methods.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.StanModule.html","id":null,"dir":"Reference","previous_headings":"","what":"as.StanModule — as.StanModule","title":"as.StanModule — as.StanModule","text":"Convert Link ParameterList StanModule.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.StanModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.StanModule — as.StanModule","text":"","code":"as.StanModule(object)  # S4 method for ParameterList as.StanModule(object)  # S4 method for Link as.StanModule(object)"},{"path":"https://genentech.github.io/jmpost/main/reference/as.StanModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.StanModule — as.StanModule","text":"object convert.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Character Conversion of Different Classes — as.character","title":"Character Conversion of Different Classes — as.character","text":"methods convert objects different classes character representation.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Character Conversion of Different Classes — as.character","text":"","code":"# S4 method for Prior as.character(x)  # S4 method for Parameter as.character(x)  # S4 method for ParameterList as.character(x)  # S4 method for StanModule as.character(x)  # S4 method for JointModel as.character(x)"},{"path":"https://genentech.github.io/jmpost/main/reference/as.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Character Conversion of Different Classes — as.character","text":"x convert.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Frame Conversion of Different Classes — as.data.frame","title":"Data Frame Conversion of Different Classes — as.data.frame","text":"methods convert objects different classes data.frame representation.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Frame Conversion of Different Classes — as.data.frame","text":"","code":"# S4 method for DataLongitudinal as.data.frame(x, row.names = NULL, optional = FALSE, ...)  # S4 method for DataSurvival as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Frame Conversion of Different Classes — as.data.frame","text":"x convert. row.names used. optional used. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Conversion of Different Classes — as.list","title":"List Conversion of Different Classes — as.list","text":"methods convert objects different classes list representation.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Conversion of Different Classes — as.list","text":"","code":"# S4 method for DataLongitudinal as.list(x)  # S4 method for DataSurvival as.list(x, ...)  # S4 method for DataJoint as.list(x)  # S4 method for ParameterList as.list(x)  # S4 method for StanModule as.list(x)  # S4 method for StanModel as.list(x)"},{"path":"https://genentech.github.io/jmpost/main/reference/as.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Conversion of Different Classes — as.list","text":"x convert. ... used.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"Merging Code Blocks Stan Code Character Vector","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"","code":"as_stan_file(   functions = \"\",   data = \"\",   transformed_data = \"\",   parameters = \"\",   transformed_parameters = \"\",   model = \"\",   generated_quantities = \"\" )"},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"functions (character) code block. data (character) code block. transformed_data (character) code block. parameters (character) code block. transformed_parameters (character) code block. model (character) code block. generated_quantities (character) code block.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merging Code Blocks into Stan Code Character Vector — as_stan_file","text":"Character vector complete Stan code.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"Conversion Character Vector Stan Code Block List","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"","code":"as_stan_fragments(x)"},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"x (character) single Stan code vector.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"list Stan code blocks.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/as_stan_fragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion of Character Vector into Stan Code Block List — as_stan_fragments","text":"Function works code format   say support code inline format .e.","code":"data {     <code> } model {     <code> } data { <code> } model { <code> }"},{"path":"https://genentech.github.io/jmpost/main/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Methods for Different Classes — autoplot","title":"Plotting Methods for Different Classes — autoplot","text":"plot methods visualize various objects.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Methods for Different Classes — autoplot","text":"","code":"# S4 method for LongitudinalSamples autoplot(object, ...)  # S4 method for SurvivalSamples autoplot(object, add_km = TRUE, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Methods for Different Classes — autoplot","text":"object plot. ... arguments passed plotting methods. add_km (flag) whether add Kaplan-Meier plot survival data plots.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/compileStanModel.html","id":null,"dir":"Reference","previous_headings":"","what":"compileStanModel — compileStanModel","title":"compileStanModel — compileStanModel","text":"Compile Stan module.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/compileStanModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compileStanModel — compileStanModel","text":"","code":"compileStanModel(object, exe_file)  # S4 method for StanModule,character compileStanModel(object, exe_file)  # S4 method for StanModule,empty compileStanModel(object, exe_file)  # S4 method for JointModel,ANY compileStanModel(object, exe_file)"},{"path":"https://genentech.github.io/jmpost/main/reference/compileStanModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compileStanModel — compileStanModel","text":"object module. exe_file (string) output file.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/expand_initial_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicate Single Values in a List — expand_initial_values","title":"Replicate Single Values in a List — expand_initial_values","text":"Replicate Single Values List","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/expand_initial_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicate Single Values in a List — expand_initial_values","text":"","code":"expand_initial_values(initial_values, sizes)"},{"path":"https://genentech.github.io/jmpost/main/reference/expand_initial_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicate Single Values in a List — expand_initial_values","text":"initial_values (list) initial values names. sizes (list) size corresponds element initial_values, matched names. attribute array must attached element, see replace_with_lookup().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/expand_initial_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicate Single Values in a List — expand_initial_values","text":"named list values, single values initial_values list replicated according corresponding values sizes list. Even size 1, value passed array corresponding attribute TRUE sizes.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/expand_initial_values.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Replicate Single Values in a List — expand_initial_values","text":"resulting list names original lists.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/extractVariableNames.html","id":null,"dir":"Reference","previous_headings":"","what":"extractVariableNames — extractVariableNames","title":"extractVariableNames — extractVariableNames","text":"Extract list variable names mapping key variables DataLongitudinal DataSurvival object.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/extractVariableNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extractVariableNames — extractVariableNames","text":"","code":"extractVariableNames(object)  # S4 method for DataLongitudinal extractVariableNames(object)  # S4 method for DataSurvival extractVariableNames(object)"},{"path":"https://genentech.github.io/jmpost/main/reference/extractVariableNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extractVariableNames — extractVariableNames","text":"object data object.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/getParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"getParameters — getParameters","title":"getParameters — getParameters","text":"Obtain parameters StanModel.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/getParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getParameters — getParameters","text":"","code":"getParameters(object)  # S4 method for StanModel getParameters(object)"},{"path":"https://genentech.github.io/jmpost/main/reference/getParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getParameters — getParameters","text":"object obtain parameters .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_arm_study_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_arm_study_data — get_arm_study_data","title":"get_arm_study_data — get_arm_study_data","text":"get_arm_study_data","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_arm_study_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_arm_study_data — get_arm_study_data","text":"","code":"get_arm_study_data(pt, arm, study)"},{"path":"https://genentech.github.io/jmpost/main/reference/get_arm_study_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_arm_study_data — get_arm_study_data","text":"pt (factor) subject identifiers. arm (factor) treatment arms length pt. study (factor) study identifiers length pt. function purely sub-component .list(DataSurvival). purpose extract key logic function enable unit tests.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_arm_study_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_arm_study_data — get_arm_study_data","text":"list index_per_arm, n_index_per_arm, n_arms, arm_to_study_index, n_studies.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_missing_rownumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"Row Numbers Data Missing Variables","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_missing_rownumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"","code":"get_missing_rownumbers(df, formula = NULL)"},{"path":"https://genentech.github.io/jmpost/main/reference/get_missing_rownumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"df (data.frame) input data. formula (formula NULL) variables inspect missingness, NULL variables considered.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_missing_rownumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row Numbers of Data with Missing Variables — get_missing_rownumbers","text":"Numeric vector specifying rows contain least 1 missing observation inspected variables.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_timepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Time Intervals — get_timepoints","title":"Construct Time Intervals — get_timepoints","text":"Construct Time Intervals","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_timepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Time Intervals — get_timepoints","text":"","code":"get_timepoints(x)"},{"path":"https://genentech.github.io/jmpost/main/reference/get_timepoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Time Intervals — get_timepoints","text":"x (numeric) grid time points.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/get_timepoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Time Intervals — get_timepoints","text":"tibble lower, upper, time width.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/gsf_sld.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Stein-Fojo Functionals — gsf_sld","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"Generalized Stein-Fojo Functionals","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/gsf_sld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"","code":"gsf_sld(time, b, s, g, phi)  gsf_ttg(time, b, s, g, phi)  gsf_dsld(time, b, s, g, phi)"},{"path":"https://genentech.github.io/jmpost/main/reference/gsf_sld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"time (numeric) time grid. b (number) baseline. s (number) shrinkage. g (number) growth. phi (number) shrinkage proportion.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/gsf_sld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"function results.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/gsf_sld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Stein-Fojo Functionals — gsf_sld","text":"","code":"gsf_sld(1:10, 20, 0.3, 0.6, 0.2) #>  [1]   32.11717   55.31712   98.42064  177.57560  322.26111  586.23295 #>  [7] 1067.47112 1944.52955 3542.77148 6455.05984 gsf_ttg(1:10, 20, 0.3, 0.6, 0.2) #> [1] 0 gsf_dsld(1:10, 20, 0.3, 0.6, 0.2) #>  [1]   16.60336   31.21455   57.58873  105.46106  192.55340  351.14469 #>  [7]  640.04183 1166.39115 2125.42095 3872.85667"},{"path":"https://genentech.github.io/jmpost/main/reference/initialValues.html","id":null,"dir":"Reference","previous_headings":"","what":"initialValues — initialValues","title":"initialValues — initialValues","text":"Obtain list initial values passed Stan sampler.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/initialValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialValues — initialValues","text":"","code":"initialValues(object)  # S4 method for Prior initialValues(object)  # S4 method for Parameter initialValues(object)  # S4 method for ParameterList initialValues(object)  # S4 method for JointModel initialValues(object)  # S4 method for Link initialValues(object)"},{"path":"https://genentech.github.io/jmpost/main/reference/initialValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialValues — initialValues","text":"object get initial values .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/is_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Is String a Valid File? — is_file","title":"Is String a Valid File? — is_file","text":"utility function check string valid file . Used help address short comings file.exists() return TRUE directory well file.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/is_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is String a Valid File? — is_file","text":"","code":"is_file(filename = NULL)"},{"path":"https://genentech.github.io/jmpost/main/reference/is_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is String a Valid File? — is_file","text":"filename (string) file name.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/jmpost-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jmpost: Joint Models for Predicting Overall Survival Trajectories — jmpost-package","title":"jmpost: Joint Models for Predicting Overall Survival Trajectories — jmpost-package","text":"Implements joint models combining non-linear mixed effects model longitudinal measurements time--event model survival outcome. acronym 'jmpost' stands Joint Models Predicting Overall Survival Trajectories, refers application. phase 1 studies patients followed progression . Thus, reliable overall survival data hence estimates available. However, can use additional information previous clinical trials real-world data - can correlate tumor response data, longitudinal measurements, overall survival patients hazard ratios. Thereby can predict overall survival phase 1 study data therefore make better decisions.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/jmpost-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jmpost: Joint Models for Predicting Overall Survival Trajectories — jmpost-package","text":"Maintainer: Craig Gower-Page craig.gower-page@roche.com Authors: Georgios Kazantzidis georgios.kazantzidis@roche.com Daniel Sabanes Bove daniel.sabanes_bove@roche.com Xiaoyan Fang xiaoyan.fang@roche.com Francois Mercier francois.mercier@roche.com Isaac Gravestock isaac.gravestock@roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_abstract-class.html","id":null,"dir":"Reference","previous_headings":"","what":"link_gsf_abstract — link_gsf_abstract-class","title":"link_gsf_abstract — link_gsf_abstract-class","text":"Class specify contents LinkGSF.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_abstract-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"link_gsf_abstract — link_gsf_abstract-class","text":"","code":"link_gsf_abstract(stan, parameter, parameter_name, contribution_fname)"},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_abstract-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"link_gsf_abstract — link_gsf_abstract-class","text":"stan (StanModule) code containing Stan code specification. parameter (ParameterList) (single) parameter specification. parameter_name (character) name parameter. contribution_fname (character) function name contribution.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_abstract-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"link_gsf_abstract — link_gsf_abstract-class","text":"stan (StanModule) Stan code. parameter (ParameterList) parameter specification. parameter_name (character) name parameter. contribution_fname (character) function name contribution.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_abstract-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"link_gsf_abstract — link_gsf_abstract-class","text":"functions part stan used.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_dsld-class.html","id":null,"dir":"Reference","previous_headings":"","what":"link_gsf_dsld — link_gsf_dsld-class","title":"link_gsf_dsld — link_gsf_dsld-class","text":"class extends general link_gsf_abstract derivative sum longest diameters (dsld) link contribution.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_dsld-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"link_gsf_dsld — link_gsf_dsld-class","text":"","code":"link_gsf_dsld(beta = prior_normal(0, 5, init = 0))"},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_dsld-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"link_gsf_dsld — link_gsf_dsld-class","text":"beta (Prior) prior link coefficient beta.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_ttg-class.html","id":null,"dir":"Reference","previous_headings":"","what":"link_gsf_ttg — link_gsf_ttg-class","title":"link_gsf_ttg — link_gsf_ttg-class","text":"class extends general link_gsf_abstract time--growth (ttg) link contribution.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_ttg-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"link_gsf_ttg — link_gsf_ttg-class","text":"","code":"link_gsf_ttg(gamma = prior_normal(0, 5, init = 0))"},{"path":"https://genentech.github.io/jmpost/main/reference/link_gsf_ttg-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"link_gsf_ttg — link_gsf_ttg-class","text":"gamma (Prior) prior link coefficient gamma.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/longitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"longitudinal — longitudinal","title":"longitudinal — longitudinal","text":"Obtain longitudinal fit samples JointModelSamples.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/longitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"longitudinal — longitudinal","text":"","code":"longitudinal(object, ...)  # S4 method for JointModelSamples longitudinal(object, patients = NULL, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/longitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"longitudinal — longitudinal","text":"object samples extract longitudinal fits . ... additional options. patients (character NULL) optional subset patients longitudinal fit samples extracted, default NULL meaning patients.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"merge — merge","title":"merge — merge","text":"Merge two StanModule ParameterList objects.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge — merge","text":"","code":"merge(x, y, ...)  # S4 method for ParameterList,ParameterList merge(x, y)  # S4 method for StanModule,StanModule merge(x, y, ...)  # S4 method for StanModel,`NULL` merge(x, y, ...)  # S4 method for `NULL`,StanModel merge(x, y, ...)  # S4 method for StanModule,`NULL` merge(x, y, ...)  # S4 method for `NULL`,StanModule merge(x, y, ...)  # S4 method for ParameterList,`NULL` merge(x, y, ...)  # S4 method for `NULL`,ParameterList merge(x, y, ...)  # S4 method for `NULL`,`NULL` merge(x, y, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge — merge","text":"x first module. y second module. ... additional arguments.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/names.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of Different Classes — names","title":"Names of Different Classes — names","text":"methods return names objects different classes.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of Different Classes — names","text":"","code":"# S4 method for Parameter names(x)  # S4 method for ParameterList names(x)"},{"path":"https://genentech.github.io/jmpost/main/reference/names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of Different Classes — names","text":"x get names .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior Function Arguments — prior_arguments","title":"Prior Function Arguments — prior_arguments","text":"documentation lists conventional arguments Prior constructors.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior Function Arguments — prior_arguments","text":"init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Prior Distribution — prior_beta","title":"Beta Prior Distribution — prior_beta","text":"Beta Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Prior Distribution — prior_beta","text":"","code":"prior_beta(a, b, init = a/(a + b))"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Prior Distribution — prior_beta","text":"(number) first parameter. b (number) second parameter init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_cauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Cauchy Prior Distribution — prior_cauchy","title":"Cauchy Prior Distribution — prior_cauchy","text":"Cauchy Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_cauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cauchy Prior Distribution — prior_cauchy","text":"","code":"prior_cauchy(mu, sigma, init = mu)"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_cauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cauchy Prior Distribution — prior_cauchy","text":"mu (number) mean. sigma (number) scale. init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma Prior Distribution — prior_gamma","title":"Gamma Prior Distribution — prior_gamma","text":"Gamma Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma Prior Distribution — prior_gamma","text":"","code":"prior_gamma(alpha, beta, init = alpha/beta)"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma Prior Distribution — prior_gamma","text":"alpha (number) shape. beta (number) inverse scale. init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Normal Prior Distribution — prior_lognormal","title":"Log-Normal Prior Distribution — prior_lognormal","text":"Log-Normal Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Normal Prior Distribution — prior_lognormal","text":"","code":"prior_lognormal(mu, sigma, init = exp(mu + (sigma^2)/2))"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Normal Prior Distribution — prior_lognormal","text":"mu (number) mean logarithm. sigma (number) standard deviation logarithm. init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_none.html","id":null,"dir":"Reference","previous_headings":"","what":"Only Initial Values Specification — prior_none","title":"Only Initial Values Specification — prior_none","text":"Initial Values Specification","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only Initial Values Specification — prior_none","text":"","code":"prior_none(init = 1e-05)"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Only Initial Values Specification — prior_none","text":"init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal Prior Distribution — prior_normal","title":"Normal Prior Distribution — prior_normal","text":"Normal Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal Prior Distribution — prior_normal","text":"","code":"prior_normal(mu, sigma, init = mu)"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal Prior Distribution — prior_normal","text":"mu (number) mean. sigma (number) standard deviation. init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_std_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Normal Prior Distribution — prior_std_normal","title":"Standard Normal Prior Distribution — prior_std_normal","text":"Standard Normal Prior Distribution","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/prior_std_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Normal Prior Distribution — prior_std_normal","text":"","code":"prior_std_normal(init = 0)"},{"path":"https://genentech.github.io/jmpost/main/reference/prior_std_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Normal Prior Distribution — prior_std_normal","text":"init (number) initial value.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/pt_2_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"pt_2_factor — pt_2_factor","title":"pt_2_factor — pt_2_factor","text":"Converts subject identifiers factors. pt already factor re-level ensure levels alphabetical order. ensure DataLongitudinal DataSurvival use identical index numbers subjects ensure data alignment joint model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/pt_2_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pt_2_factor — pt_2_factor","text":"","code":"pt_2_factor(pt)"},{"path":"https://genentech.github.io/jmpost/main/reference/pt_2_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pt_2_factor — pt_2_factor","text":"pt (character factor) subject identifiers.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/pt_2_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pt_2_factor — pt_2_factor","text":"factor levels alphabetical order.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/read_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan Code as Character — read_stan","title":"Stan Code as Character — read_stan","text":"Stan Code Character","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/read_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan Code as Character — read_stan","text":"","code":"read_stan(string)"},{"path":"https://genentech.github.io/jmpost/main/reference/read_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan Code as Character — read_stan","text":"string Character, either absolute path stan file, name stan file package directory stan code string.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/remove_missing_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Rows with Missing Variables — remove_missing_rows","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"Removes rows data set contain missing values inspected variables. Allows users specify variables inspect missing values based either formula character vector variable names.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/remove_missing_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"","code":"remove_missing_rows(data, formula, extra_vars)"},{"path":"https://genentech.github.io/jmpost/main/reference/remove_missing_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"data (data.frame) input data. formula (formula NULL) variables inspect missingness. extra_vars (character) additional variables inspect missingness.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/remove_missing_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Rows with Missing Variables — remove_missing_rows","text":"data removing observations contain missing values required variables. Note additional variables listed formula extra_vars dropped may still contain missing values.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/replace_with_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Character Size by Looked Up Numbers — replace_with_lookup","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"Replace Character Size Looked Numbers","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/replace_with_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"","code":"replace_with_lookup(sizes, data)"},{"path":"https://genentech.github.io/jmpost/main/reference/replace_with_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"sizes (list) may include character elements correspond names data list. data (list) data containing numeric values.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/replace_with_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"list sizes character elements sizes replaced corresponding numeric values data.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/replace_with_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"attribute array returned list element indicates whether parameter needs handled array. case size larger 1, size looked data, case flexible hence handled array Stan code.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/replace_with_lookup.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Replace Character Size by Looked Up Numbers — replace_with_lookup","text":"element final list sizes must single number.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sampleStanModel.html","id":null,"dir":"Reference","previous_headings":"","what":"sampleStanModel — sampleStanModel","title":"sampleStanModel — sampleStanModel","text":"Sample Stan Module.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sampleStanModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sampleStanModel — sampleStanModel","text":"","code":"sampleStanModel(object, ..., exe_file)  # S4 method for JointModel sampleStanModel(object, data, ..., exe_file = NULL)"},{"path":"https://genentech.github.io/jmpost/main/reference/sampleStanModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sampleStanModel — sampleStanModel","text":"object module. ... additional arguments. exe_file (string) output file. data (DataJoint list) input data.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/samples_median_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"Obtain Median Credible Intervals MCMC samples","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/samples_median_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"","code":"samples_median_ci(samples, level = 0.95)"},{"path":"https://genentech.github.io/jmpost/main/reference/samples_median_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"samples (matrix) samples rows parameters columns. level (number) credibility level use credible intervals.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/samples_median_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"data.frame columns median, lower upper.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/samples_median_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain Median and Credible Intervals from MCMC samples — samples_median_ci","text":"","code":"set.seed(123) samples <- cbind(rnorm(100, 0, 1), rexp(100, 0.5), rpois(100, 5)) samples_median_ci(samples) #>       median       lower     upper #> 1 0.06175631 -1.62117157  1.925078 #> 2 1.43032130  0.05393852  7.073300 #> 3 5.00000000  2.00000000 10.000000"},{"path":"https://genentech.github.io/jmpost/main/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing of Different Classes — show","title":"Printing of Different Classes — show","text":"methods print objects different classes.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing of Different Classes — show","text":"","code":"# S4 method for StanModule show(object)"},{"path":"https://genentech.github.io/jmpost/main/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing of Different Classes — show","text":"object print.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_gsf.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Simulation Function for Longitudinal Data from GSF Model — sim_lm_gsf","title":"Construct a Simulation Function for Longitudinal Data from GSF Model — sim_lm_gsf","text":"Construct Simulation Function Longitudinal Data GSF Model","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_gsf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Simulation Function for Longitudinal Data from GSF Model — sim_lm_gsf","text":"","code":"sim_lm_gsf(   sigma = 0.01,   mu_s = c(3, 4),   mu_g = c(0.2, 0.3),   mu_phi = c(0.1, 0.2),   mu_b = c(50, 60),   omega_b = 0.135,   omega_s = 0.15,   omega_g = 0.225,   omega_phi = 0.75,   link_dsld = 0,   link_ttg = 0,   .debug = FALSE )"},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_gsf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Simulation Function for Longitudinal Data from GSF Model — sim_lm_gsf","text":"sigma (number) variance longitudinal values. mu_s (numeric) mean shrinkage rates two treatment arms. mu_g (numeric) mean growth rates two treatment arms. mu_phi (numeric) mean shrinkage proportions two treatment arms. mu_b (numeric) mean baseline values two treatment arms. omega_b (number) baseline value standard deviation. omega_s (number) shrinkage rate standard deviation. omega_g (number) growth rate standard deviation. omega_phi (number) shrinkage proportion standard deviation. link_dsld (number) link coefficient derivative contribution. link_ttg (number) link coefficient time--growth contribution. .debug (flag) whether enter debug mode function return subset columns.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_gsf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Simulation Function for Longitudinal Data from GSF Model — sim_lm_gsf","text":"function argument lm_base can used simulate longitudinal data corresponding GSF model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_random_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Simulation Function for Longitudinal Data from Random Slope Model — sim_lm_random_slope","title":"Construct a Simulation Function for Longitudinal Data from Random Slope Model — sim_lm_random_slope","text":"Construct Simulation Function Longitudinal Data Random Slope Model","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_random_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Simulation Function for Longitudinal Data from Random Slope Model — sim_lm_random_slope","text":"","code":"sim_lm_random_slope(   intercept = 50,   slope_mu = c(0.01, 0.03),   slope_sigma = 0.5,   sigma = 2,   phi = 0.1,   .debug = FALSE )"},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_random_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Simulation Function for Longitudinal Data from Random Slope Model — sim_lm_random_slope","text":"intercept (number) mean baseline value. slope_mu (numeric) population slope two treatment arms. slope_sigma (number) random slope standard deviation. sigma (number) variance longitudinal values. phi (number) link coefficient random slope contribution. .debug (flag) whether enter debug mode function return subset columns.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_lm_random_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Simulation Function for Longitudinal Data from Random Slope Model — sim_lm_random_slope","text":"function argument lm_base can used simulate longitudinal data corresponding random slope model.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_exponential.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Log Hazard Function for the Exponential Model — sim_os_exponential","title":"Construct a Log Hazard Function for the Exponential Model — sim_os_exponential","text":"Construct Log Hazard Function Exponential Model","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_exponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Log Hazard Function for the Exponential Model — sim_os_exponential","text":"","code":"sim_os_exponential(lambda)"},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_exponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Log Hazard Function for the Exponential Model — sim_os_exponential","text":"lambda (number) rate parameter.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_exponential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Log Hazard Function for the Exponential Model — sim_os_exponential","text":"function time returning log hazard.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_loglogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Log Hazard Function for the Log-Logistic Model — sim_os_loglogistic","title":"Construct a Log Hazard Function for the Log-Logistic Model — sim_os_loglogistic","text":"Construct Log Hazard Function Log-Logistic Model","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_loglogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Log Hazard Function for the Log-Logistic Model — sim_os_loglogistic","text":"","code":"sim_os_loglogistic(lambda, p)"},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_loglogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Log Hazard Function for the Log-Logistic Model — sim_os_loglogistic","text":"lambda (number) inverse median parameter. p (number) shape parameter.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_loglogistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Log Hazard Function for the Log-Logistic Model — sim_os_loglogistic","text":"function time returning log hazard.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Log Hazard Function for the Weibull Model — sim_os_weibull","title":"Construct a Log Hazard Function for the Weibull Model — sim_os_weibull","text":"Construct Log Hazard Function Weibull Model","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Log Hazard Function for the Weibull Model — sim_os_weibull","text":"","code":"sim_os_weibull(lambda, gamma)"},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Log Hazard Function for the Weibull Model — sim_os_weibull","text":"lambda (number) scale parameter. gamma (number) shape parameter.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/sim_os_weibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Log Hazard Function for the Weibull Model — sim_os_weibull","text":"function time returning log hazard.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/simulate_joint_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulating Joint Longitudinal and Time-to-Event Data — simulate_joint_data","title":"Simulating Joint Longitudinal and Time-to-Event Data — simulate_joint_data","text":"Simulating Joint Longitudinal Time--Event Data","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/simulate_joint_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulating Joint Longitudinal and Time-to-Event Data — simulate_joint_data","text":"","code":"simulate_joint_data(   n_arm = c(50, 80),   times = 1:2000,   lambda_cen = 1/3,   beta_cont = 0.2,   beta_cat = c(A = 0, B = -0.4, C = 0.2),   lm_fun,   os_fun )"},{"path":"https://genentech.github.io/jmpost/main/reference/simulate_joint_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulating Joint Longitudinal and Time-to-Event Data — simulate_joint_data","text":"n_arm (numeric) numbers patients per treatment arm. times (numeric) time grid, e.g. specifying days randomization. lambda_cen (number) rate exponential censoring distribution. beta_cont (number) coefficient continuous covariate. beta_cat (numeric) coefficients categorical covariate levels. lm_fun (function) function lm_base generating longitudinal model outcomes. os_fun (function) function lm_base generating survival model outcomes.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/simulate_joint_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulating Joint Longitudinal and Time-to-Event Data — simulate_joint_data","text":"List simulated lm (longitudinal) os (survival) data sets.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/size.html","id":null,"dir":"Reference","previous_headings":"","what":"size — size","title":"size — size","text":"Obtain list parameter sizes.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"size — size","text":"","code":"size(object)  # S4 method for Parameter size(object)  # S4 method for ParameterList size(object)"},{"path":"https://genentech.github.io/jmpost/main/reference/size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"size — size","text":"object get parameter sizes .","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/stanmodel_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"StanModel Function Arguments — stanmodel_arguments","title":"StanModel Function Arguments — stanmodel_arguments","text":"documentation lists conventional arguments wrappers around StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/stanmodel_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StanModel Function Arguments — stanmodel_arguments","text":"stan (StanModule) code containing Stan code specification. parameters (ParameterList) parameter specification. parameter (ParameterList) (single) parameter specification. ... additional arguments StanModel().","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/survival.html","id":null,"dir":"Reference","previous_headings":"","what":"survival — survival","title":"survival — survival","text":"Obtain survival function samples JointModelSamples.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survival — survival","text":"","code":"survival(object, ...)  # S4 method for JointModelSamples survival(object, patients = NULL, ...)"},{"path":"https://genentech.github.io/jmpost/main/reference/survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survival — survival","text":"object samples extract survival function values . ... additional options. patients (character NULL) optional subset patients survival function samples extracted, default NULL meaning patients.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/write_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"write_stan — write_stan","title":"write_stan — write_stan","text":"Write Stan code Stan module.","code":""},{"path":"https://genentech.github.io/jmpost/main/reference/write_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_stan — write_stan","text":"","code":"write_stan(object, file_path)  # S4 method for JointModel write_stan(object, file_path)"},{"path":"https://genentech.github.io/jmpost/main/reference/write_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_stan — write_stan","text":"object module. file_path (string) output file.","code":""},{"path":"https://genentech.github.io/jmpost/main/news/index.html","id":"jmpost-0009000","dir":"Changelog","previous_headings":"","what":"jmpost 0.0.0.9000","title":"jmpost 0.0.0.9000","text":"TODO","code":""}]
