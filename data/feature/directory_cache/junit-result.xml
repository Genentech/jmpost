<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="DataJoint" timestamp="2023-08-16T16:10:14Z" hostname="fca3f5d84fc2" tests="4" skipped="0" failures="0" errors="0" time="0.773">
    <testcase time="0.672" classname="DataJoint" name="DataJoint_errors_if_subjects_don_t_allign_after"/>
    <testcase time="0.0590000000000002" classname="DataJoint" name="DataJoint_errors_if_subjects_don_t_allign_after"/>
    <testcase time="0.0329999999999995" classname="DataJoint" name="DataJoint_errors_if_subjects_don_t_allign_after"/>
    <testcase time="0.00900000000000034" classname="DataJoint" name="DataJoint_errors_if_subjects_don_t_allign_after"/>
  </testsuite>
  <testsuite name="DataLongitudinal" timestamp="2023-08-16T16:10:15Z" hostname="fca3f5d84fc2" tests="15" skipped="0" failures="0" errors="0" time="0.128">
    <testcase time="0.0350000000000001" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00600000000000023" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00600000000000023" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00399999999999956" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00200000000000067" classname="DataLongitudinal" name="DataLongitudinal_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.0109999999999992" classname="DataLongitudinal" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.0100000000000007" classname="DataLongitudinal" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.00999999999999979" classname="DataLongitudinal" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.00900000000000034" classname="DataLongitudinal" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.00999999999999979" classname="DataLongitudinal" name="time_grid_is_rejected_if_in_an_invalid_format"/>
  </testsuite>
  <testsuite name="DataSurvival" timestamp="2023-08-16T16:10:15Z" hostname="fca3f5d84fc2" tests="17" skipped="0" failures="0" errors="0" time="0.165">
    <testcase time="0.0489999999999995" classname="DataSurvival" name="Error_Handling"/>
    <testcase time="0.0150000000000006" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00599999999999934" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00500000000000078" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00500000000000078" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00499999999999989" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00399999999999956" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.00600000000000023" classname="DataSurvival" name="DataSurvival_being_rendered_to_list_is_as_expected_for_simple_inputs"/>
    <testcase time="0.0110000000000001" classname="DataSurvival" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.00999999999999979" classname="DataSurvival" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.00999999999999979" classname="DataSurvival" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.0100000000000007" classname="DataSurvival" name="time_grid_is_rejected_if_in_an_invalid_format"/>
    <testcase time="0.00899999999999945" classname="DataSurvival" name="time_grid_is_rejected_if_in_an_invalid_format"/>
  </testsuite>
  <testsuite name="JointModel" timestamp="2023-08-16T16:10:15Z" hostname="fca3f5d84fc2" tests="2" skipped="0" failures="0" errors="0" time="0.503">
    <testcase time="0.498" classname="JointModel" name="JointModel_smoke_tests"/>
    <testcase time="0.00499999999999989" classname="JointModel" name="JointModel_smoke_tests"/>
  </testsuite>
  <testsuite name="JointModelSamples" timestamp="2023-08-16T16:10:15Z" hostname="fca3f5d84fc2" tests="34" skipped="0" failures="0" errors="0" time="13.224">
    <testcase time="0.0120000000000005" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="6.267" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00200000000000067" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.000999999999999446" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00500000000000078" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.000999999999999446" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.000999999999999446" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00500000000000078" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.000999999999999446" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00500000000000078" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.000999999999999446" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00500000000000078" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="longitudinal_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.553000000000001" classname="JointModelSamples" name="longitudinal_allows_to_subset_patients"/>
    <testcase time="0.00199999999999889" classname="JointModelSamples" name="longitudinal_allows_to_subset_patients"/>
    <testcase time="0.00100000000000122" classname="JointModelSamples" name="longitudinal_allows_to_subset_patients"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="longitudinal_allows_to_subset_patients"/>
    <testcase time="0.0080000000000009" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="5.988" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00199999999999889" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00100000000000122" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.000999999999997669" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00200000000000244" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00100000000000122" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00100000000000122" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="survival_works_as_expected_for_JointModelSamples"/>
    <testcase time="0.315000000000001" classname="JointModelSamples" name="survival_allows_to_subset_patients"/>
    <testcase time="0.00199999999999889" classname="JointModelSamples" name="survival_allows_to_subset_patients"/>
    <testcase time="0.00100000000000122" classname="JointModelSamples" name="survival_allows_to_subset_patients"/>
    <testcase time="0.00499999999999901" classname="JointModelSamples" name="survival_allows_to_subset_patients"/>
  </testsuite>
  <testsuite name="LinkGSF" timestamp="2023-08-16T16:10:29Z" hostname="fca3f5d84fc2" tests="13" skipped="0" failures="0" errors="0" time="0.367">
    <testcase time="0.0130000000000017" classname="LinkGSF" name="LinkGSF_class_initialization_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="LinkGSF" name="LinkGSF_class_initialization_works_as_expected"/>
    <testcase time="0.103000000000002" classname="LinkGSF" name="LinkGSF_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.000999999999997669" classname="LinkGSF" name="LinkGSF_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.0160000000000018" classname="LinkGSF" name="link_gsf_ttg_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.00199999999999889" classname="LinkGSF" name="link_gsf_ttg_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.0180000000000007" classname="LinkGSF" name="link_gsf_dsld_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.00100000000000122" classname="LinkGSF" name="link_gsf_dsld_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.0169999999999995" classname="LinkGSF" name="link_gsf_identity_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.00199999999999889" classname="LinkGSF" name="link_gsf_identity_user_constructor_works_as_expected_with_defaults"/>
    <testcase time="0.093" classname="LinkGSF" name="LinkGSF_returns_correct_defaults_when_no_arguments_are_supplied"/>
    <testcase time="0.0480000000000018" classname="LinkGSF" name="LinkGSF_returns_correct_defaults_when_no_arguments_are_supplied"/>
    <testcase time="0.0519999999999996" classname="LinkGSF" name="LinkGSF_returns_correct_defaults_when_no_arguments_are_supplied"/>
  </testsuite>
  <testsuite name="LinkNone" timestamp="2023-08-16T16:10:29Z" hostname="fca3f5d84fc2" tests="5" skipped="0" failures="0" errors="0" time="0.039">
    <testcase time="0.0169999999999995" classname="LinkNone" name="LinkNone_object_is_generated_without_unexpected_input"/>
    <testcase time="0.00700000000000145" classname="LinkNone" name="LinkNone_object_is_generated_without_unexpected_input"/>
    <testcase time="0.00499999999999901" classname="LinkNone" name="LinkNone_object_is_generated_without_unexpected_input"/>
    <testcase time="0.00499999999999901" classname="LinkNone" name="LinkNone_object_is_generated_without_unexpected_input"/>
    <testcase time="0.00499999999999901" classname="LinkNone" name="LinkNone_object_is_generated_without_unexpected_input"/>
  </testsuite>
  <testsuite name="LinkRandomSlope" timestamp="2023-08-16T16:10:29Z" hostname="fca3f5d84fc2" tests="3" skipped="0" failures="0" errors="0" time="0.053">
    <testcase time="0.0420000000000016" classname="LinkRandomSlope" name="LinkRandomSlope_smoke_tests"/>
    <testcase time="0.00499999999999901" classname="LinkRandomSlope" name="LinkRandomSlope_smoke_tests"/>
    <testcase time="0.00600000000000023" classname="LinkRandomSlope" name="LinkRandomSlope_smoke_tests"/>
  </testsuite>
  <testsuite name="LongitudinalGSF" timestamp="2023-08-16T16:10:29Z" hostname="fca3f5d84fc2" tests="3" skipped="0" failures="0" errors="1" time="1.488">
    <testcase time="0.132000000000001" classname="LongitudinalGSF" name="LongitudinalGSF_works_as_expected_with_default_arguments"/>
    <testcase time="0.00199999999999889" classname="LongitudinalGSF" name="LongitudinalGSF_works_as_expected_with_default_arguments"/>
    <testcase time="1.354" classname="LongitudinalGSF" name="LongitudinalGSF_works_as_expected_with_a_single_study">
      <error type="error" message="Error in `if_else(is_windows(), &quot;.exe&quot;, &quot;&quot;)`: could not find function &quot;if_else&quot; ('test-LongitudinalGSF.R:46:5')">Error in `if_else(is_windows(), ".exe", "")`: could not find function "if_else"
Backtrace:
     x
  1. +-base::suppressWarnings(...) at test-LongitudinalGSF.R:46:4
  2. | \-base::withCallingHandlers(...)
  3. +-jmpost::sampleStanModel(...)
  4. \-jmpost::sampleStanModel(...)
  5.   \-jmpost (local) .local(object, ..., exe_dir = exe_dir)
  6.     +-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  7.     \-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  8.       +-jmpost::compileStanModel(object@stan, exe_dir)
  9.       \-jmpost::compileStanModel(object@stan, exe_dir)
 10.         +-jmpost::compileStanModel(object, exe_dir)
 11.         \-jmpost::compileStanModel(object, exe_dir)
 12.           +-base::file.path(...)
 13.           \-base::paste0(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="LongitudinalSamples" timestamp="2023-08-16T16:10:31Z" hostname="fca3f5d84fc2" tests="17" skipped="0" failures="0" errors="0" time="0.501">
    <testcase time="0.0390000000000015" classname="LongitudinalSamples" name="LongitudinalSamples_can_be_initialized"/>
    <testcase time="0.00499999999999901" classname="LongitudinalSamples" name="LongitudinalSamples_can_be_initialized"/>
    <testcase time="0.00900000000000034" classname="LongitudinalSamples" name="subsetting_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00199999999999889" classname="LongitudinalSamples" name="subsetting_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00400000000000134" classname="LongitudinalSamples" name="subsetting_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.236000000000001" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.0679999999999978" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00600000000000023" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00400000000000134" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00499999999999901" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.0530000000000008" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00499999999999901" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00500000000000256" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00499999999999901" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00400000000000134" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.0459999999999994" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
    <testcase time="0.00499999999999901" classname="LongitudinalSamples" name="autoplot_works_as_expected_for_LongitudinalSamples"/>
  </testsuite>
  <testsuite name="ParameterList" timestamp="2023-08-16T16:10:31Z" hostname="fca3f5d84fc2" tests="3" skipped="0" failures="0" errors="0" time="0.044">
    <testcase time="0.0330000000000013" classname="ParameterList" name="ParameterList_smoke_tests"/>
    <testcase time="0.00499999999999901" classname="ParameterList" name="ParameterList_smoke_tests"/>
    <testcase time="0.00600000000000023" classname="ParameterList" name="ParameterList_smoke_tests"/>
  </testsuite>
  <testsuite name="Parameters" timestamp="2023-08-16T16:10:31Z" hostname="fca3f5d84fc2" tests="4" skipped="0" failures="0" errors="0" time="0.03">
    <testcase time="0.0159999999999982" classname="Parameters" name="Parameters_smoke_tests"/>
    <testcase time="0.00400000000000134" classname="Parameters" name="Parameters_smoke_tests"/>
    <testcase time="0.00600000000000023" classname="Parameters" name="Parameters_smoke_tests"/>
    <testcase time="0.00400000000000134" classname="Parameters" name="Parameters_smoke_tests"/>
  </testsuite>
  <testsuite name="Prior" timestamp="2023-08-16T16:10:31Z" hostname="fca3f5d84fc2" tests="11" skipped="0" failures="0" errors="0" time="0.083">
    <testcase time="0.014999999999997" classname="Prior" name="Priors_work_as_expected"/>
    <testcase time="0.00500000000000256" classname="Prior" name="Priors_work_as_expected"/>
    <testcase time="0.00499999999999901" classname="Prior" name="Priors_work_as_expected"/>
    <testcase time="0.00499999999999901" classname="Prior" name="Priors_work_as_expected"/>
    <testcase time="0.0150000000000006" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
    <testcase time="0.00900000000000034" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
    <testcase time="0.00799999999999912" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
    <testcase time="0.00900000000000034" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
    <testcase time="0.00799999999999912" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
    <testcase time="0.00200000000000244" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
    <testcase time="0.00199999999999889" classname="Prior" name="Invalid_prior_parameters_are_rejected"/>
  </testsuite>
  <testsuite name="SurvivalExponential" timestamp="2023-08-16T16:10:31Z" hostname="fca3f5d84fc2" tests="2" skipped="0" failures="0" errors="2" time="3.892">
    <testcase time="2.274" classname="SurvivalExponential" name="SurvivalExponential_can_recover_true_parameter_no_covariates_">
      <error type="error" message="Error in `if_else(is_windows(), &quot;.exe&quot;, &quot;&quot;)`: could not find function &quot;if_else&quot; ('test-SurvivalExponential.R:42:5')">Error in `if_else(is_windows(), ".exe", "")`: could not find function "if_else"
Backtrace:
     x
  1. +-jmpost::sampleStanModel(...) at test-SurvivalExponential.R:42:4
  2. \-jmpost::sampleStanModel(...)
  3.   \-jmpost (local) .local(object, ..., exe_dir = exe_dir)
  4.     +-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  5.     \-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  6.       +-jmpost::compileStanModel(object@stan, exe_dir)
  7.       \-jmpost::compileStanModel(object@stan, exe_dir)
  8.         +-jmpost::compileStanModel(object, exe_dir)
  9.         \-jmpost::compileStanModel(object, exe_dir)
 10.           +-base::file.path(...)
 11.           \-base::paste0(...)</error>
    </testcase>
    <testcase time="1.618" classname="SurvivalExponential" name="SurvivalExponential_can_recover_true_parameter_including_covariates_">
      <error type="error" message="Error in `if_else(is_windows(), &quot;.exe&quot;, &quot;&quot;)`: could not find function &quot;if_else&quot; ('test-SurvivalExponential.R:99:5')">Error in `if_else(is_windows(), ".exe", "")`: could not find function "if_else"
Backtrace:
     x
  1. +-jmpost::sampleStanModel(...) at test-SurvivalExponential.R:99:4
  2. \-jmpost::sampleStanModel(...)
  3.   \-jmpost (local) .local(object, ..., exe_dir = exe_dir)
  4.     +-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  5.     \-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  6.       +-jmpost::compileStanModel(object@stan, exe_dir)
  7.       \-jmpost::compileStanModel(object@stan, exe_dir)
  8.         +-jmpost::compileStanModel(object, exe_dir)
  9.         \-jmpost::compileStanModel(object, exe_dir)
 10.           +-base::file.path(...)
 11.           \-base::paste0(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="SurvivalSamples" timestamp="2023-08-16T16:10:35Z" hostname="fca3f5d84fc2" tests="26" skipped="1" failures="0" errors="0" time="1.581">
    <testcase time="0.0429999999999993" classname="SurvivalSamples" name="SurvivalSamples_can_be_initialized"/>
    <testcase time="0.00500000000000256" classname="SurvivalSamples" name="SurvivalSamples_can_be_initialized"/>
    <testcase time="0.00900000000000034" classname="SurvivalSamples" name="subsetting_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00199999999999889" classname="SurvivalSamples" name="subsetting_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00399999999999778" classname="SurvivalSamples" name="subsetting_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.0150000000000006" classname="SurvivalSamples" name="aggregate_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00400000000000134" classname="SurvivalSamples" name="aggregate_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="aggregate_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="aggregate_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.453000000000003" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.0689999999999991" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00500000000000256" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.0659999999999989" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00600000000000023" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00400000000000134" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.0740000000000016" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.00499999999999901" classname="SurvivalSamples" name="autoplot_works_as_expected_for_SurvivalSamples"/>
    <testcase time="0.216999999999999" classname="SurvivalSamples" name="autoplot_does_not_show_the_Kaplan_Meier_plot_if_disabled"/>
    <testcase time="0.00500000000000256" classname="SurvivalSamples" name="autoplot_does_not_show_the_Kaplan_Meier_plot_if_disabled"/>
    <testcase time="0.215999999999998" classname="SurvivalSamples" name="autoplot_works_end_to_end_with_Kaplan_Meier_plot"/>
    <testcase time="0.00600000000000023" classname="SurvivalSamples" name="autoplot_works_end_to_end_with_Kaplan_Meier_plot"/>
    <testcase time="0.343" classname="SurvivalSamples" name="autoplot_works_end_to_end_with_Kaplan_Meier_plot">
      <skipped message="Reason: On CRAN ('test-SurvivalSamples.R:113:5')"/>
    </testcase>
  </testsuite>
  <testsuite name="compile" timestamp="2023-08-16T16:10:37Z" hostname="fca3f5d84fc2" tests="1" skipped="0" failures="0" errors="1" time="0.032">
    <testcase time="0.032" classname="compile" name="compileStanModel_doesn_t_error_if_the_directory_doesn_t_exist">
      <error type="error" message="Error in `if_else(is_windows(), &quot;.exe&quot;, &quot;&quot;)`: could not find function &quot;if_else&quot; ('test-compile.R:24:5')">Error in `if_else(is_windows(), ".exe", "")`: could not find function "if_else"
Backtrace:
    x
 1. +-jmpost::compileStanModel(smod, fpath) at test-compile.R:24:4
 2. \-jmpost::compileStanModel(smod, fpath)
 3.   +-base::file.path(...)
 4.   \-base::paste0(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="jinjar_render" timestamp="2023-08-16T16:10:37Z" hostname="fca3f5d84fc2" tests="3" skipped="0" failures="0" errors="0" time="0.05">
    <testcase time="0.0340000000000025" classname="jinjar_render" name="Basic_Jinjar_syntax_works_with_decorated_render_"/>
    <testcase time="0.00399999999999778" classname="jinjar_render" name="Basic_Jinjar_syntax_works_with_decorated_render_"/>
    <testcase time="0.0120000000000005" classname="jinjar_render" name="Global_variables_defined_by_decorated_render_are_usable"/>
  </testsuite>
  <testsuite name="misc_models" timestamp="2023-08-16T16:10:37Z" hostname="fca3f5d84fc2" tests="1" skipped="0" failures="0" errors="1" time="0.627">
    <testcase time="0.626999999999999" classname="misc_models" name="Longitudinal_Model_doesn_t_print_sampler_rejection_messages">
      <error type="error" message="Error in `if_else(is_windows(), &quot;.exe&quot;, &quot;&quot;)`: could not find function &quot;if_else&quot; ('test-misc_models.R:52:5')">Error in `if_else(is_windows(), ".exe", "")`: could not find function "if_else"
Backtrace:
     x
  1. +-testthat::capture_messages(...) at test-misc_models.R:52:4
  2. | \-base::withCallingHandlers(...)
  3. +-utils::capture.output(...) at test-misc_models.R:53:8
  4. | \-base::withVisible(...elt(i))
  5. +-jmpost::sampleStanModel(...) at test-misc_models.R:54:12
  6. \-jmpost::sampleStanModel(...)
  7.   \-jmpost (local) .local(object, ..., exe_dir = exe_dir)
  8.     +-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  9.     \-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
 10.       +-jmpost::compileStanModel(object@stan, exe_dir)
 11.       \-jmpost::compileStanModel(object@stan, exe_dir)
 12.         +-jmpost::compileStanModel(object, exe_dir)
 13.         \-jmpost::compileStanModel(object, exe_dir)
 14.           +-base::file.path(...)
 15.           \-base::paste0(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="model_random_slope" timestamp="2023-08-16T16:10:37Z" hostname="fca3f5d84fc2" tests="1" skipped="0" failures="0" errors="1" time="1.178">
    <testcase time="1.178" classname="model_random_slope" name="Random_Slope_Model_can_recover_known_parameter_values">
      <error type="error" message="Error in `if_else(is_windows(), &quot;.exe&quot;, &quot;&quot;)`: could not find function &quot;if_else&quot; ('test-model_random_slope.R:56:5')">Error in `if_else(is_windows(), ".exe", "")`: could not find function "if_else"
Backtrace:
     x
  1. +-jmpost::sampleStanModel(...) at test-model_random_slope.R:56:4
  2. \-jmpost::sampleStanModel(...)
  3.   \-jmpost (local) .local(object, ..., exe_dir = exe_dir)
  4.     +-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  5.     \-jmpost::compileStanModel(object, exe_dir = if (missing(exe_dir)) NULL else exe_dir)
  6.       +-jmpost::compileStanModel(object@stan, exe_dir)
  7.       \-jmpost::compileStanModel(object@stan, exe_dir)
  8.         +-jmpost::compileStanModel(object, exe_dir)
  9.         \-jmpost::compileStanModel(object, exe_dir)
 10.           +-base::file.path(...)
 11.           \-base::paste0(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="simulations" timestamp="2023-08-16T16:10:39Z" hostname="fca3f5d84fc2" tests="31" skipped="0" failures="0" errors="0" time="1.991">
    <testcase time="0.0429999999999993" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.0279999999999987" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_lm_gsf_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.0129999999999981" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_lm_random_slope_works_as_expected"/>
    <testcase time="0.725999999999999" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.00100000000000122" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.0139999999999993" classname="simulations" name="simulate_joint_data_works_as_expected"/>
    <testcase time="0.335999999999999" classname="simulations" name="simulate_joint_data_leads_to_valid_DataJoint_with_almost_only_default_arguments"/>
    <testcase time="0.368000000000002" classname="simulations" name="sim_os_exponential_creates_a_dataset_with_the_correct_parameter"/>
    <testcase time="0.361999999999998" classname="simulations" name="sim_os_weibull_creates_a_dataset_with_the_correct_parameter"/>
    <testcase time="0.00400000000000134" classname="simulations" name="sim_os_weibull_creates_a_dataset_with_the_correct_parameter"/>
    <testcase time="0.00499999999999901" classname="simulations" name="sim_os_weibull_creates_a_dataset_with_the_correct_parameter"/>
  </testsuite>
  <testsuite name="stan_functions" timestamp="2023-08-16T16:10:41Z" hostname="fca3f5d84fc2" tests="4" skipped="0" failures="0" errors="0" time="40.038">
    <testcase time="12.437" classname="stan_functions" name="GSF_SLD_function_works_as_expected"/>
    <testcase time="14.87" classname="stan_functions" name="Normal_Log_Density_functions_work_as_expected"/>
    <testcase time="0.0300000000000011" classname="stan_functions" name="Normal_Log_Density_functions_work_as_expected"/>
    <testcase time="12.701" classname="stan_functions" name="GSF_Identity_Link_Function_works_as_expected"/>
  </testsuite>
  <testsuite name="utilities" timestamp="2023-08-16T16:11:21Z" hostname="fca3f5d84fc2" tests="10" skipped="0" failures="0" errors="0" time="0.151">
    <testcase time="0.0229999999999961" classname="utilities" name="get_missing_rownumbers_works_as_expected"/>
    <testcase time="0.0169999999999959" classname="utilities" name="remove_missing_rows_works_as_expected"/>
    <testcase time="0.01400000000001" classname="utilities" name="expand_initial_values_works_as_expected"/>
    <testcase time="0.0139999999999958" classname="utilities" name="replace_with_lookup_works_and_sets_array_attributes_as_expected"/>
    <testcase time="0.0160000000000053" classname="utilities" name="replace_with_lookup_asserts_sizes_as_numbers_as_expected"/>
    <testcase time="0.0169999999999959" classname="utilities" name="replace_with_lookup_asserts_looked_up_sizes_as_numbers_as_expected"/>
    <testcase time="0.012999999999991" classname="utilities" name="samples_median_ci_works_as_expected"/>
    <testcase time="0.0130000000000052" classname="utilities" name="samples_median_ci_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="utilities" name="samples_median_ci_works_with_a_custom_credibility_level"/>
    <testcase time="0.0120000000000005" classname="utilities" name="samples_median_ci_works_with_a_custom_credibility_level"/>
  </testsuite>
</testsuites>
