% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Grid.R, R/GridEven.R, R/GridEvent.R,
%   R/GridFixed.R, R/GridGrouped.R, R/GridManual.R, R/GridObserved.R,
%   R/GridPopulation.R, R/GridPrediction.R
\docType{class}
\name{Grid-Dev}
\alias{Grid-Dev}
\alias{Grid-class}
\alias{.Grid}
\alias{GridEven-class}
\alias{.GridEven}
\alias{GridEvent-class}
\alias{.GridEvent}
\alias{GridFixed-class}
\alias{.GridFixed}
\alias{GridGrouped-class}
\alias{.GridGrouped}
\alias{GridManual-class}
\alias{.GridManual}
\alias{GridObserved-class}
\alias{.GridObserved}
\alias{GridPopulation-class}
\alias{.GridPopulation}
\alias{GridPrediction-class}
\alias{.GridPrediction}
\title{Grid Developer Notes}
\description{
Developer details for implementing / extending \code{Grid} objects for defining
generated quantities for \code{\link{SurvivalQuantities}} and \code{\link{LongitudinalQuantities}}.
}
\details{
All grid classes must inherit from the abstract \code{Grid} class.
All grid classes must provide \code{as.QuantityGenerator(object, data)} and
\code{as.QuantityCollapser(object, data)} methods where \code{data} is a \code{\link{DataJoint}} object.
These methods must return a \code{QuantityGenerator} and \code{QuantityCollapser} object respectively.
The \code{QuantityGenerator} object specifies unique subject/timepoint combinations that samples
should be generated at.
The \code{QuantityCollapser} object specifies how to combine these generated samples
to form the desired quantities.
As an example say we want to generate grouped samples for the groups \code{Group-1} and \code{Group-2}
which consist of the subjects \code{sub-1}, \code{sub-2} and \code{sub-3}, \code{sub-4} respectively at two time points
\code{10} and \code{20}. We can achieve this as follows:

\if{html}{\out{<div class="sourceCode">}}\preformatted{QuantityGenerator(
    times = c(10, 10, 10, 10, 20, 20, 20, 20),
    subjects = c("sub-1" "sub-2", "sub-3", "sub-4", "sub-1" "sub-2", "sub-3", "sub-4")
)
QuantityCollapser(
    times = c(10, 20, 10 , 20),
    groups = c("Group-1", "Group-1", "Group-2", "Group-2"),
    indexes = list(c(1, 2), c(5, 6), c(3, 4), c(7, 8))
)
}\if{html}{\out{</div>}}

For population based quantities use the \code{arms} and \code{studies} arguments of \code{QuantityGenerator}
instead of \code{subjects}.
}
\section{Slots}{

\describe{
\item{\code{subjects}}{(\code{character} or \code{NULL})\cr vector of subjects to extract quantities for.
If \code{NULL} will default to all subjects within the dataset.}

\item{\code{times}}{(\code{numeric} or \code{NULL})\cr vector of time points to extract quantities at.
If \code{NULL} will default to 201 evenly spaced timepoints between 0 and either the max}

\item{\code{groups}}{(\code{list})\cr named list of subjects to extract quantities for. See details.}
}}

\section{Group Specification}{

For \code{GridGrouped()}, \code{groups} must be a named list of character vectors. Each element of the list
must be a character vector of the subjects that will form the group where the element name
is the corresponding name of the group. For example if the goal was to create two groups
named \code{Group-1} and \code{Group-2} which are composed of the subjects \code{sub-1}, \code{sub-2} and
\code{sub-3}, \code{sub-4} respectively then this would be specified as:

\if{html}{\out{<div class="sourceCode">}}\preformatted{GridGrouped(
    groups = list(
        "Group-1" = c("sub-1", "sub-2"),
        "Group-2" = c("sub-3", "sub-4")
    )
)
}\if{html}{\out{</div>}}
}

\seealso{
\code{Quant-Dev}
}
\keyword{internal}
